{"version":3,"sources":["configHelper.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["__webpack_require__","r","__webpack_exports__","d","get","set","makeForm","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","newValue","value","config","name","arguments","undefined","type","Array","isArray","a","createElement","key","Object","keys","filter","conditions","map","Fragment","entries","options","entry","min","max","step","checked","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","console","log","configLocked","api","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","toggleMenu","closeUploadModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","onclick","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","isMenuOpen","onStateChange","newState","width","component_default","onClick","event","target","readOnly","writeLogs","openLogModal","exposeUpload","window","confirm","reboot","exposeShutdown","shutdown","QS","href","Component","connect","loaded","static","locked","misc","logger","writeToFile","configurationValues","serial","coms","testMessage","reader","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","numeric","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","configComIndex","closeConfigModal","onChange","changeConfig","com","ReactFitText_default","compressor","concat","classNames","comElement--content--testMode","testMode","internal","objectSpread","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","e","manualFunction","menuOptions","description","str","option","newMenuIndex","findIndex","tableCell--notFound","notFound","openModal","table","cells","normal","date","manual","menu","resetOnExe","Table","configCellIndex","cellConfig","String","fromCharCode","Math","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","individualTolerance","individualToleranceIncrement","individualToleranceLimit","generalTableColumns","Header","accessor","row","style","textAlign","Cell","individualColors","textColors","individualTableColumns","backgroundColor","original","increments","color","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","individualEntries","generalEntries","push","calibration","toFixed","comIndex","round","individual","success","matchedTolerance","react_table_es","data","columns","Logo","src","image","alt","title","resetTrigger","on","trigger","1","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetValue","condition","FTP","automatic","Infobar","loadConfig","ip","moment","format","getColumnWidth","rows","cellLength","apply","toConsumableArray","Main","logModalIsOpen","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","showPorts","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","Date","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","history","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","getState","forEach","document","newConfig","location","reload","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","p"],"mappings":"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","file":"static/js/main.16432dea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select name={name} value={get(config, name)}>\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              name={name}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { get, set, makeForm };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    console.log(\"click\");\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.toggleMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"button\" value=\"Import .xls\" onclick={() => {}} />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.toggleMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            Unlock settings\r\n            <Toggle\r\n              onClick={event => {\r\n                console.log(event.target);\r\n                this.toggleConfigLock();\r\n              }}\r\n              readOnly\r\n              checked={!this.props.configLocked}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={this.openLogModal}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={this.openUploadModal}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n                this.props.api.toggleMenu();\r\n              }\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\"\r\n        },\r\n        reader: {\r\n          name: \"MBDC Reader\",\r\n          type: \"checkbox\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate/Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          }\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\"\r\n        },\r\n        postfix: { name: \"Suffix\", type: \"text\" }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configComIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configComIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for com{this.state.configComIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configComIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {this.props.coms.map((com, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"comElement\"\r\n            onClick={\r\n              this.props.configLocked ? null : () => this.openConfigModal(index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": this.props.testMode\r\n              })}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText compressor={0.9}>\r\n                  <div>{com.entry}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    testMode: state.config.serial.testMode\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow 0\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout in milliseconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type=\"text\"\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = [{ value: \"\", description: \"\" }].concat(\r\n        (cell.formula.match(/{[0-9.]+:\\w+}/g) || []).map(str => {\r\n          const parts = str.split(\":\");\r\n          return {\r\n            value: Number(parts[0].slice(1)),\r\n            description: parts[1].slice(0, -1)\r\n          };\r\n        })\r\n      );\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) + 1;\r\n\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name)\r\n      .map((cell, index) => ({\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }));\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map((cell, index) => (\r\n            <TableCell\r\n              key={index}\r\n              cell={cell}\r\n              index={index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  }\r\n};\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <span>\r\n            <Toggle\r\n              checked={this.state.showIndividualTable}\r\n              onChange={this.toggleIndividualTable}\r\n            />\r\n            Show individual entries\r\n          </span>\r\n          {this.state.showIndividualTable ? (\r\n            <>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </>\r\n          )}\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked ? this.openSLModal : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    testMode: { name: \"Enable test mode\", type: \"checkbox\" },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode:\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: \"logger.resetMode==='time'\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load default\"\r\n                  onClick={() => {\r\n                    this.props.api.loadConfig(\"template.json\");\r\n                  }}\r\n                />\r\n                <input type=\"button\" value=\"Save config\" onClick={() => {}} />\r\n                <input type=\"button\" value=\"Load config\" onClick={() => {}} />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        .\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    !configLocked ||\r\n    state.config.input.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showOutputs =\r\n    !configLocked ||\r\n    state.config.output.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showPorts =\r\n    state.static.exposeUpload && (!configLocked || showInputs || showOutputs);\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showPorts,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../configHelper\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) {\r\n        newHistory = [];\r\n      } else if (!fullState.coms[index].entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry: fullState.coms[index].entry,\r\n            entryTime: fullState.coms[index].entryTime\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME, TOGGLE_MENU } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        console.log(config);\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig() {\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        const newConfig = store.getState().config;\r\n        delete newConfig.loaded;\r\n        delete newConfig.locked;\r\n        delete newConfig.hasChanged;\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(event) {\r\n    const address = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (event.target.type === \"number\") {\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    console.log({ address, value });\r\n\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}