{"version":3,"sources":["helpers.js","actions/excelActions.js","actions/logActions.js","actions/menuActions.js","actions/configActions.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","actions/internalActions.js","components/InputList.js","components/TableCell.js","components/Table.js","components/util/ReactTableWrapper.js","components/modals/SelfLearningModal.js","actions/selfLearningActions.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","actions/messageTypes.js","actions/socketApi.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","changeConfig","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","oldName","className","contents","configuration","location","structure","defaultStruct","defaults","onClick","splice","concat","options","keyOptions","option","onChange","e","target","entries","entry","numeric","event","min","max","step","checked","rounding","round","num","digits","factor","Math","pow","getColumnWidth","rows","accessor","cellLength","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","downloadExcel","window","href","uploadExcelTemplate","input","document","accept","onchange","data","FormData","append","files","axios","post","then","alert","catch","click","getLogList","dispatch","getState","_ref","emit","list","RECEIVE_LOG_LIST","payload","getLog","openMenu","OPEN_MENU","getLogo","asyncToGenerator","regenerator_default","mark","_callee","logo","wrap","_context","prev","next","abrupt","stop","this","CONFIG_CHANGE","getConfigList","RECEIVE_CONFIG_LIST","loadConfig","_ref3","RECEIVE_CONFIG","JSON","parse","result","console","log","err","configExists","_ref4","Promise","resolve","_ref5","saveConfig","_ref6","newConfig","stringify","loaded","locked","hasChanged","confirm","consistent","CONFIG_LOCK","setTimeout","reload","Sidebar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","uploadLog","deleteLog","downloadAllLogs","deleteAllLogs","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","contentLabel","logList","downloadLog","ftpTargets","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","uploadExcel","reboot","exposeShutdown","shutdown","QS","Component","connect","static","misc","logger","writeToFile","FTP","targets","fileList","i","CONFIG_UNLOCK","toggleMenu","TOGGLE_MENU","CLOSE_MENU","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","space","RTSCTS","XONXOFF","average","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","seconds","manualConfirmation","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","forceOutput","_ref2","","exe","exebl","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","style","backgroundColor","color","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","#3fd35d","yellow","#ffc000","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","id","ReactTableWrapper","columns","column","Header","Headers","reduce","acc","cur","react_table_es","individualColors","textColors","sum","SelfLearningModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","individualEntries","generalEntries","push","extraColumns","selfLearning","title","extra","Cell","toFixed","dateFormat","generalVisible","generalTableColumns","toConsumableArray","deleteGeneralSL","original","individualTableColumns","increments","numUpdates","numUpdatesHistory","deleteIndividualSL","resetIndividualSL","textAlign","onClose","individual","tableExtraColumnTitle","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","isUndefined","enabled","off","com0ind","com1ind","endsWith","LogID","startCalibration","totalNumber","numberPercentage","tolerance","startTolerance","important","resetSL","resetSLData","logID","individualToleranceAbs","individualTolerance","individualCorrectionIncrement","individualCorrectionLimit","excelIndividualColumn","charCodeAt","excelDateColumn","excelExitColumn","exitOptions","activityCounter","firstTopFormula","secondTopFormula","topFormula","text","number","calibration","success","matchedTolerance","modals_SelfLearningModal","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","unique","resetMode","time","interval","resetTime","resetInterval","automatic","folder","username","password","configList","deleteConfig","downloadConfig","uploadConfig","version","prompt","ip","moment","format","currentVersion","file","versionName","Main","filterTypes","uniqueLogEnabled","TU","TA","reloadInterval","setInterval","reloadLogEntries","filterType","logModalFilterType","find","logTableColumns","legend","accessors","logEntries","clearInterval","loadStatic","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","logModalUnique","fontSize","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","enabledModules","RECEIVE_STATIC","App","components_Sidebar","components_Main","require","initialState","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","SERIAL_CLEAR","formulaResults","RECEIVE_IP","RECEIVE_TIME","getTime","combineReducers","action","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","_action$payload4","newCells","_action$payload5","messageTypes","tableColor","notfound","clearSerial","socket","io","Boolean","hostname","middleware","thunk","withExtraArgument","callback","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducer","_loop","init","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.278a5832.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, changeConfig, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(value[0][key], config, changeConfig, index, name + \"[\" + index + \"].\" + key)\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(element, config, changeConfig, index, name + \"[\" + index + \"]\");\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key => makeForm(value[key], config, changeConfig, index, name + (name ? \".\" : \"\") + key))}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"emphasis\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return (\r\n          <div className=\"configuration--emphasis\">\r\n            {makeForm(value.contents, config, changeConfig, index, oldName)}\r\n          </div>\r\n        );\r\n      }\r\n      case \"conditional\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return makeForm(value.contents, config, changeConfig, index, oldName);\r\n      }\r\n      case \"external\": {\r\n        return makeForm(value.configuration, config, changeConfig, index, value.location);\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const structure = value.structure;\r\n        const defaultStruct = value.defaults;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"configuration--struct\">\r\n                #{index + 3}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    contents.splice(index, 1);\r\n                    changeConfig(name, contents);\r\n                  }}\r\n                />\r\n                {makeForm(structure, config, changeConfig, index, name + \"[\" + index + \"]\")}\r\n              </div>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                        numeric: true\r\n                      });\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"button\": {\r\n        return (\r\n          <>\r\n            <input type=\"button\" value={value.name} className=\"configuration--button\" onClick={value.onClick} />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={value.rounding ? round(get(config, name), value.rounding) : get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  changeConfig(name, event.target.checked);\r\n                } else {\r\n                  changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(...rows.map(row => (`${get(row, accessor)}` || \"\").length));\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import axios from \"axios\";\r\n\r\nexport const downloadExcel = () => {\r\n  window.location.href = \"/downloadExcel\";\r\n};\r\n\r\nexport const uploadExcel = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"excelFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importExcel\", data)\r\n      .then(() => window.alert(\"Successfully uploaded Excel file.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel file.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const uploadExcelTemplate = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"templateFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importTemplate\", data)\r\n      .then(() => window.alert(\"Successfully uploaded Excel template.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel template.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import axios from \"axios\";\r\nimport { RECEIVE_LOG_LIST } from \"./types\";\r\n\r\nexport const downloadLog = name => {\r\n  window.location.href = \"/downloadLog?file=\" + name;\r\n};\r\n\r\nexport const downloadAllLogs = () => (dispatch, getState) => {\r\n  window.location.href = \"/downloadLog?multiFile=\" + getState().misc.logList;\r\n};\r\n\r\nexport const getLogList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getLogList\", null, list => {\r\n    dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const uploadLog = (name, index) => (dispatch, getState, { emit }) => {\r\n  emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n};\r\n\r\nexport const deleteAllLogs = () => (dispatch, getState, { emit }) => {\r\n  const fileList = getState().misc.logList;\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    emit(\"deleteLog\", fileList[i]);\r\n  }\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const deleteLog = name => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteLog\", name);\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const getLog = () => {\r\n  return axios.get(\"/comlog\");\r\n};\r\n\r\nexport const getUniqueLog = () => {\r\n  return axios.get(\"/comlogu\");\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { TOGGLE_MENU, OPEN_MENU, CLOSE_MENU, CONFIG_UNLOCK } from \"./types\";\r\n\r\nimport { loadConfig } from \"./configActions\";\r\n\r\nexport const toggleMenu = () => dispatch => {\r\n  dispatch({ type: TOGGLE_MENU });\r\n};\r\n\r\nexport const openMenu = () => dispatch => {\r\n  dispatch({ type: OPEN_MENU });\r\n};\r\n\r\nexport const closeMenu = () => dispatch => {\r\n  dispatch({ type: CLOSE_MENU });\r\n};\r\n\r\nexport const unlockConfig = () => dispatch => {\r\n  dispatch({ type: CONFIG_UNLOCK });\r\n};\r\n\r\nexport const reboot = () => dispatch => {\r\n  axios.get(\"/restart\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 5000);\r\n};\r\n\r\nexport const shutdown = () => {\r\n  axios.get(\"/shutdown\");\r\n};\r\n\r\nexport const getLogo = async () => {\r\n  let logo = false;\r\n  try {\r\n    await axios.get(\"/logo\");\r\n    logo = \"/logo\";\r\n  } finally {\r\n    return logo;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { RECEIVE_CONFIG_LIST, CONFIG_CHANGE, RECEIVE_CONFIG, RECEIVE_STATIC, CONFIG_LOCK } from \"./types\";\r\nimport { reboot } from \"./menuActions\";\r\n\r\nexport const downloadConfig = name => {\r\n  window.location.href = \"/downloadConfig?file=\" + name;\r\n};\r\n\r\nexport const changeConfig = (address, value, options) => dispatch => {\r\n  if (options && options.numeric) {\r\n    value = Number(value);\r\n  }\r\n  dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n};\r\n\r\nexport const getConfigList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getConfigList\", null, list => {\r\n    dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const deleteConfig = name => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n    emit(\"deleteConfig\", name);\r\n    dispatch(getConfigList());\r\n  }\r\n};\r\n\r\nexport const loadConfig = name => (dispatch, getState, { emit }) => {\r\n  if (name) {\r\n    emit(\"loadConfig\", name, config => {\r\n      dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n    });\r\n  } else {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n};\r\n\r\nexport const loadStatic = () => dispatch => {\r\n  axios.get(\"/static\").then(result => {\r\n    dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n    document.title = result.data.name;\r\n  });\r\n};\r\n\r\nexport const configExists = name => (dispatch, getState, { emit }) => {\r\n  return new Promise(resolve => {\r\n    emit(\"configExists\", name, ({ result }) => resolve(result));\r\n  });\r\n};\r\n\r\nexport const saveConfig = name => (dispatch, getState, { emit }) => {\r\n  const newConfig = JSON.parse(JSON.stringify(getState().config));\r\n  delete newConfig.loaded;\r\n  delete newConfig.locked;\r\n  delete newConfig.hasChanged;\r\n\r\n  if (name) {\r\n    dispatch(configExists(name)).then(result => {\r\n      if (!result || window.confirm(\"File already exists, do you want to overwrite?\")) {\r\n        emit(\"saveConfig\", { name: name, config: newConfig });\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (getState().config.hasChanged) {\r\n    emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n      if (\r\n        (consistent || window.confirm(\"This will reset the log, continue?\")) &&\r\n        window.confirm(\"Are you sure you want to save these changes?\")\r\n      ) {\r\n        emit(\"settings\", newConfig);\r\n        dispatch({ type: CONFIG_LOCK });\r\n        dispatch(reboot());\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    dispatch({ type: CONFIG_LOCK });\r\n  }\r\n};\r\n\r\nexport const uploadConfig = currentVersion => dispatch => {\r\n  const uploadFunction = event => {\r\n    const file = event.target.files[0];\r\n\r\n    const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n    if (!versionName) {\r\n      alert(\"Config does not have a valid name\");\r\n      return;\r\n    }\r\n    const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n    const currentMayorVersion = currentVersion.split(\".\")[0];\r\n\r\n    if (mayorVersion !== currentMayorVersion) {\r\n      alert(\"Version of new config does not match the current one\");\r\n      return;\r\n    }\r\n\r\n    dispatch(configExists(file.name)).then(result => {\r\n      if (result && !window.confirm(\"Config already exists. Overwrite?\")) return;\r\n\r\n      const data = new FormData();\r\n      data.append(\"configFile\", file);\r\n      axios\r\n        .post(\"/uploadConfig\", data)\r\n        .then(() => {\r\n          window.alert(\"Successfully uploaded new config.\");\r\n          dispatch(getConfigList());\r\n        })\r\n        .catch(() => window.alert(\"Error uploading new config.\"));\r\n    });\r\n  };\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".json\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { downloadExcel, uploadExcel } from \"../actions/excelActions\";\r\nimport { downloadAllLogs, downloadLog, deleteLog, deleteAllLogs, getLogList } from \"../actions/logActions\";\r\nimport { saveConfig } from \"../actions/configActions\";\r\nimport { unlockConfig, toggleMenu, openMenu, closeMenu } from \"../actions/menuActions\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.unlockConfig();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState => !newState.isOpen && closeMenu()}\r\n          width={450}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>{\" \"}\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                uploadExcel();\r\n                //this.openUploadModal();\r\n                //closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.downloadExcel();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Download Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\")) this.props.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: []\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    downloadExcel,\r\n    downloadAllLogs,\r\n    deleteLog,\r\n    deleteAllLogs,\r\n    downloadLog,\r\n    getLogList,\r\n    unlockConfig,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    saveConfig\r\n  }\r\n)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) => (i === index ? !element : element))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.comIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history.slice(0, this.props.config.serial.coms[com.index].entries).map(element => (\r\n                    <>\r\n                      <div>{element.timeString}</div>\r\n                      <div>{element.entry}</div>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeConfig }\r\n)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceOutput } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return this.props.portsEnabled[index] || port.name !== \"\" || !this.props.configLocked;\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(port => port.formula !== \"\");\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forceOutput, changeConfig }\r\n)(OutputList);\r\n","export const forceInput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.input.ports[index],\r\n    ...state.internal.inputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (\r\n    askForConfirmation &&\r\n    !window.confirm(`Are you sure you want to manually change ${port.name}?`)\r\n  )\r\n    return;\r\n\r\n  emit(\"forceInput\", index);\r\n};\r\n\r\nexport const forceOutput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.output.ports[index],\r\n    ...state.internal.outputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (\r\n    askForConfirmation &&\r\n    !window.confirm(`Are you sure you want to manually change ${port.name}?`)\r\n  )\r\n    return;\r\n\r\n  emit(\"forceOutput\", index);\r\n};\r\n\r\nexport const tableManual = (index, value) => (dispatch, getState, { emit }) => {\r\n  emit(\"manual\", { index, value });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceInput } from \"../actions/internalActions\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\"\r\n          }\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\"\r\n          },\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\"\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\"\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return this.props.portsEnabled[index] || port.name !== \"\" || !this.props.configLocked;\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(port => port.formula !== \"\");\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forceInput, changeConfig }\r\n)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) -\r\n            1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) +\r\n            1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() +\r\n        1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div\r\n        className=\"tableCell--content\"\r\n        style={{ backgroundColor: !props.notFound && cell.color }}\r\n      >\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { tableManual } from \"../actions/internalActions\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\"\r\n          }\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.table.cells[index].type === \"reader\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.table.cells[index].type !== \"date\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type) && !config.table.cells[index].readerPort\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) => config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => [\"normal\", \"reader\"].includes(config.table.cells[index].type)\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell {String.fromCharCode(65 + Math.floor(this.state.configCellIndex / 5))}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configCellIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.tableManual}\r\n              openModal={this.props.configLocked ? this.props.openLog : () => this.openConfigModal(cell.index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { tableManual, changeConfig }\r\n)(Table);\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table\";\r\n\r\nlet id = 0;\r\n\r\nexport default function ReactTableWrapper(props) {\r\n  const columns = props.columns.map(column => {\r\n    id++;\r\n    return {\r\n      id,\r\n      style: props.style,\r\n      Header: (\r\n        <b>\r\n          {column.Headers.reduce((acc, cur) => (\r\n            <>\r\n              {acc}\r\n              <br />\r\n              {cur}\r\n            </>\r\n          ))}\r\n        </b>\r\n      ),\r\n      ...column\r\n    };\r\n  });\r\n\r\n  return <ReactTable data={props.data} columns={columns} />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"../util/ReactTableWrapper\";\r\nimport Toggle from \"react-toggle\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport { daysToDate } from \"../../helpers\";\r\nimport { deleteGeneralSL, deleteIndividualSL, resetIndividualSL } from \"../../actions/selfLearningActions\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nfunction sum(list) {\r\n  return list.reduce((acc, cur) => acc + cur, 0);\r\n}\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showIndividualTable: true\r\n    };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({\r\n      showIndividualTable: !this.state.showIndividualTable\r\n    });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({\r\n        key,\r\n        ...this.props.generalEntries[key]\r\n      });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({\r\n        key,\r\n        ...this.props.individualEntries[key]\r\n      });\r\n    }\r\n\r\n    const extraColumns = this.props.config.selfLearning.extraColumns.map((column, index) => ({\r\n      Headers: [\"\", column.title],\r\n      accessor: row => row.extra[index],\r\n      Cell: props => {\r\n        console.log(props);\r\n        switch (column.type) {\r\n          case \"text\":\r\n            return String(props.value).slice(-column.digits);\r\n          case \"number\":\r\n            return Number(props.value).toFixed(column.digits);\r\n          case \"date\":\r\n            return dateFormat(daysToDate(Number(props.value)), \"dd-mm-yyyy\");\r\n        }\r\n        props.value.toFixed(rounding);\r\n      },\r\n      width: Math.max(70, 11 * column.title.length),\r\n      generalVisible: column.generalVisible\r\n    }));\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Headers: [\"\", valueName],\r\n        accessor: row => row.entries[0],\r\n        Cell: props => props.value.toFixed(rounding),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-1\"],\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-2\"],\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-3\"],\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-4\"],\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns.filter(column => column.generalVisible),\r\n      {\r\n        Headers: [\r\n          \"\",\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete all general entries?`)) {\r\n                this.props.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>\r\n          </button>\r\n        ],\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to delete general entries for ${props.original.key}?`)) {\r\n                  this.props.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Headers: [\"\", valueName],\r\n        accessor: \"calibration\",\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(rounding)\r\n      },\r\n      {\r\n        Headers: [\"\", keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns,\r\n      {\r\n        Headers: [\"\", \"Tol\"],\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[Math.min(4, props.original.increments)],\r\n                color: textColors[Math.min(4, props.original.increments)]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdates)), \"Num\"],\r\n        accessor: \"numUpdates\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[0])), \"-1\"],\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[1])), \"-2\"],\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[2])), \"-3\"],\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [\r\n          \"\",\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete all individual entries?`)) {\r\n                this.props.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>{\" \"}\r\n          </button>\r\n        ],\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                  this.props.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Delete{\" \"}\r\n            </button>\r\n          );\r\n        },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle checked={this.state.showIndividualTable} onChange={this.toggleIndividualTable} />{\" \"}\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}{\" \"}\r\n        </span>{\" \"}\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reset the data of the individual selfLearning?\"))\r\n                this.props.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b> Reset </b>{\" \"}\r\n          </button>{\" \"}\r\n        </span>{\" \"}\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN - list </div>{\" \"}\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n              style={{\r\n                textAlign: \"center\"\r\n              }}\r\n            />{\" \"}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL - list </div>{\" \"}\r\n            <ReactTable\r\n              style={{\r\n                textAlign: \"center\"\r\n              }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />{\" \"}\r\n          </>\r\n        )}{\" \"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}{\" \"}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteGeneralSL, deleteIndividualSL, resetIndividualSL }\r\n)(SelfLearningModal);\r\n","export const deleteGeneralSL = key => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteGeneralSL\", key);\r\n};\r\n\r\nexport const deleteIndividualSL = key => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteIndividualSL\", key);\r\n};\r\n\r\nexport const resetIndividualSL = () => (dispatch, getState, { emit }) => {\r\n  emit(\"resetIndividualSL\");\r\n};\r\n\r\nexport const resetSLData = () => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"This will clear the Excel file. Do you want to download it first?\")) {\r\n    return;\r\n  }\r\n  if (window.confirm(\"Are you sure you want to clear all SL data?\")) {\r\n    emit(\"deleteSLData\");\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\nimport { downloadExcel, uploadExcelTemplate } from \"../actions/excelActions\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        normal: {\r\n          type: \"conditional\",\r\n          condition: config => !config.selfLearning.enabled.endsWith(\"ind\") && config.selfLearning.enabled !== \"off\",\r\n          contents: {\r\n            LogID: {\r\n              name: \"LogID\",\r\n              type: \"external\",\r\n              location: \"logger.logID\",\r\n              configuration: {\r\n                name: \"LogID\",\r\n                type: \"text\"\r\n              }\r\n            },\r\n            startCalibration: {\r\n              name: \"Calibration\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              rounding\r\n            },\r\n            totalNumber: {\r\n              name: \"Total number\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            startTolerance: {\r\n              name: \"Extra tolerance during learning %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            }\r\n          }\r\n        },\r\n        individual: {\r\n          type: \"conditional\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\"),\r\n          contents: {\r\n            important: {\r\n              type: \"emphasis\",\r\n              contents: {\r\n                resetSL: {\r\n                  name: \"Reset Self Learning Data\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.resetSLData();\r\n                  }\r\n                },\r\n                downloadExcel: {\r\n                  name: \"Download Excel file\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.downloadExcel();\r\n                  }\r\n                },\r\n                logID: {\r\n                  type: \"external\",\r\n                  location: \"logger.logID\",\r\n                  configuration: {\r\n                    name: \"LogID\",\r\n                    type: \"text\"\r\n                  }\r\n                },\r\n                startCalibration: {\r\n                  name: \"Calibration\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  rounding\r\n                },\r\n                totalNumber: {\r\n                  name: \"Total number\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                }\r\n              }\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            individualToleranceAbs: {\r\n              name: \"Individual tolerance\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualTolerance: {\r\n              name: \"Individual tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionIncrement: {\r\n              name: \"Correction %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionLimit: {\r\n              name: \"Correction limit (max 9)\",\r\n              type: \"number\",\r\n              min: 0,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            excelIndividualColumn: {\r\n              type: \"external\",\r\n              location: \"table.individualColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Com Ind\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelDateColumn: {\r\n              type: \"external\",\r\n              location: \"table.dateColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Date\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelExitColumn: {\r\n              type: \"external\",\r\n              location: \"table.exitColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Exit\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            exitOptions: {\r\n              name: \"Exit options\",\r\n              type: \"keyValue\"\r\n            },\r\n            activityCounter: {\r\n              type: \"checkbox\",\r\n              name: \"Activity counter\"\r\n            },\r\n            uploadExcelTemplate: {\r\n              name: \"Upload Excel Template\",\r\n              type: \"button\",\r\n              onClick: uploadExcelTemplate\r\n            },\r\n            title: {\r\n              name: \"List column configuration\",\r\n              type: \"title\"\r\n            },\r\n            firstTopFormula: {\r\n              name: \"#1 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            secondTopFormula: {\r\n              name: \"#2 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            extraColumns: {\r\n              name: \"Additional columns\",\r\n              type: \"structArray\",\r\n              structure: {\r\n                title: {\r\n                  name: \"Title\",\r\n                  type: \"text\"\r\n                },\r\n                topFormula: {\r\n                  name: \"Top formula\",\r\n                  type: \"text\"\r\n                },\r\n                formula: {\r\n                  name: \"Formula\",\r\n                  type: \"text\"\r\n                },\r\n                type: {\r\n                  name: \"Type of content\",\r\n                  type: \"select\",\r\n                  options: {\r\n                    text: \"Non-num\",\r\n                    number: \"Numeric\",\r\n                    date: \"Date\"\r\n                  }\r\n                },\r\n                digits: {\r\n                  name: \"Digits\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  condition: (config, index) => config.selfLearning.extraColumns[index].type !== \"date\"\r\n                },\r\n                generalVisible: {\r\n                  name: \"Show in SL list\",\r\n                  type: \"checkbox\"\r\n                }\r\n              },\r\n              defaults: {\r\n                title: \"\",\r\n                topFormula: \"\",\r\n                formula: \"\",\r\n                type: \"text\",\r\n                digits: 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\"selfLearning--inProgress\", \"selfLearning--success\", \"selfLearning--warning\"];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(this.props.config.serial.coms[this.props.comIndex || 0].digits) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(Math.round((this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000) / 10 + \"%\");\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal isOpen={this.state.SLModalIsOpen} onClose={this.closeSLModal} />\r\n\r\n        <div\r\n          className={classNames(\"selfLearning\", indicators[this.props.success || 0])}\r\n          onClick={this.props.configLocked ? (this.props.individual ? this.openSLModal : null) : this.openConfigModal}\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { resetSLData, downloadExcel, changeConfig }\r\n)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig\r\n} from \"../actions/configActions\";\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\"\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\"\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"]\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            numeric: true,\r\n            options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\"\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\"\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\"\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\"\r\n            }\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: config => config.logger.resetMode === \"time\"\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: config => config.logger.resetMode === \"interval\"\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\"\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\"\r\n          },\r\n          uploadExcel: {\r\n            name: \"Include Excel with upload\",\r\n            type: \"checkbox\"\r\n          },\r\n          targets: [1, 2].map(index => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\"\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\"\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\"\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\"\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\"\r\n            }\r\n          }))\r\n        }\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input type=\"button\" value=\"Delete\" onClick={() => this.props.deleteConfig(config)} />\r\n                  <input type=\"button\" value=\"Load\" onClick={() => this.props.loadConfig(config)} />\r\n                  <input type=\"button\" value=\"Download\" onClick={() => this.props.downloadConfig(config)} />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input type=\"button\" value=\"Upload\" onClick={() => this.props.uploadConfig(this.props.config.version)} />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\"Please enter the name for the new config file:\", \"config\");\r\n                    if (name) this.props.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div className=\"infobar\" onClick={this.props.configLocked ? null : this.openConfigModal}>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"HH:mm:ss\")}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"DD-MM-YYYY\")}</div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeConfig, deleteConfig, loadConfig, downloadConfig, configExists, saveConfig, getConfigList, uploadConfig }\r\n)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { loadConfig, loadStatic } from \"../actions/configActions\";\r\nimport { getLog } from \"../actions/logActions\";\r\nimport { openMenu, getLogo } from \"../actions/menuActions\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.loadConfig();\r\n    this.props.loadStatic();\r\n\r\n    getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalFilterType: \"none\",\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  filterTypes = [\r\n    {\r\n      id: \"none\",\r\n      name: \"Show all\",\r\n      filter: entry => true\r\n    }\r\n  ];\r\n\r\n  openLogModal = () => {\r\n    if (this.props.uniqueLogEnabled) {\r\n      this.filterTypes.push({\r\n        id: \"unique\",\r\n        name: \"Show only unique\",\r\n        filter: entry => entry.TU\r\n      });\r\n    }\r\n\r\n    if (this.props.activityCounter) {\r\n      this.filterTypes.push({\r\n        id: \"activity\",\r\n        name: \"Show only activity\",\r\n        filter: entry => entry.TA\r\n      });\r\n    }\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const filterType = e ? e.target.value : this.state.logModalFilterType;\r\n\r\n    const filter = this.filterTypes.find(filter => filter.id === filterType).filter;\r\n\r\n    getLog().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: result.data.accessors[index],\r\n            width: getColumnWidth(result.data.entries, result.data.accessors[index]),\r\n            style: { textAlign: \"center\" },\r\n            Cell: props => {\r\n              if (typeof props.value === \"number\") {\r\n                return props.value.toFixed(result.data.digits[index]);\r\n              }\r\n              return props.value;\r\n            },\r\n            name\r\n          }))\r\n          .filter((column, index) => index >= 2)\r\n          .filter(column => this.props.uniqueLogEnabled || column.name !== \"TU\")\r\n          .filter(column => this.props.activityCounter || column.name !== \"TA\"),\r\n        logEntries: result.data.entries.filter(filter),\r\n        logModalFilterType: filterType\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.filterTypes.length > 1 && (\r\n              <span>\r\n                <select value={this.state.logModalUnique} onChange={this.reloadLogEntries}>\r\n                  {this.filterTypes.map(filter => (\r\n                    <option value={filter.id}>{filter.name}</option>\r\n                  ))}\r\n                </select>\r\n              </span>\r\n            )}\r\n\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  <b>{this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}</b>\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 14 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo image={this.state.logo} alt=\"LOGO\" onClick={this.props.openMenu} />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && <SelfLearning />}\r\n            <ComList />\r\n          </div>\r\n\r\n          {this.props.showOutputs && <div className=\"outputs\">{this.props.showOutputs && <OutputList />} </div>}\r\n          {this.props.showInputs && <div className=\"inputs\">{this.props.showInputs && <InputList />}</div>}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning && (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadConfig, loadStatic, openMenu }\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: []\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case SERIAL_CLEAR: {\r\n      const newComs = fullState.coms.map(com => ({\r\n        entry: \"\",\r\n        entryTime: new Date(),\r\n        history: com.history\r\n      }));\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SERIAL_COM_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR\r\n} from \"./types\";\r\n\r\nexport default {\r\n  input: INPUT_PORT_STATE,\r\n  output: OUTPUT_PORT_STATE,\r\n  table: TABLE_CELL_STATE,\r\n  tableColor: TABLE_CELL_COLOR,\r\n  entry: SERIAL_COM_STATE,\r\n  selfLearning: SELFLEARNING_STATE,\r\n  ip: RECEIVE_IP,\r\n  time: RECEIVE_TIME,\r\n  notfound: TABLE_FOUND_STATE,\r\n  clearSerial: SERIAL_CLEAR\r\n};\r\n","import io from \"socket.io-client\";\r\nimport messageTypes from \"./messageTypes.js\";\r\n\r\nconst socket = io();\r\n\r\nexport const init = store => {\r\n  for (const type in messageTypes) {\r\n    socket.on(type, payload => store.dispatch({ type: messageTypes[type], payload }));\r\n  }\r\n};\r\n\r\nexport const emit = (type, payload, callback) => socket.emit(type, payload, callback);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport { init, emit } from \"./actions/socketApi\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst middleware = [thunk.withExtraArgument({ emit })];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\ninit(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}