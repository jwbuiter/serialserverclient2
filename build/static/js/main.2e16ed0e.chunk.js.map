{"version":3,"sources":["actions/excelActions.js","actions/logActions.js","actions/menuActions.js","actions/configActions.js","actions/internalActions.js","actions/selfLearningActions.js","components/Sidebar.js","components/modals/LogModal.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/util/ReactTableWrapper.js","components/modals/SelfLearningModal.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","actions/messageTypes.js","actions/socketApi.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg","helpers.js"],"names":["downloadExcel","window","location","href","uploadExcel","input","document","createElement","type","accept","onchange","event","data","FormData","append","target","files","axios","post","then","alert","catch","click","uploadExcelTemplate","getLogList","dispatch","getState","emit","list","RECEIVE_LOG_LIST","payload","openMenu","OPEN_MENU","reboot","get","setTimeout","loadConfig","changeConfig","address","value","options","numeric","Number","CONFIG_CHANGE","getConfigList","RECEIVE_CONFIG_LIST","name","config","RECEIVE_CONFIG","JSON","parse","result","console","log","err","configExists","Promise","resolve","saveConfig","newConfig","stringify","loaded","locked","hasChanged","confirm","consistent","CONFIG_LOCK","reload","setDateTime","date","resetSLData","logID","logger","selfLearning","startCalibration","totalNumber","prompt","isNaN","success","hardReboot","static","newCycleResetHard","message","ftpTargetsValues","resetTime","condition","resetMode","resetInterval","min","step","FTP","targets","map","index","title","folder","username","password","Sidebar","props","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","openLogModal","setState","logModalIsOpen","closeMenu","closeLogModal","openDateTimeModal","dateTimeModalIsOpen","closeDateTimeModal","openNewCycleModal","newCycleModalIsOpen","closeNewCycleModal","openPasswordPrompt","passwordPromptIsOpen","closePasswordPrompt","openFtpTargetsModal","ftpTargetsModalIsOpen","closeFtpTargetsModal","uploadLog","deleteLog","downloadAllLogs","deleteAllLogs","handleQSClicked","state","qsClickedTimes","handlePasswordSubmitted","e","preventDefault","confirmPassword","correct","newDate","moment","time","format","this","rounding","isUndefined","comIndex","serial","coms","digits","newCycleValues","onClick","resetSL","configuration","isOpen","onRequestClose","overlayClassName","className","contentLabel","logList","downloadLog","ftpTargets","onSubmit","onChange","makeForm","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","exposeSettings","checked","selfLearningEnabled","endsWith","writeLogs","exposeUpload","manualResetHard","exposeShutdown","shutdown","QS","Component","connect","misc","writeToFile","enabled","fileList","i","length","CONFIG_UNLOCK","toggleMenu","TOGGLE_MENU","CLOSE_MENU","msg","callback","LogModal","changeFilterType","filterType","filterTypes","id","filter","entry","full","uniqueLogEnabled","push","TU","activityCounter","TA","currentFilter","find","loggerState","entries","accessors","legend","visible","columns","Header","accessor","getColumnWidth","style","textAlign","Cell","toFixed","_","column","filteredEntries","onClose","fontSize","unique","internal","configurationValues","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","alwaysPositive","timeoutReset","timeout","prefix","postfix","autoCommandEnabled","autoCommandMin","autoCommandMax","autoCommandTime","autoCommandText","ComList","openConfigModal","configModalIsOpen","closeConfigModal","toggleShowHistory","showHistory","element","com","key","classNames","compressor","warning","history","slice","timeString","Modal","setAppElement","output","ports","hardwareOutput","formula","execute","seconds","manualConfirmation","warningPeriod","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","forceOutput","hardwareInput","0","1","2","3","4","normalState","open","closed","exe","exebl","reset","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","5","6","7","8","9","manualTimeout","InputList","inputs","reduce","acc","cur","blocking","forceInput","TableCell","content","cell","classnames","manualFunction","menuOptions","option","newMenuIndex","findIndex","daysToDate","getDate","getMonth","getFullYear","notFound","openModal","backgroundColor","color","table","cells","showInLog","normal","manual","menu","includes","resetOnExe","colorConditions","yellow","Table","configCellIndex","cellConfig","String","fromCharCode","Math","floor","tableManual","openLog","tableNotFound","ReactTableWrapper","Headers","ref","forwardRef","individualColors","textColors","sum","SelfLearningModal","toggleIndividualTable","showIndividualTable","UNTable","React","createRef","SLTable","comConfigs","extraColumnConfigs","extraColumns","keyName","valueName","valueRounding","firstTopDigits","secondTopDigits","individualEntries","generalEntries","individualColumnHeaders","headerRoundings","formattedHeaders","header","row","extra","dateFormat","max","generalVisible","generalTableColumns","deleteGeneralSL","original","activity","activityHistory","individualTableColumns","showTolerance","incrementIndex","increments","numUpdates","numUpdatesHistory","exitOptions","deleteIndividualSL","tableStyle","marginRight","cols","tableRef","sheetName","splice","col","current","getResolvedState","sortedData","Object","values","newRow","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","Date","writeFile","resetIndividualSL","getSLModalContent","individual","tableExtraColumnTitle","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","off","com0ind","com1ind","contents","LogID","numberPercentage","tolerance","startTolerance","important","individualToleranceAbs","individualTolerance","individualToleranceShift","individualCorrectionIncrement","individualCorrectionLimit","individualAverageNumber","excelIndividualColumn","Array","keys","charCodeAt","excelDateColumn","excelExitColumn","firstTopFormula","secondTopFormula","structure","topFormula","text","number","defaults","calibration","round","matchedTolerance","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","csvSeparator","interval","automatic","configList","deleteConfig","downloadConfig","uploadConfig","version","ip","currentVersion","file","versionName","match","split","Main","reloadInterval","setInterval","getLog","clearInterval","loadStatic","a","async","logo","getLogo","logModalFilterType","logEntries","logTableColumns","MBDC","showInputs","showTable","showOutputs","showSelfLearning","some","enabledModules","RECEIVE_STATIC","LOGGER_STATE","App","require","set","initialState","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","SERIAL_CLEAR","SET_WARNING","formulaResults","RECEIVE_IP","RECEIVE_TIME","getTime","combineReducers","action","fullState","newInputs","from","newOutputs","newHistory","entryTime","newComs","newCells","tableColor","notfound","clearSerial","setWarning","socket","io","Boolean","hostname","middleware","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducer","messageTypes","init","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","object","parts","replace","newAddress","newValue","isArray","conditions","oldName","defaultStruct","concat","keyOptions","undefined","num","pow","rows","cellLength","days"],"mappings":"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","file":"static/js/main.2e16ed0e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const downloadExcel = () => {\r\n  window.location.href = \"/downloadExcel\";\r\n};\r\n\r\nexport const uploadExcel = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"excelFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importExcel\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel file.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel file.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const uploadExcelTemplate = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"templateFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importTemplate\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel template.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel template.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import axios from \"axios\";\r\nimport { RECEIVE_LOG_LIST, LOGGER_STATE } from \"./types\";\r\n\r\nexport const downloadLog = name => {\r\n  window.location.href = \"/downloadLog?file=\" + name;\r\n};\r\n\r\nexport const downloadAllLogs = () => (dispatch, getState) => {\r\n  window.location.href = \"/downloadLog?multiFile=\" + getState().misc.logList;\r\n};\r\n\r\nexport const getLogList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getLogList\", null, list => {\r\n    dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const uploadLog = (name, index) => (dispatch, getState, { emit }) => {\r\n  emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n};\r\n\r\nexport const deleteAllLogs = () => (dispatch, getState, { emit }) => {\r\n  const fileList = getState().misc.logList;\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    emit(\"deleteLog\", fileList[i]);\r\n  }\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const deleteLog = name => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteLog\", name);\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const getLog = () => dispatch => {\r\n  axios.get(\"/comlog\").then(result => {\r\n    dispatch({ type: LOGGER_STATE, payload: result.data });\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { TOGGLE_MENU, OPEN_MENU, CLOSE_MENU, CONFIG_UNLOCK } from \"./types\";\r\n\r\nimport { loadConfig } from \"./configActions\";\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n  dispatch({ type: TOGGLE_MENU });\r\n};\r\n\r\nexport const openMenu = () => (dispatch) => {\r\n  dispatch({ type: OPEN_MENU });\r\n};\r\n\r\nexport const closeMenu = () => (dispatch) => {\r\n  dispatch({ type: CLOSE_MENU });\r\n};\r\n\r\nexport const unlockConfig = () => (dispatch) => {\r\n  dispatch({ type: CONFIG_UNLOCK });\r\n};\r\n\r\nexport const reboot = () => (dispatch) => {\r\n  axios.get(\"/restart\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 5000);\r\n};\r\n\r\nexport const hardReboot = () => (dispatch) => {\r\n  axios.get(\"/hard_reboot\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 10000);\r\n};\r\n\r\nexport const shutdown = () => {\r\n  axios.get(\"/shutdown\");\r\n};\r\n\r\nexport const getLogo = async () => {\r\n  let logo = false;\r\n  try {\r\n    await axios.get(\"/logo\");\r\n    logo = \"/logo\";\r\n  } finally {\r\n    return logo;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { RECEIVE_CONFIG_LIST, CONFIG_CHANGE, RECEIVE_CONFIG, RECEIVE_STATIC, CONFIG_LOCK } from \"./types\";\r\nimport { reboot } from \"./menuActions\";\r\n\r\nexport const downloadConfig = name => {\r\n  window.location.href = \"/downloadConfig?file=\" + name;\r\n};\r\n\r\nexport const changeConfig = (address, value, options) => dispatch => {\r\n  if (options && options.numeric) {\r\n    value = Number(value);\r\n  }\r\n  dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n};\r\n\r\nexport const getConfigList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getConfigList\", null, list => {\r\n    dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const deleteConfig = name => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n    emit(\"deleteConfig\", name);\r\n    dispatch(getConfigList());\r\n  }\r\n};\r\n\r\nexport const loadConfig = name => (dispatch, getState, { emit }) => {\r\n  if (name) {\r\n    emit(\"loadConfig\", name, config => {\r\n      dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n    });\r\n  } else {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n};\r\n\r\nexport const loadStatic = () => dispatch => {\r\n  axios.get(\"/static\").then(result => {\r\n    dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n    document.title = result.data.name;\r\n  });\r\n};\r\n\r\nexport const configExists = name => (dispatch, getState, { emit }) => {\r\n  return new Promise(resolve => {\r\n    emit(\"configExists\", name, ({ result }) => resolve(result));\r\n  });\r\n};\r\n\r\nexport const saveConfig = name => (dispatch, getState, { emit }) => {\r\n  const newConfig = JSON.parse(JSON.stringify(getState().config));\r\n  delete newConfig.loaded;\r\n  delete newConfig.locked;\r\n  delete newConfig.hasChanged;\r\n\r\n  if (name) {\r\n    dispatch(configExists(name)).then(result => {\r\n      if (!result || window.confirm(\"File already exists, do you want to overwrite?\")) {\r\n        emit(\"saveConfig\", { name: name, config: newConfig });\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (getState().config.hasChanged) {\r\n    emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n      if (\r\n        (consistent || window.confirm(\"This will reset the log, continue?\")) &&\r\n        window.confirm(\"Are you sure you want to save these changes?\")\r\n      ) {\r\n        emit(\"settings\", newConfig);\r\n        dispatch({ type: CONFIG_LOCK });\r\n        dispatch(reboot());\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    dispatch({ type: CONFIG_LOCK });\r\n  }\r\n};\r\n\r\nexport const uploadConfig = currentVersion => dispatch => {\r\n  const uploadFunction = event => {\r\n    const file = event.target.files[0];\r\n\r\n    const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n    if (!versionName) {\r\n      alert(\"Config does not have a valid name\");\r\n      return;\r\n    }\r\n    const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n    const currentMayorVersion = currentVersion.split(\".\")[0];\r\n\r\n    if (mayorVersion !== currentMayorVersion) {\r\n      alert(\"Version of new config does not match the current one\");\r\n      return;\r\n    }\r\n\r\n    dispatch(configExists(file.name)).then(result => {\r\n      if (result && !window.confirm(\"Config already exists. Overwrite?\")) return;\r\n\r\n      const data = new FormData();\r\n      data.append(\"configFile\", file);\r\n      axios\r\n        .post(\"/uploadConfig\", data)\r\n        .then(() => {\r\n          window.alert(\"Successfully uploaded new config.\");\r\n          dispatch(getConfigList());\r\n        })\r\n        .catch(() => window.alert(\"Error uploading new config.\"));\r\n    });\r\n  };\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".json\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const confirmPassword = (password, callback) => (dispatch, getState, { emit }) => {\r\n  emit(\"confirmPassword\", password, callback);\r\n};\r\n","export const forceInput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.input.ports[index],\r\n    ...state.internal.inputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceInput\", index);\r\n};\r\n\r\nexport const forceOutput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.output.ports[index],\r\n    ...state.internal.outputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceOutput\", index);\r\n};\r\n\r\nexport const tableManual = (index, value) => (dispatch, getState, { emit }) => {\r\n  emit(\"manual\", { index, value });\r\n};\r\n\r\nexport const setDateTime = date => (dispatch, getState, { emit }) => {\r\n  emit(\"setDateTime\", date);\r\n};\r\n","export const deleteGeneralSL = (key) => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteGeneralSL\", { key });\r\n};\r\n\r\nexport const deleteIndividualSL = (key, message) => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteIndividualSL\", { key, message }, (totalNumber) =>\r\n    window.alert(`Total SL number has been lowered from ${totalNumber + 1} to ${totalNumber}`)\r\n  );\r\n};\r\n\r\nexport const resetIndividualSL = () => (dispatch, getState, { emit }) => {\r\n  emit(\"resetIndividualSL\");\r\n};\r\n\r\nexport const resetSLData = () => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"This will clear the Excel file. Do you want to download it first?\")) {\r\n    return;\r\n  }\r\n\r\n  const config = getState().config;\r\n  let { logID } = config.logger;\r\n  let { startCalibration, totalNumber } = config.selfLearning;\r\n\r\n  logID = window.prompt(\"Enter new LogID\", logID);\r\n  if (logID === null) return;\r\n\r\n  do {\r\n    startCalibration = window.prompt(\"Enter starting calibration:\", startCalibration);\r\n    if (startCalibration === null) return;\r\n\r\n    startCalibration = Number(startCalibration);\r\n  } while (isNaN(startCalibration) || !startCalibration);\r\n\r\n  do {\r\n    totalNumber = window.prompt(\"Enter total number:\", totalNumber);\r\n    if (totalNumber === null) return;\r\n\r\n    totalNumber = Number(totalNumber);\r\n  } while (isNaN(totalNumber) || !totalNumber);\r\n\r\n  if (window.confirm(\"Are you sure you want to clear all SL data?\")) {\r\n    emit(\"deleteSLData\", { logID, startCalibration, totalNumber }, (success) => {\r\n      if (success) {\r\n        const hardReboot = getState().static.newCycleResetHard;\r\n        const message = hardReboot\r\n          ? \"Successfully started new cycle, device will now reboot\"\r\n          : \"Successfully started new cycle\";\r\n\r\n        window.alert(message);\r\n\r\n        if (hardReboot) emit(\"hardReboot\");\r\n      }\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\nimport moment from \"moment\";\r\n\r\nimport { downloadExcel, uploadExcel } from \"../actions/excelActions\";\r\nimport { downloadAllLogs, downloadLog, deleteLog, deleteAllLogs, getLogList, uploadLog } from \"../actions/logActions\";\r\nimport { saveConfig, changeConfig, confirmPassword } from \"../actions/configActions\";\r\nimport { unlockConfig, toggleMenu, openMenu, closeMenu, reboot, hardReboot, shutdown } from \"../actions/menuActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { isUndefined } from \"util\";\r\nimport \"../styles/sidebar.scss\";\r\n\r\nconst ftpTargetsValues = {\r\n  logger: {\r\n    resetTime: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: (config) => config.logger.resetMode === \"time\",\r\n    },\r\n    resetInterval: {\r\n      name: \"Interval (min)\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: (config) => config.logger.resetMode === \"interval\",\r\n    },\r\n  },\r\n  FTP: {\r\n    targets: [1, 2].map((index) => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\",\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\",\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\",\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\",\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\",\r\n      },\r\n    })),\r\n  },\r\n};\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      dateTimeModalIsOpen: false,\r\n      newCycleModalIsOpen: false,\r\n      passwordPromptIsOpen: false,\r\n      password: \"\",\r\n      ftpTargetsModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\"),\r\n      qsClickedTimes: 0,\r\n    };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.unlockConfig();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  openDateTimeModal = () => {\r\n    this.setState({ dateTimeModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeDateTimeModal = () => {\r\n    this.setState({ dateTimeModalIsOpen: false });\r\n  };\r\n\r\n  openNewCycleModal = () => {\r\n    this.props.unlockConfig();\r\n    this.setState({ newCycleModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeNewCycleModal = () => {\r\n    this.props.saveConfig();\r\n    this.setState({ newCycleModalIsOpen: false });\r\n  };\r\n\r\n  openPasswordPrompt = () => {\r\n    this.setState({ passwordPromptIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closePasswordPrompt = () => {\r\n    this.setState({ passwordPromptIsOpen: false });\r\n  };\r\n\r\n  openFtpTargetsModal = () => {\r\n    this.props.unlockConfig();\r\n    this.setState({ ftpTargetsModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeFtpTargetsModal = () => {\r\n    this.props.saveConfig();\r\n    this.setState({ ftpTargetsModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = (log) => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  handleQSClicked = () => {\r\n    if (this.state.qsClickedTimes < 5) {\r\n      this.setState({ qsClickedTimes: this.state.qsClickedTimes + 1 });\r\n      return;\r\n    }\r\n\r\n    if (this.props.configLocked) {\r\n      this.openPasswordPrompt();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  handlePasswordSubmitted = (e) => {\r\n    e.preventDefault();\r\n    this.props.confirmPassword(this.state.password, (correct) => {\r\n      if (correct) {\r\n        this.props.unlockConfig();\r\n      } else {\r\n        window.alert(\"Password incorrect\");\r\n      }\r\n    });\r\n    this.closePasswordPrompt();\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.closeMenu;\r\n\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const newCycleValues = {\r\n      selfLearning: {\r\n        downloadExcel: {\r\n          name: \"Download Excel file\",\r\n          type: \"button\",\r\n          onClick: () => {\r\n            this.props.downloadExcel();\r\n          },\r\n        },\r\n        resetSL: {\r\n          name: \"Reset Self Learning Data\",\r\n          type: \"button\",\r\n          onClick: () => {\r\n            this.props.resetSLData();\r\n          },\r\n        },\r\n        logID: {\r\n          type: \"external\",\r\n          location: \"logger.logID\",\r\n          configuration: {\r\n            name: \"LogID\",\r\n            type: \"text\",\r\n          },\r\n        },\r\n        startCalibration: {\r\n          name: \"Calibration\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          rounding,\r\n        },\r\n        totalNumber: {\r\n          name: \"Total number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map((log) => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.dateTimeModalIsOpen}\r\n          onRequestClose={this.closeDateTimeModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent dateTime\"\r\n          contentLabel=\"Date Time Modal\"\r\n        >\r\n          <h3>Date and Time</h3>\r\n          <br />\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              this.props.setDateTime(this.state.newDate);\r\n            }}\r\n          >\r\n            Change internal time:\r\n            <input type=\"submit\" value=\"Save\" />\r\n            <input\r\n              type=\"datetime-local\"\r\n              name=\"newDate\"\r\n              value={this.state.newDate}\r\n              onChange={(event) => this.setState({ newDate: event.target.value })}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.newCycleModalIsOpen}\r\n          onRequestClose={this.closeNewCycleModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"New SL Cycle Modal\"\r\n        >\r\n          <form>\r\n            <h2>Start new cycle</h2>\r\n            {this.state.newCycleModalIsOpen && makeForm(newCycleValues, this.props.config, this.props.changeConfig)}\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.passwordPromptIsOpen}\r\n          onRequestClose={this.closePasswordPrompt}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Config Password Prompt\"\r\n        >\r\n          <form onSubmit={this.handlePasswordSubmitted}>\r\n            <h2>Enter password</h2>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n            <br />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.ftpTargetsModalIsOpen}\r\n          onRequestClose={this.closeFtpTargetsModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"FTP Targets Modal\"\r\n        >\r\n          <form>\r\n            <h2>FTP Targets</h2>\r\n            {this.state.ftpTargetsModalIsOpen && makeForm(ftpTargetsValues, this.props.config, this.props.changeConfig)}\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={(newState) => !newState.isOpen && closeMenu()}\r\n          width={450}\r\n        >\r\n          {this.props.exposeSettings && (\r\n            <span className=\"menu-item menu-item--clickable\">\r\n              <span\r\n                onClick={() => {\r\n                  closeMenu();\r\n                  this.toggleConfigLock();\r\n                }}\r\n              >\r\n                Unlock settings\r\n              </span>{\" \"}\r\n              <Toggle\r\n                checked={!this.props.configLocked}\r\n                onChange={() => {\r\n                  closeMenu();\r\n                  this.toggleConfigLock();\r\n                }}\r\n              />\r\n            </span>\r\n          )}\r\n          {this.props.selfLearningEnabled.endsWith(\"ind\") && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openNewCycleModal}>\r\n              Start new cycle\r\n            </span>\r\n          )}\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.downloadExcel();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Download Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={uploadExcel}>\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openFtpTargetsModal}>\r\n              FTP Targets\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                if (this.props.manualResetHard) this.props.hardReboot();\r\n                else this.props.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\")) this.props.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item menu-item--clickable\" onClick={this.openDateTimeModal}>\r\n            Set date and time\r\n          </span>\r\n          <span className=\"menu-item\" onClick={this.handleQSClicked}>\r\n            QS code: {this.props.QS}\r\n          </span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: [],\r\n      selfLearningEnabled: \"\",\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    exposeSettings: state.static.exposeSettings,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets,\r\n    selfLearningEnabled: state.config.selfLearning.enabled,\r\n    time: state.misc.time,\r\n    manualResetHard: state.static.manualResetHard,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  downloadExcel,\r\n  downloadAllLogs,\r\n  deleteLog,\r\n  deleteAllLogs,\r\n  downloadLog,\r\n  getLogList,\r\n  unlockConfig,\r\n  toggleMenu,\r\n  openMenu,\r\n  closeMenu,\r\n  saveConfig,\r\n  reboot,\r\n  hardReboot,\r\n  shutdown,\r\n  uploadLog,\r\n  setDateTime,\r\n  changeConfig,\r\n  resetSLData,\r\n  confirmPassword,\r\n})(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport { getColumnWidth } from \"../../helpers\";\r\n\r\nclass LogModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: \"full\"\r\n    };\r\n  }\r\n\r\n  changeFilterType = event => {\r\n    this.setState({ filterType: event.target.value });\r\n  };\r\n\r\n  filterTypes = [\r\n    {\r\n      id: \"full\",\r\n      name: \"Show only complete\",\r\n      title: \"Complete Log\",\r\n      filter: entry => entry.full\r\n    }\r\n  ];\r\n\r\n  componentWillMount() {\r\n    if (this.props.uniqueLogEnabled) {\r\n      this.filterTypes.push({\r\n        id: \"unique\",\r\n        name: \"Show only unique\",\r\n        title: \"Unique Log\",\r\n        filter: entry => entry.TU\r\n      });\r\n    }\r\n\r\n    if (this.props.activityCounter) {\r\n      this.filterTypes.push({\r\n        id: \"activity\",\r\n        name: \"Show only activity\",\r\n        title: \"Activity Log\",\r\n        filter: entry => entry.TA\r\n      });\r\n    }\r\n    this.filterTypes.push({\r\n      id: \"none\",\r\n      name: \"Show all\",\r\n      title: \"Normal Log\",\r\n      filter: entry => true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const currentFilter = this.filterTypes.find(filter => filter.id === this.state.filterType);\r\n\r\n    const { entries, accessors, legend, digits, visible } = this.props.loggerState;\r\n    const columns = legend\r\n      .map((name, index) => ({\r\n        Header: () => <b>{name}</b>,\r\n        accessor: accessors[index],\r\n        width: getColumnWidth(entries, accessors[index]),\r\n        style: { textAlign: \"center\" },\r\n        Cell: props => {\r\n          if (typeof props.value === \"number\") {\r\n            return props.value.toFixed(digits[index]);\r\n          }\r\n          return props.value;\r\n        },\r\n        name\r\n      }))\r\n      .filter((_, index) => visible[index])\r\n      .filter(column => this.props.uniqueLogEnabled || column.name !== \"TU\")\r\n      .filter(column => this.props.activityCounter || column.name !== \"TA\");\r\n\r\n    const filteredEntries = entries.filter(currentFilter.filter);\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"Log Modal\"\r\n      >\r\n        {this.filterTypes.length > 1 && (\r\n          <span>\r\n            <select value={this.state.filterType} onChange={this.changeFilterType}>\r\n              {this.filterTypes.map(filter => (\r\n                <option value={filter.id}>{filter.name}</option>\r\n              ))}\r\n            </select>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"main--logModal\">\r\n          <div>\r\n            <div className=\"main--logModal--title\">\r\n              <b>{currentFilter.title}</b>\r\n            </div>\r\n            <ReactTable style={{ fontSize: 14 }} data={filteredEntries} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  const loggerState = state.internal.logger;\r\n\r\n  return {\r\n    uniqueLogEnabled,\r\n    activityCounter,\r\n    loggerState\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LogModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandEnabled: {\r\n          name: \"AutoCommand\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandMin: {\r\n          name: \"Min Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandMax: {\r\n          name: \"Max Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandTime: {\r\n          name: \"Time (sec)\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandText: {\r\n          name: \"Command\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) => (i === index ? !element : element))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.comIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\",\r\n                \"comElement--content--warning\": this.props.warning\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history.slice(0, this.props.config.serial.coms[com.index].entries).map(element => (\r\n                    <>\r\n                      <div>{element.timeString}</div>\r\n                      <div>{element.entry}</div>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  const warning = state.internal.warning;\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    warning\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { changeConfig })(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceOutput } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        hardwareOutput: {\r\n          name: \"Hardware output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"HW Output 1\",\r\n            \"1\": \"HW Output 2\",\r\n            \"2\": \"HW Output 3\",\r\n            \"3\": \"HW Output 4\",\r\n            \"4\": \"HW Output 5\",\r\n            \"5\": \"HW Output 6\",\r\n            \"6\": \"HW Output 7\",\r\n            \"7\": \"HW Output 8\",\r\n            \"8\": \"HW Output 9\",\r\n            \"9\": \"HW Output 10\"\r\n          }\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.output.ports[index].execute\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        },\r\n        warning: {\r\n          name: \"Use as warning\",\r\n          type: \"checkbox\"\r\n        },\r\n        warningPeriod: {\r\n          name: \"Warning period\",\r\n          type: \"number\",\r\n          min: 0,\r\n          condition: (config, index) => config.output.ports[index].warning\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(port => port.visible);\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { forceOutput, changeConfig })(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceInput } from \"../actions/internalActions\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\",\r\n        },\r\n        hardwareInput: {\r\n          name: \"Hardware input\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            0: \"HW Input 1\",\r\n            1: \"HW Input 2\",\r\n            2: \"HW Input 3\",\r\n            3: \"HW Input 4\",\r\n            4: \"HW Input 5\",\r\n          },\r\n        },\r\n        normalState: {\r\n          name: \"Normally open/closed\",\r\n          type: \"select\",\r\n          options: {\r\n            open: \"Normally open\",\r\n            closed: \"Normally closed\",\r\n          },\r\n          condition: (config, index) => config.input.ports[index].hardwareInput >= 0,\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\",\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            reset: \"Reset Table\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\",\r\n          },\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\",\r\n          },\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\",\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\",\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\",\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            0: \"Follow ouput 1\",\r\n            1: \"Follow ouput 2\",\r\n            2: \"Follow ouput 3\",\r\n            3: \"Follow ouput 4\",\r\n            4: \"Follow ouput 5\",\r\n            5: \"Follow ouput 6\",\r\n            6: \"Follow ouput 7\",\r\n            7: \"Follow ouput 8\",\r\n            8: \"Follow ouput 9\",\r\n            9: \"Follow ouput 10\",\r\n          },\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = (index) => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map((port) => {\r\n              let state = port.state ? \"On\" : \"Off\";\r\n              if (port.isForced) state = \"Forced\" + state;\r\n              if (\r\n                state === \"Off\" &&\r\n                port.formula === \"exe\" &&\r\n                this.props.inputs.reduce((acc, cur) => acc || cur.blocking, false)\r\n              )\r\n                state = \"Blocked\";\r\n\r\n              let indicator = \"buttonList--list--indicator--input\" + state;\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name,\r\n    formula: state.config.input.ports[index].formula,\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map((port) => port.visible);\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { forceInput, changeConfig })(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={event => {\r\n            const value = event.target.value;\r\n            const message = props.cell.numeric ? Number(value) : value;\r\n            props.manualFunction(index, message);\r\n          }}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) + 1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length) newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      if (typeof content == \"number\") content = content.toFixed(cell.digits);\r\n\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\" style={{ backgroundColor: !props.notFound && cell.color }}>\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { tableManual } from \"../actions/internalActions\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\",\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\",\r\n        },\r\n        showInLog: {\r\n          name: \"Show in log\",\r\n          type: \"checkbox\",\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\",\r\n          },\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.table.cells[index].type === \"reader\",\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.table.cells[index].type !== \"date\",\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) => [\"normal\", \"date\"].includes(config.table.cells[index].type),\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) => config.table.cells[index].type === \"menu\",\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => [\"normal\", \"reader\"].includes(config.table.cells[index].type),\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\",\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = (index) => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index],\r\n      }))\r\n      .filter((cell) => !this.props.configLocked || cell.visible);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell {String.fromCharCode(65 + Math.floor(this.state.configCellIndex / 5))}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configCellIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map((cell) => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.tableManual}\r\n              openModal={this.props.configLocked ? this.props.openLog : () => this.openConfigModal(cell.index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name,\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { tableManual, changeConfig })(Table);\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport \"../../styles/reactTable.scss\";\r\n\r\nlet id = 0;\r\n\r\nexport default function ReactTableWrapper(props) {\r\n  const columns = props.columns.map(column => {\r\n    id++;\r\n    return {\r\n      ...column,\r\n      id,\r\n      style: { ...column.style, ...props.style },\r\n      Header: (\r\n        <div className=\"reactTable--header\">\r\n          {column.Headers.map(element => (\r\n            <div className=\"reactTable--header--child\">{element || \" \"}</div>\r\n          ))}\r\n        </div>\r\n      )\r\n    };\r\n  });\r\n\r\n  return <ReactTable ref={props.forwardRef} data={props.data} columns={columns} />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"../util/ReactTableWrapper\";\r\nimport Toggle from \"react-toggle\";\r\nimport dateFormat from \"dateformat\";\r\nimport XLSX from \"xlsx\";\r\n\r\nimport { daysToDate } from \"../../helpers\";\r\nimport { deleteGeneralSL, deleteIndividualSL, resetIndividualSL } from \"../../actions/selfLearningActions\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nfunction sum(list) {\r\n  return list.filter(entry => entry).reduce((acc, cur) => acc + cur, 0);\r\n}\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.UNTable = React.createRef();\r\n    this.SLTable = React.createRef();\r\n\r\n    this.state = {\r\n      showIndividualTable: true\r\n    };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({\r\n      showIndividualTable: !this.state.showIndividualTable\r\n    });\r\n  };\r\n\r\n  getSLModalContent() {\r\n    const comConfigs = this.props.config.serial.coms;\r\n    const comIndex = this.props.comIndex;\r\n    const extraColumnConfigs = this.props.config.selfLearning.extraColumns;\r\n\r\n    const keyName = comConfigs[1 - comIndex].name;\r\n    const valueName = comConfigs[comIndex].name;\r\n    const valueRounding = comConfigs[comIndex].digits;\r\n\r\n    const firstTopDigits = this.props.config.selfLearning.firstTopDigits;\r\n    const secondTopDigits = this.props.config.selfLearning.secondTopDigits;\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n    const individualColumnHeaders = this.props.individualColumnHeaders;\r\n    const headerRoundings = [firstTopDigits, secondTopDigits, ...extraColumnConfigs.map(column => column.digits)];\r\n    const formattedHeaders = individualColumnHeaders.map((header, index) =>\r\n      header ? Number(header).toFixed(headerRoundings[index]) : \"\"\r\n    );\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({\r\n        key,\r\n        ...this.props.generalEntries[key]\r\n      });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({\r\n        key,\r\n        ...this.props.individualEntries[key]\r\n      });\r\n    }\r\n\r\n    const extraColumns = this.props.config.selfLearning.extraColumns.map((column, index) => {\r\n      return {\r\n        Headers: [formattedHeaders[index + 2], column.title],\r\n        accessor: row => row.extra[index],\r\n        Cell: props => {\r\n          switch (column.type) {\r\n            case \"text\":\r\n              return props.value ? String(props.value).slice(-column.digits) : \"\";\r\n            case \"number\":\r\n              return Number(props.value).toFixed(column.digits);\r\n            case \"date\":\r\n              return Number(props.value) > 0\r\n                ? dateFormat(daysToDate(Number(props.value)), \"dd-mm-yyyy\")\r\n                : \"Invalid date\";\r\n            default:\r\n              return props.value;\r\n          }\r\n        },\r\n        width: Math.max(80, 11 * column.title.length),\r\n        generalVisible: column.generalVisible\r\n      };\r\n    });\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Headers: [\"\", valueName],\r\n        accessor: row => row.entries[0],\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-1\"],\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-2\"],\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-3\"],\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-4\"],\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns.filter(column => column.generalVisible),\r\n      {\r\n        Headers: [\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete all general entries?`)) {\r\n                this.props.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>\r\n          </button>,\r\n          \"\"\r\n        ],\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to delete general entries for ${props.original.key}?`)) {\r\n                  this.props.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    if (this.props.activityCounter) {\r\n      generalTableColumns.push(\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Headers: [formattedHeaders[0], valueName],\r\n        accessor: \"calibration\",\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(valueRounding)\r\n      },\r\n      {\r\n        Headers: [formattedHeaders[1], keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns\r\n    ];\r\n\r\n    if (this.props.showTolerance) {\r\n      individualTableColumns.push({\r\n        Headers: [\"\", \"Tol\"],\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          const incrementIndex = Math.floor(Math.min(4, props.original.increments));\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[incrementIndex],\r\n                color: textColors[incrementIndex]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        width: 50\r\n      });\r\n    }\r\n\r\n    individualTableColumns.push(\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdates)), \"Num\"],\r\n        accessor: \"numUpdates\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[0])), \"-1\"],\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[1])), \"-2\"],\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[2])), \"-3\"],\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      }\r\n    );\r\n\r\n    if (this.props.activityCounter) {\r\n      individualTableColumns.push(\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const exitOptions = this.props.config.selfLearning.exitOptions;\r\n\r\n    individualTableColumns.push({\r\n      Headers: [\r\n        <button\r\n          onClick={() => {\r\n            if (window.confirm(`Are you sure you want to delete all individual entries?`)) {\r\n              this.props.deleteIndividualSL();\r\n            }\r\n          }}\r\n        >\r\n          <b> Delete </b>{\" \"}\r\n        </button>,\r\n        \"\"\r\n      ],\r\n      Cell: props =>\r\n        exitOptions.length ? (\r\n          <select\r\n            value=\"\"\r\n            onChange={event => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key, event.target.value);\r\n              }\r\n            }}\r\n          >\r\n            <option value=\"\">Delete</option>\r\n            {exitOptions.map(({ key, value }) => (\r\n              <option value={key}>{value}</option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key);\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n      width: 70\r\n    });\r\n\r\n    const tableStyle = { textAlign: \"center\" };\r\n\r\n    const downloadTable = () => {\r\n      const table = [];\r\n      let cols, tableRef, sheetName;\r\n\r\n      if (this.state.showIndividualTable) {\r\n        cols = individualTableColumns.slice(0, -1);\r\n        tableRef = this.UNTable;\r\n        sheetName = \"UN List\";\r\n      } else {\r\n        cols = generalTableColumns;\r\n        cols.splice(8, 1);\r\n        tableRef = this.SLTable;\r\n        sheetName = \"SL List\";\r\n      }\r\n\r\n      table[0] = cols.map(col => col.Headers[0]);\r\n      table[1] = cols.map(col => col.Headers[1]);\r\n\r\n      for (let row of tableRef.current.getResolvedState().sortedData) {\r\n        row = Object.values(row);\r\n        const newRow = [];\r\n        for (let i = 0; i < cols.length; i++) newRow.push(row[i]);\r\n        table.push(newRow);\r\n      }\r\n\r\n      const ws = XLSX.utils.aoa_to_sheet(table);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n      const date = dateFormat(new Date(), \"yyyy-mm-dd_HH-MM-ss\");\r\n\r\n      XLSX.writeFile(wb, `${this.props.name}_${this.props.config.logger.logID}_${date}.xlsx`);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle checked={this.state.showIndividualTable} onChange={this.toggleIndividualTable} />\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}\r\n        </span>\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button style={{ marginRight: \"20px\" }} onClick={downloadTable}>\r\n            <b> Download </b>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reset the data of the individual selfLearning?\"))\r\n                this.props.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b> Reset </b>\r\n          </button>\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN - list </div>\r\n            <ReactTable\r\n              forwardRef={this.UNTable}\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n              style={tableStyle}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL - list </div>\r\n            <ReactTable\r\n              forwardRef={this.SLTable}\r\n              style={tableStyle}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const showTolerance = state.static.showTolerance;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    showTolerance,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter,\r\n    name\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteGeneralSL, deleteIndividualSL, resetIndividualSL })(SelfLearningModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\nimport { downloadExcel, uploadExcelTemplate } from \"../actions/excelActions\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        normal: {\r\n          type: \"conditional\",\r\n          condition: config => !config.selfLearning.enabled.endsWith(\"ind\") && config.selfLearning.enabled !== \"off\",\r\n          contents: {\r\n            LogID: {\r\n              name: \"LogID\",\r\n              type: \"external\",\r\n              location: \"logger.logID\",\r\n              configuration: {\r\n                name: \"LogID\",\r\n                type: \"text\"\r\n              }\r\n            },\r\n            startCalibration: {\r\n              name: \"Calibration\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              rounding\r\n            },\r\n            totalNumber: {\r\n              name: \"Total number\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            startTolerance: {\r\n              name: \"Extra tolerance during learning %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            }\r\n          }\r\n        },\r\n        individual: {\r\n          type: \"conditional\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\"),\r\n          contents: {\r\n            important: {\r\n              type: \"emphasis\",\r\n              contents: {\r\n                downloadExcel: {\r\n                  name: \"Download Excel file\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.downloadExcel();\r\n                  }\r\n                },\r\n                resetSL: {\r\n                  name: \"Reset Self Learning Data\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.resetSLData();\r\n                  }\r\n                },\r\n                logID: {\r\n                  type: \"external\",\r\n                  location: \"logger.logID\",\r\n                  configuration: {\r\n                    name: \"LogID\",\r\n                    type: \"text\"\r\n                  }\r\n                },\r\n                startCalibration: {\r\n                  name: \"Calibration\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  rounding\r\n                },\r\n                totalNumber: {\r\n                  name: \"Total number\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                }\r\n              }\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"SL Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            individualToleranceAbs: {\r\n              name: \"Individual tolerance\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualTolerance: {\r\n              name: \"Individual tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualToleranceShift: {\r\n              name: \"Individual tolerance shift %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionIncrement: {\r\n              name: \"Correction %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionLimit: {\r\n              name: \"Correction limit (1-9)\",\r\n              type: \"number\",\r\n              min: 1,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualAverageNumber: {\r\n              name: \"Average calibration number (1-9)\",\r\n              type: \"number\",\r\n              min: 1,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            excelIndividualColumn: {\r\n              type: \"external\",\r\n              location: \"table.individualColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Com Ind\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelDateColumn: {\r\n              type: \"external\",\r\n              location: \"table.dateColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Date\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelExitColumn: {\r\n              type: \"external\",\r\n              location: \"table.exitColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Exit\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            exitOptions: {\r\n              name: \"Exit options\",\r\n              type: \"keyValue\"\r\n            },\r\n            activityCounter: {\r\n              type: \"checkbox\",\r\n              name: \"Activity counter\"\r\n            },\r\n            uploadExcelTemplate: {\r\n              name: \"Import Excel Template\",\r\n              type: \"button\",\r\n              onClick: uploadExcelTemplate\r\n            },\r\n            title: {\r\n              name: \"List column configuration\",\r\n              type: \"title\"\r\n            },\r\n            firstTopFormula: {\r\n              name: \"#1 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            firstTopDigits: {\r\n              name: \"#1 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            secondTopFormula: {\r\n              name: \"#2 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            secondTopDigits: {\r\n              name: \"#2 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            extraColumns: {\r\n              name: \"Additional columns\",\r\n              type: \"structArray\",\r\n              structure: {\r\n                title: {\r\n                  name: \"Title\",\r\n                  type: \"text\"\r\n                },\r\n                topFormula: {\r\n                  name: \"Top formula\",\r\n                  type: \"text\"\r\n                },\r\n                formula: {\r\n                  name: \"Formula\",\r\n                  type: \"text\"\r\n                },\r\n                type: {\r\n                  name: \"Type of content\",\r\n                  type: \"select\",\r\n                  options: {\r\n                    text: \"Non-num\",\r\n                    number: \"Numeric\",\r\n                    date: \"Date\"\r\n                  }\r\n                },\r\n                digits: {\r\n                  name: \"Digits\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                },\r\n                generalVisible: {\r\n                  name: \"Show in SL list\",\r\n                  type: \"checkbox\"\r\n                }\r\n              },\r\n              defaults: {\r\n                title: \"\",\r\n                topFormula: \"\",\r\n                formula: \"\",\r\n                type: \"text\",\r\n                digits: 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\"selfLearning--inProgress\", \"selfLearning--success\", \"selfLearning--warning\"];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(this.props.config.serial.coms[this.props.comIndex || 0].digits) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(Math.round((this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000) / 10 + \"%\");\r\n    }\r\n\r\n    if (this.props.individual && this.props.activityCounter) {\r\n      const activity =\r\n        Object.values(this.props.individualEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0) +\r\n        Object.values(this.props.generalEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0);\r\n\r\n      cells.push(activity);\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal isOpen={this.state.SLModalIsOpen} onClose={this.closeSLModal} />\r\n\r\n        <div\r\n          className={classNames(\"selfLearning\", indicators[this.props.success || 0])}\r\n          onClick={this.props.configLocked ? (this.props.individual ? this.openSLModal : null) : this.openConfigModal}\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const activityCounter = state.config.selfLearning.activityCounter;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { resetSLData, downloadExcel, changeConfig })(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig,\r\n} from \"../actions/configActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      listModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\"),\r\n    };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\",\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" },\r\n        },\r\n      },\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\",\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"],\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            numeric: true,\r\n            options: [...Array(26).keys()].map((i) => String.fromCharCode(\"A\".charCodeAt(0) + i)),\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\",\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\",\r\n          },\r\n          csvSeparator: {\r\n            name: \"CSV separator\",\r\n            type: \"select\",\r\n            options: { \",\": \",\", \";\": \";\" },\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\",\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" },\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\",\r\n            },\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: (config) => config.logger.resetMode === \"time\",\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: (config) => config.logger.resetMode === \"interval\",\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\",\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\",\r\n          },\r\n          uploadExcel: {\r\n            name: \"Include Excel with upload\",\r\n            type: \"checkbox\",\r\n          },\r\n          targets: [1, 2].map((index) => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\",\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\",\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\",\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\",\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\",\r\n            },\r\n          })),\r\n        },\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map((config) => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input type=\"button\" value=\"Delete\" onClick={() => this.props.deleteConfig(config)} />\r\n                  <input type=\"button\" value=\"Load\" onClick={() => this.props.loadConfig(config)} />\r\n                  <input type=\"button\" value=\"Download\" onClick={() => this.props.downloadConfig(config)} />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input type=\"button\" value=\"Upload\" onClick={() => this.props.uploadConfig(this.props.version)} />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration - V{this.props.version}</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\"Please enter the name for the new config file:\", \"config\");\r\n                    if (name) this.props.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              <h3>Date and Time</h3>\r\n              <br />\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault();\r\n                  this.props.setDateTime(this.state.newDate);\r\n                }}\r\n              >\r\n                Change internal time:\r\n                <input type=\"submit\" value=\"Save\" />\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"newDate\"\r\n                  value={this.state.newDate}\r\n                  onChange={(event) => this.setState({ newDate: event.target.value })}\r\n                />\r\n              </form>\r\n\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div className=\"infobar\" onClick={this.props.configLocked ? null : this.openConfigModal}>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {this.props.name}\r\n                {this.props.logID === \"\" ? \"\" : ` - ${this.props.logID}`}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"HH:mm:ss\")}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"DD-MM-YYYY\")}</div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const logID = state.config.logger.logID;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n  const version = state.static.version;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    logID,\r\n    ip,\r\n    time,\r\n    version,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig,\r\n  setDateTime,\r\n})(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { loadConfig, loadStatic } from \"../actions/configActions\";\r\nimport { getLog } from \"../actions/logActions\";\r\nimport { openMenu, getLogo } from \"../actions/menuActions\";\r\n\r\nimport LogModal from \"./modals/LogModal\";\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.loadConfig();\r\n    this.props.loadStatic();\r\n\r\n    getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalFilterType: \"none\",\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.props.getLog, 1000)\r\n    });\r\n    this.props.getLog();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <LogModal isOpen={this.state.logModalIsOpen} onClose={this.closeLogModal} />\r\n          <div className=\"info\">\r\n            <Infobar />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo image={this.state.logo} alt=\"LOGO\" onClick={this.props.openMenu} />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && <SelfLearning />}\r\n            <ComList />\r\n          </div>\r\n\r\n          {this.props.showOutputs && <div className=\"outputs\">{this.props.showOutputs && <OutputList />} </div>}\r\n          {this.props.showInputs && <div className=\"inputs\">{this.props.showInputs && <InputList />}</div>}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable = state.static.exposeUpload && (!configLocked || state.config.table.cells.some(cell => cell.visible));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.input.ports.some(port => port.visible));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.output.ports.some(port => port.visible));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning && (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadConfig, loadStatic, openMenu, getLog }\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  LOGGER_STATE,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR,\r\n  SET_WARNING,\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: [],\r\n  },\r\n  logger: {\r\n    entries: [],\r\n    legend: [],\r\n    accessors: [],\r\n    digits: [],\r\n    visible: [],\r\n  },\r\n  tableNotFound: false,\r\n  warning: false,\r\n};\r\n\r\nexport default function (fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced, blocking } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced, blocking };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\"),\r\n          },\r\n          ...fullState.coms[index].history,\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory,\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case SERIAL_CLEAR: {\r\n      const newComs = fullState.coms.map((com) => ({\r\n        entry: \"\",\r\n        entryTime: new Date(),\r\n        history: com.history,\r\n      }));\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload },\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload,\r\n      };\r\n    }\r\n    case LOGGER_STATE: {\r\n      return {\r\n        ...fullState,\r\n        logger: action.payload,\r\n      };\r\n    }\r\n    case SET_WARNING: {\r\n      return {\r\n        ...fullState,\r\n        warning: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SERIAL_COM_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR,\r\n  SET_WARNING\r\n} from \"./types\";\r\n\r\nexport default {\r\n  input: INPUT_PORT_STATE,\r\n  output: OUTPUT_PORT_STATE,\r\n  table: TABLE_CELL_STATE,\r\n  tableColor: TABLE_CELL_COLOR,\r\n  entry: SERIAL_COM_STATE,\r\n  selfLearning: SELFLEARNING_STATE,\r\n  ip: RECEIVE_IP,\r\n  time: RECEIVE_TIME,\r\n  notfound: TABLE_FOUND_STATE,\r\n  clearSerial: SERIAL_CLEAR,\r\n  setWarning: SET_WARNING\r\n};\r\n","import io from \"socket.io-client\";\r\nimport messageTypes from \"./messageTypes.js\";\r\n\r\nconst socket = io();\r\n\r\nexport const init = store => {\r\n  for (const type in messageTypes) {\r\n    socket.on(type, payload => store.dispatch({ type: messageTypes[type], payload }));\r\n  }\r\n  socket.on(\"error\", payload => window.alert(payload));\r\n};\r\n\r\nexport const emit = (type, payload, callback) => socket.emit(type, payload, callback);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport { init, emit } from \"./actions/socketApi\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst middleware = [thunk.withExtraArgument({ emit })];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\ninit(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"LOGGER_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\",\r\n  \"SET_WARNING\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";","import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, changeConfig, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(value[0][key], config, changeConfig, index, name + \"[\" + index + \"].\" + key)\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(element, config, changeConfig, index, name + \"[\" + index + \"]\");\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key => makeForm(value[key], config, changeConfig, index, name + (name ? \".\" : \"\") + key))}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"emphasis\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return (\r\n          <div className=\"configuration--emphasis\">\r\n            {makeForm(value.contents, config, changeConfig, index, oldName)}\r\n          </div>\r\n        );\r\n      }\r\n      case \"conditional\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return makeForm(value.contents, config, changeConfig, index, oldName);\r\n      }\r\n      case \"external\": {\r\n        return makeForm(value.configuration, config, changeConfig, index, value.location);\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const structure = value.structure;\r\n        const defaultStruct = value.defaults;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"configuration--struct\">\r\n                #{index + 3}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    contents.splice(index, 1);\r\n                    changeConfig(name, contents);\r\n                  }}\r\n                />\r\n                {makeForm(structure, config, changeConfig, index, name + \"[\" + index + \"]\")}\r\n              </div>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                        numeric: true\r\n                      });\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"button\": {\r\n        return (\r\n          <>\r\n            <input type=\"button\" value={value.name} className=\"configuration--button\" onClick={value.onClick} />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={value.rounding !== undefined ? round(get(config, name), value.rounding) : get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  changeConfig(name, event.target.checked);\r\n                } else {\r\n                  changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(...rows.map(row => (`${get(row, accessor)}` || \"\").length));\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n"],"sourceRoot":""}