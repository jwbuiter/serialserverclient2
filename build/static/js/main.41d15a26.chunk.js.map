{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","api","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","options","keyOptions","option","onClick","splice","changeConfig","onChange","e","concat","target","console","log","entries","entry","numeric","event","min","max","step","checked","getColumnWidth","rows","accessor","cellLength","Math","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","uploadLog","window","confirm","deleteLog","downloadAllLogs","deleteAllLogs","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","accept","logList","downloadLog","ftpTargets","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","getLogList","exposeUpload","reboot","exposeShutdown","shutdown","QS","Component","connect","loaded","static","locked","misc","logger","writeToFile","FTP","targets","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","i","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","val","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","#3fd35d","yellow","#ffc000","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","endsWith","individualTolerance","individualToleranceIncrement","individualToleranceLimit","individualColors","textColors","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","rounding","generalTableColumns","Header","toFixed","style","textAlign","deleteGeneralSL","Cell","original","individualTableColumns","calibration","backgroundColor","increments","color","deleteIndividualSL","individualEntries","generalEntries","push","react_table_es","data","columns","round","individual","success","matchedTolerance","Logo","src","image","alt","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetTime","resetInterval","automatic","folder","username","password","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","configList","deleteConfig","loadConfig","downloadConfig","click","file","files","versionName","version","configExists","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","openMenu","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","OPEN_MENU","CLOSE_MENU","RECEIVE_CONFIG_LIST","RECEIVE_LOG_LIST","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","toConsumableArray","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","Promise","resolve","_ref","getState","forEach","msg","document","toggleMenu","newConfig","stringify","location","reload","href","fileList","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.41d15a26.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, api, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(\r\n            element,\r\n            config,\r\n            api,\r\n            index,\r\n            name + \"[\" + index + \"]\"\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                api,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    api.changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      console.log(`${name}[${index}].key`, e.target.value);\r\n                      api.changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions).map(entry => (\r\n                      <option value={entry[0]}>{entry[1]}</option>\r\n                    ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      api.changeConfig(\r\n                        `${name}[${index}].key`,\r\n                        e.target.value,\r\n                        {\r\n                          numeric: true\r\n                        }\r\n                      );\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                api.changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  api.changeConfig(name, event.target.checked);\r\n                } else {\r\n                  api.changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 3)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.api.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.api.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.api.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.api.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.api.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"submit\" value=\"Import .xls\" />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.api.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.closeMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>\r\n\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.api.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openUploadModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: []\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n            onClick={\r\n              this.props.configLocked\r\n                ? () => !com.average && this.toggleShowHistory(com.index)\r\n                : () => this.openConfigModal(com.index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) -\r\n            1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) +\r\n            1;\r\n          console.log({ menuOptions, val: cell.value });\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() +\r\n        1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type)\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            ![\"menu\", \"date\"].includes(config.table.cells[index].type)\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: { \"#3fd35d\": \"Green\", yellow: \"Yellow\", \"#ffc000\": \"Orange\" }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config =>\r\n        config.selfLearning.enabled !== \"off\" &&\r\n        !config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    }\r\n  }\r\n};\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.entries[0].toFixed(rounding),\r\n        id: 10,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => {\r\n          const val = row.entries[1];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 2,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => {\r\n          const val = row.entries[2];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 3,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => {\r\n          const val = row.entries[3];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => {\r\n          const val = row.entries[4];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 5,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.calibration.toFixed(rounding),\r\n        style: { textAlign: \"center\" },\r\n        width: 70,\r\n        id: 12\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[props.original.increments],\r\n                color: textColors[props.original.increments]\r\n              }}\r\n            >\r\n              {props.value}\r\n            </div>\r\n          );\r\n        },\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle\r\n            checked={this.state.showIndividualTable}\r\n            onChange={this.toggleIndividualTable}\r\n          />\r\n          Show individual entries\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n            <ReactTable\r\n              style={{ textAlign: \"center\" }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          {this.state.SLModalIsOpen && this.getSLModalContent()}\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config, individual };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetTime: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: config => config.logger.resetMode === \"time\"\r\n    },\r\n    resetInterval: {\r\n      name: \"Interval (min)\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.logger.resetMode === \"interval\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    },\r\n    targets: [1, 2].map(index => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\"\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\"\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\"\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\"\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\"\r\n      }\r\n    }))\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              if (\r\n                this.props.api.configExists(file) &&\r\n                !window.confirm(\"Config already exists. Overwrite?\")\r\n              )\r\n                return;\r\n\r\n              this.uploadRef.parentElement.submit();\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.openMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  socket.on(\"uploadLogResponse\", msg => {\r\n    window.alert(msg);\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function openMenu() {\r\n    store.dispatch({ type: OPEN_MENU });\r\n  }\r\n\r\n  function closeMenu() {\r\n    store.dispatch({ type: CLOSE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      configExists(name).then(result => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(address, value, options) {\r\n    if (options && options.numeric) {\r\n      value = Number(value);\r\n    }\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  function getLogList() {\r\n    socket.emit(\"getLogList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function uploadLog(name, index) {\r\n    socket.emit(\"uploadLog\", { name, index });\r\n  }\r\n\r\n  function downloadLog(name) {\r\n    window.location.href = \"/downloadLog?file=\" + name;\r\n  }\r\n\r\n  function downloadAllLogs() {\r\n    window.location.href =\r\n      \"/downloadLog?multiFile=\" + store.getState().misc.logList;\r\n  }\r\n\r\n  function deleteAllLogs() {\r\n    const fileList = store.getState().misc.logList;\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      socket.emit(\"deleteLog\", fileList[i]);\r\n    }\r\n    getLogList();\r\n  }\r\n\r\n  function deleteLog(name) {\r\n    socket.emit(\"deleteLog\", name);\r\n    getLogList();\r\n  }\r\n\r\n  function configExists(name) {\r\n    return new Promise(resolve => {\r\n      socket.emit(\"configExists\", name, ({ result }) => resolve(result));\r\n    });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL,\r\n    getLogList,\r\n    uploadLog,\r\n    deleteLog,\r\n    downloadLog,\r\n    downloadAllLogs,\r\n    deleteAllLogs,\r\n    configExists\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}