{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","api","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","options","keyOptions","option","onClick","splice","changeConfig","onChange","e","concat","target","console","log","entries","entry","numeric","event","min","max","step","checked","rounding","round","num","digits","factor","Math","pow","getColumnWidth","rows","accessor","cellLength","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","uploadLog","window","confirm","deleteLog","downloadAllLogs","deleteAllLogs","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","accept","logList","downloadLog","ftpTargets","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","getLogList","reboot","exposeShutdown","shutdown","QS","Component","connect","loaded","static","locked","misc","logger","writeToFile","FTP","targets","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","i","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","seconds","manualConfirmation","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","style","backgroundColor","color","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","#3fd35d","yellow","#ffc000","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","individualColors","textColors","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","generalTableColumns","Header","toFixed","textAlign","val","tableExtraColumnTitle","deleteGeneralSL","Cell","original","individualTableColumns","calibration","increments","deleteIndividualSL","individualEntries","generalEntries","push","resetIndividualSL","react_table_es","data","columns","isUndefined","selfLearning","enabled","off","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","endsWith","individualToleranceAbs","individualTolerance","individualCorrectionIncrement","individualCorrectionLimit","tableExtraColumn","individual","success","matchedTolerance","Logo","src","image","alt","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetTime","resetInterval","automatic","folder","username","password","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","configList","deleteConfig","loadConfig","downloadConfig","click","file","files","versionName","version","configExists","then","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","logTableColumns","legend","column","uniqueLogEnabled","logEntries","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","fontSize","components_Infobar","components_Logo","openMenu","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","formulaResults","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","OPEN_MENU","CLOSE_MENU","RECEIVE_CONFIG_LIST","RECEIVE_LOG_LIST","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","toConsumableArray","_action$payload4","newCells","_action$payload5","store","socket","socketIOClient","messageTypes","tableColor","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","Promise","resolve","_ref","getState","forEach","document","toggleMenu","newConfig","stringify","location","reload","href","msg","fileList","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.65a4d9a9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, api, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(\r\n            element,\r\n            config,\r\n            api,\r\n            index,\r\n            name + \"[\" + index + \"]\"\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                api,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    api.changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      console.log(`${name}[${index}].key`, e.target.value);\r\n                      api.changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      api.changeConfig(\r\n                        `${name}[${index}].key`,\r\n                        e.target.value,\r\n                        {\r\n                          numeric: true\r\n                        }\r\n                      );\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                api.changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={\r\n                value.rounding\r\n                  ? round(get(config, name), value.rounding)\r\n                  : get(config, name)\r\n              }\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  api.changeConfig(name, event.target.checked);\r\n                } else {\r\n                  api.changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.api.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.api.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.api.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.api.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.api.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"submit\" value=\"Import .xls\" />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.api.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.closeMenu()\r\n          }\r\n          width={450}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>{\" \"}\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.api.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openUploadModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: []\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n            onClick={() =>\r\n              !this.props.configLocked && this.openConfigModal(com.index)\r\n            }\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() =>\r\n                this.props.configLocked &&\r\n                !com.average &&\r\n                com.entries > 0 &&\r\n                this.toggleShowHistory(com.index)\r\n              }\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual input requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\"\r\n          }\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.input.ports[index].formula === \"command\"\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.input.ports[index].formula === \"command\"\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual input requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) -\r\n            1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) +\r\n            1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() +\r\n        1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div\r\n        className=\"tableCell--content\"\r\n        style={{ backgroundColor: cell.color }}\r\n      >\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type !== \"date\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type)\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"normal\"\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\"\r\n          },\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type)\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.entries[0].toFixed(rounding),\r\n        id: 10,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => {\r\n          const val = row.entries[1];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 2,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => {\r\n          const val = row.entries[2];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 3,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => {\r\n          const val = row.entries[3];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => {\r\n          const val = row.entries[4];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 5,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: this.props.tableExtraColumnTitle,\r\n        accessor: \"extra\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.calibration.toFixed(rounding),\r\n        style: { textAlign: \"center\" },\r\n        width: 70,\r\n        id: 12\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: this.props.tableExtraColumnTitle,\r\n        accessor: \"extra\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[props.original.increments],\r\n                color: textColors[props.original.increments]\r\n              }}\r\n            >\r\n              {props.value.toFixed(rounding)}\r\n            </div>\r\n          );\r\n        },\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, ...this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle\r\n            checked={this.state.showIndividualTable}\r\n            onChange={this.toggleIndividualTable}\r\n          />{\" \"}\r\n          Show SL-list\r\n        </span>\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  \"Are you sure you want to reset the data of the individual selfLearning?\"\r\n                )\r\n              )\r\n                this.props.api.resetIndividualSL();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        </span>\r\n        {!this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n            <ReactTable\r\n              style={{ textAlign: \"center\" }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex))\r\n      rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        number: {\r\n          name: \"Number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled !== \"off\"\r\n        },\r\n        startCalibration: {\r\n          name: \"Calibration\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          rounding,\r\n          condition: config => config.selfLearning.enabled !== \"off\"\r\n        },\r\n        tolerance: {\r\n          name: \"Tolerance %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled !== \"off\"\r\n        },\r\n        startTolerance: {\r\n          name: \"Additional tolerance during learning %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config =>\r\n            config.selfLearning.enabled !== \"off\" &&\r\n            !config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualToleranceAbs: {\r\n          name: \"Individual tolerance\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualTolerance: {\r\n          name: \"Individual tolerance %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualCorrectionIncrement: {\r\n          name: \"Correction %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualCorrectionLimit: {\r\n          name: \"Correction limit (max 9)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          max: 9,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        tableExtraColumnTitle: {\r\n          name: \"Extra column title\",\r\n          type: \"text\"\r\n        },\r\n        tableExtraColumn: {\r\n          name: \"Extra column number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          {this.state.SLModalIsOpen && this.getSLModalContent()}\r\n        </Modal>\r\n\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetTime: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: config => config.logger.resetMode === \"time\"\r\n    },\r\n    resetInterval: {\r\n      name: \"Interval (min)\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.logger.resetMode === \"interval\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload log on FTP\",\r\n      type: \"checkbox\"\r\n    },\r\n    targets: [1, 2].map(index => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\"\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\"\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\"\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\"\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\"\r\n      }\r\n    }))\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.props.api.configExists(file.name).then(result => {\r\n                console.log(result);\r\n                if (\r\n                  result &&\r\n                  !window.confirm(\"Config already exists. Overwrite?\")\r\n                )\r\n                  return;\r\n\r\n                this.uploadRef.parentElement.submit();\r\n              });\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" },\r\n            name\r\n          }))\r\n          .filter((column, index) => index >= 2)\r\n          .filter(\r\n            column => this.props.uniqueLogEnabled || column.name !== \"TU\"\r\n          ),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 14 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.openMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: []\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    tableColor: TABLE_CELL_COLOR,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    if (\r\n      !store.getState().config.input.ports[index].manualConfirmation ||\r\n      window.confirm(\r\n        `Are you sure you want to manually change input ${index + 1}?`\r\n      )\r\n    ) {\r\n      console.log(\"forceinput\", index);\r\n      socket.emit(\"forceInput\", index);\r\n    }\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    if (\r\n      !store.getState().config.output.ports[index].manualConfirmation ||\r\n      window.confirm(\r\n        `Are you sure you want to manually change output ${index + 1}?`\r\n      )\r\n    ) {\r\n      console.log(\"forceoutput\", index);\r\n      socket.emit(\"forceOutput\", index);\r\n    }\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function openMenu() {\r\n    store.dispatch({ type: OPEN_MENU });\r\n  }\r\n\r\n  function closeMenu() {\r\n    store.dispatch({ type: CLOSE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      configExists(name).then(result => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(address, value, options) {\r\n    if (options && options.numeric) {\r\n      value = Number(value);\r\n    }\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  function resetIndividualSL() {\r\n    socket.emit(\"resetIndividualSL\");\r\n  }\r\n\r\n  function getLogList() {\r\n    socket.emit(\"getLogList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function uploadLog(name, index) {\r\n    socket.emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n  }\r\n\r\n  function downloadLog(name) {\r\n    window.location.href = \"/downloadLog?file=\" + name;\r\n  }\r\n\r\n  function downloadAllLogs() {\r\n    window.location.href =\r\n      \"/downloadLog?multiFile=\" + store.getState().misc.logList;\r\n  }\r\n\r\n  function deleteAllLogs() {\r\n    const fileList = store.getState().misc.logList;\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      socket.emit(\"deleteLog\", fileList[i]);\r\n    }\r\n    getLogList();\r\n  }\r\n\r\n  function deleteLog(name) {\r\n    socket.emit(\"deleteLog\", name);\r\n    getLogList();\r\n  }\r\n\r\n  function configExists(name) {\r\n    return new Promise(resolve => {\r\n      socket.emit(\"configExists\", name, ({ result }) => resolve(result));\r\n    });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL,\r\n    getLogList,\r\n    uploadLog,\r\n    deleteLog,\r\n    downloadLog,\r\n    downloadAllLogs,\r\n    deleteAllLogs,\r\n    configExists,\r\n    resetIndividualSL\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}