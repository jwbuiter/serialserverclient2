{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","api","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","options","option","onClick","splice","changeConfig","onChange","e","concat","target","numeric","event","entries","entry","min","max","step","checked","getColumnWidth","rows","accessor","cellLength","Math","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","window","confirm","reboot","exposeShutdown","shutdown","QS","href","Component","connect","loaded","static","locked","misc","logger","writeToFile","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","i","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","endsWith","individualTolerance","individualToleranceIncrement","individualToleranceLimit","individualColors","textColors","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","rounding","generalTableColumns","Header","toFixed","style","textAlign","val","deleteGeneralSL","Cell","original","individualTableColumns","calibration","backgroundColor","increments","color","deleteIndividualSL","individualEntries","generalEntries","push","react_table_es","data","columns","round","individual","success","matchedTolerance","Logo","src","image","alt","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetTime","resetInterval","FTP","automatic","targets","folder","username","password","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","configList","deleteConfig","loadConfig","downloadConfig","click","versionName","files","version","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","openMenu","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","OPEN_MENU","CLOSE_MENU","RECEIVE_CONFIG_LIST","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","toConsumableArray","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","emit","JSON","parse","axios","console","log","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","getState","forEach","document","toggleMenu","newConfig","stringify","_ref","location","reload","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.65d06b46.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, api, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(\r\n            element,\r\n            config,\r\n            api,\r\n            index,\r\n            name + \"[\" + index + \"]\"\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                api,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    api.changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                      numeric: true\r\n                    });\r\n                  }}\r\n                  value={option.key}\r\n                />\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                api.changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  api.changeConfig(name, event.target.checked);\r\n                } else {\r\n                  api.changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 3)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.api.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"submit\" value=\"Import .xls\" />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.closeMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>\r\n\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openUploadModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n            onClick={\r\n              this.props.configLocked\r\n                ? () => !com.average && this.toggleShowHistory(com.index)\r\n                : () => this.openConfigModal(com.index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) + 1;\r\n\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth()}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type)\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type !== \"menu\"\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"text\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config =>\r\n        config.selfLearning.enabled !== \"off\" &&\r\n        !config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    }\r\n  }\r\n};\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.entries[0].toFixed(rounding),\r\n        id: 10,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => {\r\n          const val = row.entries[1];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 2,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => {\r\n          const val = row.entries[2];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 3,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => {\r\n          const val = row.entries[3];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => {\r\n          const val = row.entries[4];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 5,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.calibration.toFixed(rounding),\r\n        style: { textAlign: \"center\" },\r\n        width: 70,\r\n        id: 12\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[props.original.increments],\r\n                color: textColors[props.original.increments]\r\n              }}\r\n            >\r\n              {props.value}\r\n            </div>\r\n          );\r\n        },\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle\r\n            checked={this.state.showIndividualTable}\r\n            onChange={this.toggleIndividualTable}\r\n          />\r\n          Show individual entries\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n            <ReactTable\r\n              style={{ textAlign: \"center\" }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          {this.state.SLModalIsOpen && this.getSLModalContent()}\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config, individual };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetTime: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: config => config.logger.resetMode === \"time\"\r\n    },\r\n    resetInterval: {\r\n      name: \"Interval (min)\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.logger.resetMode === \"interval\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    },\r\n    targets: [1, 2].map(index => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\"\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\"\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\"\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\"\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\"\r\n      }\r\n    }))\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.uploadRef.parentElement.submit();\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.openMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function openMenu() {\r\n    store.dispatch({ type: OPEN_MENU });\r\n  }\r\n\r\n  function closeMenu() {\r\n    store.dispatch({ type: CLOSE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      socket.emit(\"configExists\", name, ({ result, name }) => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(address, value, options) {\r\n    if (options && options.numeric) {\r\n      value = Number(value);\r\n    }\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}