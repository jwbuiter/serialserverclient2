{"version":3,"sources":["components/Sidebar.js","components/ComElement.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","BurgerMenu","pageWrapId","outerContainerId","className","Component","ComElement","ReactFitText_default","name","compressor","average","concat","entries","entry","OutputList","outputs","map","port","index","console","log","indicator","isForced","result","onClick","clickFunction","InputList","ports","forced","_this2","inputs","TableCell","content","manual","Fragment","value","Logo","src","image","alt","Infobar","ip","moment","time","format","connect","static","misc","Main","loaded","id","components_Infobar","components_Logo","MBDC","coms","com","components_ComElement","components_OutputList","api","forceOutput","components_InputList","forceInput","cells","cell","components_TableCell","config","internal","objectSpread","serial","input","output","table","selfLearning","App","components_Sidebar","components_Main","RECEIVE_CONFIG","require","initialState","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","RECEIVE_IP","RECEIVE_TIME","Date","getTime","combineReducers","arguments","length","undefined","action","type","payload","fullState","_action$payload","newInputs","Array","from","_action$payload2","newOutputs","_action$payload3","entryTime","newComs","_action$payload4","newCells","APIendPoint","window","location","hostname","store","socket","socketIOClient","messageTypes","_loop","message","on","dispatch","axios","get","then","data","emit","Boolean","match","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.663a8b1b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { push as Menu } from \"react-burger-menu\";\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-container\"}>\r\n        <span className=\"menu-item\">Access settings</span>\r\n        <span className=\"menu-item\">Reboot unit</span>\r\n        <span className=\"menu-item\">Upload data</span>\r\n        <span className=\"menu-item\">Shutdown unit</span>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst ComElement = props => {\r\n  return (\r\n    <div className=\"comElement\">\r\n      <div className=\"comElement--title\">\r\n        <div className=\"center\">\r\n          <FitText>\r\n            <div>{props.name}</div>\r\n          </FitText>\r\n          <FitText compressor={2}>\r\n            <div>{props.average && `Average ${props.entries}`}</div>\r\n          </FitText>\r\n        </div>\r\n      </div>\r\n      <div className=\"comElement--content\">\r\n        <FitText>\r\n          <div className=\"center\">{props.entry}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComElement;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nclass OutputList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttonList\">\r\n        <div className=\"buttonList--title\">\r\n          <div className=\"center-vertical\">uitgangen voor poorten</div>\r\n        </div>\r\n        {this.props.outputs.map((port, index) => {\r\n          if (index === 0) console.log(port);\r\n          let indicator = \"buttonList--list--indicator--output\";\r\n          if (port.isForced) indicator += \"Forced\";\r\n\r\n          if (port.state) {\r\n            indicator += \"On\";\r\n          } else if (port.result && !port.isForced) {\r\n            indicator += \"Execute\";\r\n          } else {\r\n            indicator += \"Off\";\r\n          }\r\n\r\n          return (\r\n            <div\r\n              className=\"buttonList--list--item\"\r\n              onClick={() => this.props.clickFunction(index)}\r\n            >\r\n              <div className=\"center-vertical\"> {port.name}</div>\r\n              <div className={\"buttonList--list--indicator \" + indicator} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutputList;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ports: [\r\n        { state: false, forced: false, name: \"blokkering\" },\r\n        { state: false, forced: false, name: \"ingang 1\" },\r\n        { state: false, forced: false, name: \"ingang 2\" },\r\n        { state: false, forced: false, name: \"ingang 2\" },\r\n        { state: false, forced: false, name: \"opslaan\" }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"buttonList inputList\">\r\n        <div className=\"buttonList--title\">\r\n          <div className=\"center-vertical\">ingangen</div>\r\n        </div>\r\n        {this.props.inputs.map((port, index) => {\r\n          let indicator = \"buttonList--list--indicator--input\";\r\n          if (port.isForced) indicator += \"Forced\";\r\n\r\n          indicator += port.state ? \"On\" : \"Off\";\r\n\r\n          return (\r\n            <div\r\n              className=\"buttonList--list--item\"\r\n              onClick={() => this.props.clickFunction(index)}\r\n            >\r\n              <div className=\"center-vertical\"> {port.name}</div>\r\n              <div className={\"buttonList--list--indicator \" + indicator} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputList;\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  let content;\r\n  if (props.manual) {\r\n    if (true) {\r\n      content = (\r\n        <>\r\n          <button className=\"leftButton\">-</button>\r\n          <input className=\"numeric\" />\r\n          <button className=\"rightButton\">+</button>\r\n        </>\r\n      );\r\n    }\r\n  } else {\r\n    content = props.value;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableCell\">\r\n      <div className=\"tableCell--title\">\r\n        <FitText>\r\n          <div className=\"center\">{props.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.4}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"infobar\">\r\n        <div className=\"infobar--item\">\r\n          <FitText compressor={4}>\r\n            <div className=\"center\">\r\n              {this.props.name} | {this.props.ip} |\r\n              {moment(this.props.time).format(\" HH:mm:ss | MMMM Do YYYY\")}\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    name: state.static.name,\r\n    ip: state.misc.ip,\r\n    time: state.misc.time\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ComElement from \"./ComElement\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport TableCell from \"./TableCell\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div>Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\" className=\"main\">\r\n        <Infobar />\r\n        <div className=\"logos\">\r\n          <Logo image={MBDC} alt={\"MBDC\"} />\r\n          {/*<SelfLearning state={this.props.selfLearning} />*/}\r\n        </div>\r\n        <div className=\"coms\">\r\n          {this.props.coms.map(com => {\r\n            return (\r\n              <ComElement\r\n                name={com.name}\r\n                entry={com.entry}\r\n                time={com.time}\r\n                average={com.average}\r\n                entries={com.entries}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"ports\">\r\n          <OutputList\r\n            outputs={this.props.outputs}\r\n            clickFunction={this.props.api.forceOutput}\r\n          />\r\n          <InputList\r\n            inputs={this.props.inputs}\r\n            clickFunction={this.props.api.forceInput}\r\n          />\r\n        </div>\r\n        <div className=\"table\">\r\n          {this.props.cells.map(cell => (\r\n            <TableCell\r\n              name={cell.name}\r\n              value={cell.value}\r\n              manual={cell.manual}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  const selfLearning = state.internal.selfLearning;\r\n\r\n  return {\r\n    loaded: true,\r\n    coms,\r\n    inputs,\r\n    outputs,\r\n    cells,\r\n    selfLearning\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const { RECEIVE_CONFIG } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: []\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      newComs[index] = { entry, entryTime };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime()\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC\r\n} from \"./actions/types\";\r\n\r\nconst APIendPoint = window.location.hostname + \":80\";\r\nconsole.log(APIendPoint);\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient(APIendPoint);\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload =>\r\n      store.dispatch({ type: messageTypes[message], payload })\r\n    );\r\n  }\r\n\r\n  axios\r\n    .get(APIendPoint + \"/config\")\r\n    .then(result =>\r\n      store.dispatch({ type: RECEIVE_CONFIG, payload: result.data })\r\n    );\r\n\r\n  axios\r\n    .get(APIendPoint + \"/static\")\r\n    .then(result =>\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data })\r\n    );\r\n\r\n  function forceInput(index) {\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  return { forceInput, forceOutput };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}