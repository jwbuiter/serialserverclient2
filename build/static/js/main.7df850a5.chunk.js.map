{"version":3,"sources":["actions/excelActions.js","actions/logActions.js","actions/menuActions.js","actions/configActions.js","actions/internalActions.js","actions/selfLearningActions.js","components/Sidebar.js","components/modals/LogModal.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/util/ReactTableWrapper.js","components/modals/SelfLearningModal.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","actions/messageTypes.js","actions/socketApi.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg","helpers.js"],"names":["downloadExcel","window","location","href","uploadExcelTemplate","input","document","createElement","type","accept","onchange","event","data","FormData","append","target","files","axios","post","then","alert","catch","click","getLogList","dispatch","getState","emit","list","RECEIVE_LOG_LIST","payload","openMenu","OPEN_MENU","reboot","get","setTimeout","loadConfig","changeConfig","address","value","options","numeric","Number","CONFIG_CHANGE","getConfigList","RECEIVE_CONFIG_LIST","name","config","RECEIVE_CONFIG","JSON","parse","result","console","log","err","configExists","Promise","resolve","saveConfig","newConfig","stringify","loaded","locked","hasChanged","confirm","consistent","CONFIG_LOCK","reload","setDateTime","date","resetSLData","logID","logger","selfLearning","startCalibration","totalNumber","success","hardReboot","static","newCycleResetHard","message","ftpTargetsValues","resetTime","condition","resetMode","resetInterval","min","step","FTP","targets","map","index","title","folder","username","password","Sidebar","props","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","openLogModal","setState","logModalIsOpen","closeMenu","closeLogModal","openDateTimeModal","dateTimeModalIsOpen","closeDateTimeModal","openNewCycleModal","newCycleModalIsOpen","closeNewCycleModal","openPasswordPrompt","passwordPromptIsOpen","closePasswordPrompt","openImportExcelModal","importExcelModalIsOpen","closeImportExcelModal","openFtpTargetsModal","ftpTargetsModalIsOpen","closeFtpTargetsModal","uploadLog","deleteLog","downloadAllLogs","deleteAllLogs","handleQSClicked","state","qsClickedTimes","handlePasswordSubmitted","e","preventDefault","confirmPassword","correct","newDate","moment","time","format","this","rounding","isUndefined","comIndex","serial","coms","digits","newCycleValues","onClick","configuration","resetSL","isOpen","onRequestClose","overlayClassName","className","contentLabel","logList","downloadLog","ftpTargets","onSubmit","onChange","makeForm","file","overwrite","uploadExcel","checked","for","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","exposeSettings","selfLearningEnabled","endsWith","writeLogs","exposeUpload","manualResetHard","exposeShutdown","shutdown","QS","Component","connect","misc","writeToFile","enabled","fileList","i","length","CONFIG_UNLOCK","toggleMenu","TOGGLE_MENU","CLOSE_MENU","msg","callback","LogModal","changeFilterType","filterType","filterTypes","id","filter","entry","full","uniqueLogEnabled","push","TU","activityCounter","TA","currentFilter","find","loggerState","entries","accessors","legend","visible","columns","Header","accessor","getColumnWidth","style","textAlign","Cell","_","column","filteredEntries","onClose","fontSize","unique","internal","configurationValues","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","alwaysPositive","timeoutReset","timeout","prefix","postfix","autoCommandEnabled","autoCommandMin","autoCommandMax","autoCommandTime","autoCommandText","ComList","openConfigModal","configModalIsOpen","closeConfigModal","toggleShowHistory","showHistory","element","com","key","classNames","compressor","warning","history","slice","timeString","Modal","setAppElement","output","ports","hardwareOutput","0","1","2","3","4","5","6","7","8","9","formula","execute","holdOnExecute","seconds","manualConfirmation","warningPeriod","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","forceOutput","hardwareInput","normalState","open","closed","exe","exebl","reset","teach","restart","command","resetSerial","commandCom","com0","com1","commandValue","invert","follow","manualTimeout","InputList","inputs","reduce","acc","cur","blocking","forceInput","TableCell","content","cell","classnames","manualFunction","menuOptions","option","newMenuIndex","findIndex","daysToDate","getDate","getMonth","getFullYear","toFixed","notFound","openModal","backgroundColor","color","table","cells","showInLog","normal","manual","menu","includes","resetOnExe","colorConditions","yellow","Table","configCellIndex","cellConfig","String","fromCharCode","Math","floor","tableManual","openLog","tableNotFound","ReactTableWrapper","Headers","ref","forwardRef","individualColors","textColors","sum","SelfLearningModal","toggleIndividualTable","showIndividualTable","UNTable","React","createRef","SLTable","comConfigs","extraColumnConfigs","extraColumns","keyName","valueName","valueRounding","firstTopDigits","secondTopDigits","individualEntries","generalEntries","individualColumnHeaders","headerRoundings","formattedHeaders","header","row","extra","dateFormat","max","generalVisible","generalTableColumns","deleteGeneralSL","original","activity","activityHistory","individualTableColumns","showTolerance","incrementIndex","increments","numUpdates","numUpdatesHistory","exitOptions","deleteIndividualSL","tableStyle","marginRight","cols","tableRef","sheetName","splice","col","current","getResolvedState","sortedData","Object","values","newRow","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","Date","writeFile","resetIndividualSL","getSLModalContent","individual","tableExtraColumnTitle","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","off","com0ind","com1ind","contents","LogID","numberPercentage","tolerance","startTolerance","important","individualToleranceAbs","individualTolerance","individualToleranceShift","individualCorrectionIncrement","individualCorrectionLimit","individualCycleLimit","individualCycleLimitDateColumn","Array","keys","charCodeAt","individualAverageNumber","excelIndividualColumn","excelDateColumn","excelExitColumn","firstTopFormula","secondTopFormula","structure","topFormula","text","number","defaults","calibration","round","matchedTolerance","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","resetTrigger","on","trigger","useFile","fileExtension","xls","xlsx","waitForOther","searchColumn","csvSeparator","interval","automatic","configList","deleteConfig","downloadConfig","uploadConfig","version","prompt","ip","currentVersion","versionName","match","split","Main","reloadInterval","setInterval","getLog","clearInterval","loadStatic","a","async","logo","getLogo","logModalFilterType","logEntries","logTableColumns","MBDC","showInputs","showTable","showOutputs","showSelfLearning","some","enabledModules","RECEIVE_STATIC","LOGGER_STATE","App","require","set","initialState","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","SERIAL_CLEAR","SET_WARNING","formulaResults","RECEIVE_IP","RECEIVE_TIME","getTime","combineReducers","action","fullState","newInputs","from","newOutputs","newHistory","entryTime","newComs","newCells","tableColor","notfound","clearSerial","setWarning","socket","io","Boolean","hostname","middleware","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducer","messageTypes","init","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","object","parts","replace","newAddress","newValue","isArray","conditions","oldName","defaultStruct","concat","keyOptions","undefined","num","pow","rows","cellLength","days"],"mappings":"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","file":"static/js/main.7df850a5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const downloadExcel = () => {\r\n  window.location.href = \"/downloadExcel\";\r\n};\r\n\r\nexport const uploadExcel = (file, overwrite) => {\r\n  const data = new FormData();\r\n  data.append(\"excelFile\", file);\r\n  axios\r\n    .post(overwrite ? \"/importExcel\" : \"/updateExcel\", data)\r\n    .then(() => window.alert(\"Successfully uploaded Excel file.\"))\r\n    .catch(() => window.alert(\"Error uploading Excel file.\"));\r\n};\r\n\r\nexport const uploadExcelTemplate = () => {\r\n  const uploadFunction = (event) => {\r\n    const data = new FormData();\r\n    data.append(\"templateFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importTemplate\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel template.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel template.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls,.xlsx\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import axios from \"axios\";\r\nimport { RECEIVE_LOG_LIST, LOGGER_STATE } from \"./types\";\r\n\r\nexport const downloadLog = name => {\r\n  window.location.href = \"/downloadLog?file=\" + name;\r\n};\r\n\r\nexport const downloadAllLogs = () => (dispatch, getState) => {\r\n  window.location.href = \"/downloadLog?multiFile=\" + getState().misc.logList;\r\n};\r\n\r\nexport const getLogList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getLogList\", null, list => {\r\n    dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const uploadLog = (name, index) => (dispatch, getState, { emit }) => {\r\n  emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n};\r\n\r\nexport const deleteAllLogs = () => (dispatch, getState, { emit }) => {\r\n  const fileList = getState().misc.logList;\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    emit(\"deleteLog\", fileList[i]);\r\n  }\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const deleteLog = name => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteLog\", name);\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const getLog = () => dispatch => {\r\n  axios.get(\"/comlog\").then(result => {\r\n    dispatch({ type: LOGGER_STATE, payload: result.data });\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { TOGGLE_MENU, OPEN_MENU, CLOSE_MENU, CONFIG_UNLOCK } from \"./types\";\r\n\r\nimport { loadConfig } from \"./configActions\";\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n  dispatch({ type: TOGGLE_MENU });\r\n};\r\n\r\nexport const openMenu = () => (dispatch) => {\r\n  dispatch({ type: OPEN_MENU });\r\n};\r\n\r\nexport const closeMenu = () => (dispatch) => {\r\n  dispatch({ type: CLOSE_MENU });\r\n};\r\n\r\nexport const unlockConfig = () => (dispatch) => {\r\n  dispatch({ type: CONFIG_UNLOCK });\r\n};\r\n\r\nexport const reboot = () => (dispatch) => {\r\n  axios.get(\"/restart\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 5000);\r\n};\r\n\r\nexport const hardReboot = () => (dispatch) => {\r\n  axios.get(\"/hard_reboot\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 10000);\r\n};\r\n\r\nexport const shutdown = () => {\r\n  axios.get(\"/shutdown\");\r\n};\r\n\r\nexport const getLogo = async () => {\r\n  let logo = false;\r\n  try {\r\n    await axios.get(\"/logo\");\r\n    logo = \"/logo\";\r\n  } finally {\r\n    return logo;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { RECEIVE_CONFIG_LIST, CONFIG_CHANGE, RECEIVE_CONFIG, RECEIVE_STATIC, CONFIG_LOCK } from \"./types\";\r\nimport { reboot } from \"./menuActions\";\r\n\r\nexport const downloadConfig = name => {\r\n  window.location.href = \"/downloadConfig?file=\" + name;\r\n};\r\n\r\nexport const changeConfig = (address, value, options) => dispatch => {\r\n  if (options && options.numeric) {\r\n    value = Number(value);\r\n  }\r\n  dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n};\r\n\r\nexport const getConfigList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getConfigList\", null, list => {\r\n    dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const deleteConfig = name => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n    emit(\"deleteConfig\", name);\r\n    dispatch(getConfigList());\r\n  }\r\n};\r\n\r\nexport const loadConfig = name => (dispatch, getState, { emit }) => {\r\n  if (name) {\r\n    emit(\"loadConfig\", name, config => {\r\n      dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n    });\r\n  } else {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n};\r\n\r\nexport const loadStatic = () => dispatch => {\r\n  axios.get(\"/static\").then(result => {\r\n    dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n    document.title = result.data.name;\r\n  });\r\n};\r\n\r\nexport const configExists = name => (dispatch, getState, { emit }) => {\r\n  return new Promise(resolve => {\r\n    emit(\"configExists\", name, ({ result }) => resolve(result));\r\n  });\r\n};\r\n\r\nexport const saveConfig = name => (dispatch, getState, { emit }) => {\r\n  const newConfig = JSON.parse(JSON.stringify(getState().config));\r\n  delete newConfig.loaded;\r\n  delete newConfig.locked;\r\n  delete newConfig.hasChanged;\r\n\r\n  if (name) {\r\n    dispatch(configExists(name)).then(result => {\r\n      if (!result || window.confirm(\"File already exists, do you want to overwrite?\")) {\r\n        emit(\"saveConfig\", { name: name, config: newConfig });\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (getState().config.hasChanged) {\r\n    emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n      if (\r\n        (consistent || window.confirm(\"This will reset the log, continue?\")) &&\r\n        window.confirm(\"Are you sure you want to save these changes?\")\r\n      ) {\r\n        emit(\"settings\", newConfig);\r\n        dispatch({ type: CONFIG_LOCK });\r\n        dispatch(reboot());\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    dispatch({ type: CONFIG_LOCK });\r\n  }\r\n};\r\n\r\nexport const uploadConfig = currentVersion => dispatch => {\r\n  const uploadFunction = event => {\r\n    const file = event.target.files[0];\r\n\r\n    const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n    if (!versionName) {\r\n      alert(\"Config does not have a valid name\");\r\n      return;\r\n    }\r\n    const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n    const currentMayorVersion = currentVersion.split(\".\")[0];\r\n\r\n    if (mayorVersion !== currentMayorVersion) {\r\n      alert(\"Version of new config does not match the current one\");\r\n      return;\r\n    }\r\n\r\n    dispatch(configExists(file.name)).then(result => {\r\n      if (result && !window.confirm(\"Config already exists. Overwrite?\")) return;\r\n\r\n      const data = new FormData();\r\n      data.append(\"configFile\", file);\r\n      axios\r\n        .post(\"/uploadConfig\", data)\r\n        .then(() => {\r\n          window.alert(\"Successfully uploaded new config.\");\r\n          dispatch(getConfigList());\r\n        })\r\n        .catch(() => window.alert(\"Error uploading new config.\"));\r\n    });\r\n  };\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".json\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const confirmPassword = (password, callback) => (dispatch, getState, { emit }) => {\r\n  emit(\"confirmPassword\", password, callback);\r\n};\r\n","export const forceInput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.input.ports[index],\r\n    ...state.internal.inputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceInput\", index);\r\n};\r\n\r\nexport const forceOutput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.output.ports[index],\r\n    ...state.internal.outputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceOutput\", index);\r\n};\r\n\r\nexport const tableManual = (index, value) => (dispatch, getState, { emit }) => {\r\n  emit(\"manual\", { index, value });\r\n};\r\n\r\nexport const setDateTime = date => (dispatch, getState, { emit }) => {\r\n  emit(\"setDateTime\", date);\r\n};\r\n","export const deleteGeneralSL =\r\n  (key) =>\r\n  (dispatch, getState, { emit }) => {\r\n    emit(\"deleteGeneralSL\", { key });\r\n  };\r\n\r\nexport const deleteIndividualSL =\r\n  (key, message) =>\r\n  (dispatch, getState, { emit }) => {\r\n    emit(\"deleteIndividualSL\", { key, message }, (totalNumber) =>\r\n      window.alert(`Total SL number has been lowered from ${totalNumber + 1} to ${totalNumber}`)\r\n    );\r\n  };\r\n\r\nexport const resetIndividualSL =\r\n  () =>\r\n  (dispatch, getState, { emit }) => {\r\n    emit(\"resetIndividualSL\");\r\n  };\r\n\r\nexport const resetSLData =\r\n  () =>\r\n  (dispatch, getState, { emit }) => {\r\n    if (window.confirm(\"This will clear the Excel file. Do you want to download it first?\")) {\r\n      return;\r\n    }\r\n\r\n    const config = getState().config;\r\n    let { logID } = config.logger;\r\n    let { startCalibration, totalNumber } = config.selfLearning;\r\n\r\n    if (window.confirm(\"Are you sure you want to clear all SL data?\")) {\r\n      emit(\"deleteSLData\", { logID, startCalibration, totalNumber }, (success) => {\r\n        if (success) {\r\n          const hardReboot = getState().static.newCycleResetHard;\r\n          const message = hardReboot\r\n            ? \"Successfully started new cycle, device will now reboot\"\r\n            : \"Successfully started new cycle\";\r\n\r\n          window.alert(message);\r\n\r\n          if (hardReboot) emit(\"hardReboot\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\nimport moment from \"moment\";\r\n\r\nimport { downloadExcel, uploadExcel } from \"../actions/excelActions\";\r\nimport { downloadAllLogs, downloadLog, deleteLog, deleteAllLogs, getLogList, uploadLog } from \"../actions/logActions\";\r\nimport { saveConfig, changeConfig, confirmPassword } from \"../actions/configActions\";\r\nimport { unlockConfig, toggleMenu, openMenu, closeMenu, reboot, hardReboot, shutdown } from \"../actions/menuActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { isUndefined } from \"util\";\r\nimport \"../styles/sidebar.scss\";\r\n\r\nconst ftpTargetsValues = {\r\n  logger: {\r\n    resetTime: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: (config) => config.logger.resetMode === \"time\",\r\n    },\r\n    resetInterval: {\r\n      name: \"Interval (min)\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: (config) => config.logger.resetMode === \"interval\",\r\n    },\r\n  },\r\n  FTP: {\r\n    targets: [1, 2].map((index) => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\",\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\",\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\",\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\",\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\",\r\n      },\r\n    })),\r\n  },\r\n};\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      dateTimeModalIsOpen: false,\r\n      newCycleModalIsOpen: false,\r\n      passwordPromptIsOpen: false,\r\n      password: \"\",\r\n      importExcelModalIsOpen: false,\r\n      ftpTargetsModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\"),\r\n      qsClickedTimes: 0,\r\n    };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.unlockConfig();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  openDateTimeModal = () => {\r\n    this.setState({ dateTimeModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeDateTimeModal = () => {\r\n    this.setState({ dateTimeModalIsOpen: false });\r\n  };\r\n\r\n  openNewCycleModal = () => {\r\n    this.props.unlockConfig();\r\n    this.setState({ newCycleModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeNewCycleModal = () => {\r\n    this.props.saveConfig();\r\n    this.setState({ newCycleModalIsOpen: false });\r\n  };\r\n\r\n  openPasswordPrompt = () => {\r\n    this.setState({ passwordPromptIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closePasswordPrompt = () => {\r\n    this.setState({ passwordPromptIsOpen: false });\r\n  };\r\n\r\n  openImportExcelModal = () => {\r\n    this.setState({ importExcelModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeImportExcelModal = () => {\r\n    this.setState({ importExcelModalIsOpen: false });\r\n  };\r\n\r\n  openFtpTargetsModal = () => {\r\n    this.props.unlockConfig();\r\n    this.setState({ ftpTargetsModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeFtpTargetsModal = () => {\r\n    this.props.saveConfig();\r\n    this.setState({ ftpTargetsModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = (log) => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  handleQSClicked = () => {\r\n    if (this.state.qsClickedTimes < 5) {\r\n      this.setState({ qsClickedTimes: this.state.qsClickedTimes + 1 });\r\n      return;\r\n    }\r\n\r\n    if (this.props.configLocked) {\r\n      this.openPasswordPrompt();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  handlePasswordSubmitted = (e) => {\r\n    e.preventDefault();\r\n    this.props.confirmPassword(this.state.password, (correct) => {\r\n      if (correct) {\r\n        this.props.unlockConfig();\r\n      } else {\r\n        window.alert(\"Password incorrect\");\r\n      }\r\n    });\r\n    this.closePasswordPrompt();\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.closeMenu;\r\n\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const newCycleValues = {\r\n      selfLearning: {\r\n        downloadExcel: {\r\n          name: \"Download Excel file\",\r\n          type: \"button\",\r\n          onClick: () => {\r\n            this.props.downloadExcel();\r\n          },\r\n        },\r\n        logID: {\r\n          type: \"external\",\r\n          location: \"logger.logID\",\r\n          configuration: {\r\n            name: \"LogID\",\r\n            type: \"text\",\r\n          },\r\n        },\r\n        startCalibration: {\r\n          name: \"Calibration\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          rounding,\r\n        },\r\n        totalNumber: {\r\n          name: \"Total number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n        },\r\n        resetSL: {\r\n          name: \"Reset Self Learning Data\",\r\n          type: \"button\",\r\n          onClick: () => {\r\n            this.props.resetSLData();\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map((log) => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.dateTimeModalIsOpen}\r\n          onRequestClose={this.closeDateTimeModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent dateTime\"\r\n          contentLabel=\"Date Time Modal\"\r\n        >\r\n          <h3>Date and Time</h3>\r\n          <br />\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              this.props.setDateTime(this.state.newDate);\r\n            }}\r\n          >\r\n            Change internal time:\r\n            <input type=\"submit\" value=\"Save\" />\r\n            <input\r\n              type=\"datetime-local\"\r\n              name=\"newDate\"\r\n              value={this.state.newDate}\r\n              onChange={(event) => this.setState({ newDate: event.target.value })}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.newCycleModalIsOpen}\r\n          onRequestClose={this.closeNewCycleModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"New SL Cycle Modal\"\r\n        >\r\n          <form>\r\n            <h2>Start new cycle</h2>\r\n            {this.state.newCycleModalIsOpen && makeForm(newCycleValues, this.props.config, this.props.changeConfig)}\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.passwordPromptIsOpen}\r\n          onRequestClose={this.closePasswordPrompt}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Config Password Prompt\"\r\n        >\r\n          <form onSubmit={this.handlePasswordSubmitted}>\r\n            <h2>Enter password</h2>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n            <br />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.importExcelModalIsOpen}\r\n          onRequestClose={this.closeImportExcelModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Import Excel Modal\"\r\n        >\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const file = e.target[0].files[0];\r\n              const overwrite = e.target[1].checked;\r\n              uploadExcel(file, overwrite);\r\n              this.closeImportExcelModal();\r\n            }}\r\n          >\r\n            <h2>Import Excel</h2>\r\n            <label for=\"overwrite\">File:</label>\r\n            <input type=\"file\" name=\"excelFile\" accept=\".xls,.xlsx\" />\r\n            <br />\r\n            <input type=\"checkbox\" name=\"overwrite\" />\r\n            <label for=\"overwrite\">Overwrite:</label>\r\n            <br />\r\n            <input type=\"submit\" value=\"Upload\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.ftpTargetsModalIsOpen}\r\n          onRequestClose={this.closeFtpTargetsModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"FTP Targets Modal\"\r\n        >\r\n          <form>\r\n            <h2>FTP Targets</h2>\r\n            {this.state.ftpTargetsModalIsOpen && makeForm(ftpTargetsValues, this.props.config, this.props.changeConfig)}\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={(newState) => !newState.isOpen && closeMenu()}\r\n          width={450}\r\n        >\r\n          {this.props.exposeSettings && (\r\n            <span className=\"menu-item menu-item--clickable\">\r\n              <span\r\n                onClick={() => {\r\n                  closeMenu();\r\n                  this.toggleConfigLock();\r\n                }}\r\n              >\r\n                Unlock settings\r\n              </span>{\" \"}\r\n              <Toggle\r\n                checked={!this.props.configLocked}\r\n                onChange={() => {\r\n                  closeMenu();\r\n                  this.toggleConfigLock();\r\n                }}\r\n              />\r\n            </span>\r\n          )}\r\n          {this.props.selfLearningEnabled.endsWith(\"ind\") && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openNewCycleModal}>\r\n              Start new cycle\r\n            </span>\r\n          )}\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.downloadExcel();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Download Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openImportExcelModal}>\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openFtpTargetsModal}>\r\n              FTP Targets\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                if (this.props.manualResetHard) this.props.hardReboot();\r\n                else this.props.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\")) this.props.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item menu-item--clickable\" onClick={this.openDateTimeModal}>\r\n            Set date and time\r\n          </span>\r\n          <span className=\"menu-item\" onClick={this.handleQSClicked}>\r\n            QS code: {this.props.QS}\r\n          </span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: [],\r\n      selfLearningEnabled: \"\",\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    exposeSettings: state.static.exposeSettings,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets,\r\n    selfLearningEnabled: state.config.selfLearning.enabled,\r\n    time: state.misc.time,\r\n    manualResetHard: state.static.manualResetHard,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  downloadExcel,\r\n  downloadAllLogs,\r\n  deleteLog,\r\n  deleteAllLogs,\r\n  downloadLog,\r\n  getLogList,\r\n  unlockConfig,\r\n  toggleMenu,\r\n  openMenu,\r\n  closeMenu,\r\n  saveConfig,\r\n  reboot,\r\n  hardReboot,\r\n  shutdown,\r\n  uploadLog,\r\n  setDateTime,\r\n  changeConfig,\r\n  resetSLData,\r\n  confirmPassword,\r\n})(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport { getColumnWidth } from \"../../helpers\";\r\n\r\nclass LogModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: \"full\",\r\n    };\r\n  }\r\n\r\n  changeFilterType = (event) => {\r\n    this.setState({ filterType: event.target.value });\r\n  };\r\n\r\n  filterTypes = [\r\n    {\r\n      id: \"full\",\r\n      name: \"Show only complete\",\r\n      title: \"Complete Log\",\r\n      filter: (entry) => entry.full,\r\n    },\r\n  ];\r\n\r\n  componentWillMount() {\r\n    if (this.props.uniqueLogEnabled) {\r\n      this.filterTypes.push({\r\n        id: \"unique\",\r\n        name: \"Show only unique\",\r\n        title: \"Unique Log\",\r\n        filter: (entry) => entry.TU,\r\n      });\r\n    }\r\n\r\n    if (this.props.activityCounter) {\r\n      this.filterTypes.push({\r\n        id: \"activity\",\r\n        name: \"Show only activity\",\r\n        title: \"Activity Log\",\r\n        filter: (entry) => entry.TA,\r\n      });\r\n    }\r\n    this.filterTypes.push({\r\n      id: \"none\",\r\n      name: \"Show all\",\r\n      title: \"Normal Log\",\r\n      filter: (entry) => true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const currentFilter = this.filterTypes.find((filter) => filter.id === this.state.filterType);\r\n\r\n    const { entries, accessors, legend, digits, visible } = this.props.loggerState;\r\n    const columns = legend\r\n      .map((name, index) => ({\r\n        Header: () => <b>{name}</b>,\r\n        accessor: accessors[index],\r\n        width: getColumnWidth(entries, accessors[index]),\r\n        style: { textAlign: \"center\" },\r\n        Cell: (props) => {\r\n          return props.value;\r\n        },\r\n        name,\r\n      }))\r\n      .filter((_, index) => visible[index])\r\n      .filter((column) => this.props.uniqueLogEnabled || column.name !== \"TU\")\r\n      .filter((column) => this.props.activityCounter || column.name !== \"TA\");\r\n\r\n    const filteredEntries = entries.filter(currentFilter.filter);\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"Log Modal\"\r\n      >\r\n        {this.filterTypes.length > 1 && (\r\n          <span>\r\n            <select value={this.state.filterType} onChange={this.changeFilterType}>\r\n              {this.filterTypes.map((filter) => (\r\n                <option value={filter.id}>{filter.name}</option>\r\n              ))}\r\n            </select>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"main--logModal\">\r\n          <div>\r\n            <div className=\"main--logModal--title\">\r\n              <b>{currentFilter.title}</b>\r\n            </div>\r\n            <ReactTable style={{ fontSize: 14 }} data={filteredEntries} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  const loggerState = state.internal.logger;\r\n\r\n  return {\r\n    uniqueLogEnabled,\r\n    activityCounter,\r\n    loggerState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LogModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandEnabled: {\r\n          name: \"AutoCommand\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandMin: {\r\n          name: \"Min Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandMax: {\r\n          name: \"Max Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandTime: {\r\n          name: \"Time (sec)\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandText: {\r\n          name: \"Command\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) => (i === index ? !element : element))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.comIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\",\r\n                \"comElement--content--warning\": this.props.warning\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history.slice(0, this.props.config.serial.coms[com.index].entries).map(element => (\r\n                    <>\r\n                      <div>{element.timeString}</div>\r\n                      <div>{element.entry}</div>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  const warning = state.internal.warning;\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    warning\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { changeConfig })(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceOutput } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\",\r\n        },\r\n        hardwareOutput: {\r\n          name: \"Hardware output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            0: \"HW Output 1\",\r\n            1: \"HW Output 2\",\r\n            2: \"HW Output 3\",\r\n            3: \"HW Output 4\",\r\n            4: \"HW Output 5\",\r\n            5: \"HW Output 6\",\r\n            6: \"HW Output 7\",\r\n            7: \"HW Output 8\",\r\n            8: \"HW Output 9\",\r\n            9: \"HW Output 10\",\r\n          },\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\",\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\",\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\",\r\n        },\r\n        holdOnExecute: {\r\n          name: \"Hold on execute\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.output.ports[index].execute,\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          step: 1,\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\",\r\n        },\r\n        warning: {\r\n          name: \"Use as warning\",\r\n          type: \"checkbox\",\r\n        },\r\n        warningPeriod: {\r\n          name: \"Warning period\",\r\n          type: \"number\",\r\n          min: 0,\r\n          condition: (config, index) => config.output.ports[index].warning,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = (index) => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Output</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map((port) => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name,\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map((port) => port.visible);\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { forceOutput, changeConfig })(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceInput } from \"../actions/internalActions\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\",\r\n        },\r\n        hardwareInput: {\r\n          name: \"Hardware input\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            0: \"HW Input 1\",\r\n            1: \"HW Input 2\",\r\n            2: \"HW Input 3\",\r\n            3: \"HW Input 4\",\r\n            4: \"HW Input 5\",\r\n          },\r\n        },\r\n        normalState: {\r\n          name: \"Normally open/closed\",\r\n          type: \"select\",\r\n          options: {\r\n            open: \"Normally open\",\r\n            closed: \"Normally closed\",\r\n          },\r\n          condition: (config, index) => config.input.ports[index].hardwareInput >= 0,\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\",\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            reset: \"Reset Table\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\",\r\n            resetSerial: \"COM reset\",\r\n          },\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\",\r\n          },\r\n          condition: (config, index) => {\r\n            const formula = config.input.ports[index].formula;\r\n            return formula === \"command\" || formula === \"resetSerial\";\r\n          },\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\",\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\",\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            0: \"Follow ouput 1\",\r\n            1: \"Follow ouput 2\",\r\n            2: \"Follow ouput 3\",\r\n            3: \"Follow ouput 4\",\r\n            4: \"Follow ouput 5\",\r\n            5: \"Follow ouput 6\",\r\n            6: \"Follow ouput 7\",\r\n            7: \"Follow ouput 8\",\r\n            8: \"Follow ouput 9\",\r\n            9: \"Follow ouput 10\",\r\n          },\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = (index) => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Input</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map((port) => {\r\n              let state = port.state ? \"On\" : \"Off\";\r\n              if (port.isForced) state = \"Forced\" + state;\r\n              if (\r\n                state === \"Off\" &&\r\n                port.formula === \"exe\" &&\r\n                this.props.inputs.reduce((acc, cur) => acc || cur.blocking, false)\r\n              )\r\n                state = \"Blocked\";\r\n\r\n              let indicator = \"buttonList--list--indicator--input\" + state;\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name,\r\n    formula: state.config.input.ports[index].formula,\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map((port) => port.visible);\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { forceInput, changeConfig })(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={event => {\r\n            const value = event.target.value;\r\n            const message = props.cell.numeric ? Number(value) : value;\r\n            props.manualFunction(index, message);\r\n          }}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) + 1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length) newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      if (typeof content == \"number\") content = content.toFixed(cell.digits);\r\n\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\" style={{ backgroundColor: !props.notFound && cell.color }}>\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { tableManual } from \"../actions/internalActions\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\",\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\",\r\n        },\r\n        showInLog: {\r\n          name: \"Show in log\",\r\n          type: \"checkbox\",\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\",\r\n          },\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.table.cells[index].type === \"reader\",\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.table.cells[index].type !== \"date\",\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) => [\"normal\", \"date\"].includes(config.table.cells[index].type),\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) => config.table.cells[index].type === \"menu\",\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => [\"normal\", \"reader\"].includes(config.table.cells[index].type),\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\",\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = (index) => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index],\r\n      }))\r\n      .filter((cell) => !this.props.configLocked || cell.visible);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell {String.fromCharCode(65 + Math.floor(this.state.configCellIndex / 5))}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configCellIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map((cell) => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.tableManual}\r\n              openModal={this.props.configLocked ? this.props.openLog : () => this.openConfigModal(cell.index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name,\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { tableManual, changeConfig })(Table);\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport \"../../styles/reactTable.scss\";\r\n\r\nlet id = 0;\r\n\r\nexport default function ReactTableWrapper(props) {\r\n  const columns = props.columns.map(column => {\r\n    id++;\r\n    return {\r\n      ...column,\r\n      id,\r\n      style: { ...column.style, ...props.style },\r\n      Header: (\r\n        <div className=\"reactTable--header\">\r\n          {column.Headers.map(element => (\r\n            <div className=\"reactTable--header--child\">{element || \" \"}</div>\r\n          ))}\r\n        </div>\r\n      )\r\n    };\r\n  });\r\n\r\n  return <ReactTable ref={props.forwardRef} data={props.data} columns={columns} />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"../util/ReactTableWrapper\";\r\nimport Toggle from \"react-toggle\";\r\nimport dateFormat from \"dateformat\";\r\nimport XLSX from \"xlsx\";\r\n\r\nimport { daysToDate } from \"../../helpers\";\r\nimport { deleteGeneralSL, deleteIndividualSL, resetIndividualSL } from \"../../actions/selfLearningActions\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nfunction sum(list) {\r\n  return list.filter(entry => entry).reduce((acc, cur) => acc + cur, 0);\r\n}\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.UNTable = React.createRef();\r\n    this.SLTable = React.createRef();\r\n\r\n    this.state = {\r\n      showIndividualTable: true\r\n    };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({\r\n      showIndividualTable: !this.state.showIndividualTable\r\n    });\r\n  };\r\n\r\n  getSLModalContent() {\r\n    const comConfigs = this.props.config.serial.coms;\r\n    const comIndex = this.props.comIndex;\r\n    const extraColumnConfigs = this.props.config.selfLearning.extraColumns;\r\n\r\n    const keyName = comConfigs[1 - comIndex].name;\r\n    const valueName = comConfigs[comIndex].name;\r\n    const valueRounding = comConfigs[comIndex].digits;\r\n\r\n    const firstTopDigits = this.props.config.selfLearning.firstTopDigits;\r\n    const secondTopDigits = this.props.config.selfLearning.secondTopDigits;\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n    const individualColumnHeaders = this.props.individualColumnHeaders;\r\n    const headerRoundings = [firstTopDigits, secondTopDigits, ...extraColumnConfigs.map(column => column.digits)];\r\n    const formattedHeaders = individualColumnHeaders.map((header, index) =>\r\n      header ? Number(header).toFixed(headerRoundings[index]) : \"\"\r\n    );\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({\r\n        key,\r\n        ...this.props.generalEntries[key]\r\n      });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({\r\n        key,\r\n        ...this.props.individualEntries[key]\r\n      });\r\n    }\r\n\r\n    const extraColumns = this.props.config.selfLearning.extraColumns.map((column, index) => {\r\n      return {\r\n        Headers: [formattedHeaders[index + 2], column.title],\r\n        accessor: row => row.extra[index],\r\n        Cell: props => {\r\n          switch (column.type) {\r\n            case \"text\":\r\n              return props.value ? String(props.value).slice(-column.digits) : \"\";\r\n            case \"number\":\r\n              return Number(props.value).toFixed(column.digits);\r\n            case \"date\":\r\n              return Number(props.value) > 0\r\n                ? dateFormat(daysToDate(Number(props.value)), \"dd-mm-yyyy\")\r\n                : \"Invalid date\";\r\n            default:\r\n              return props.value;\r\n          }\r\n        },\r\n        width: Math.max(80, 11 * column.title.length),\r\n        generalVisible: column.generalVisible\r\n      };\r\n    });\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Headers: [\"\", valueName],\r\n        accessor: row => row.entries[0],\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-1\"],\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-2\"],\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-3\"],\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-4\"],\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns.filter(column => column.generalVisible),\r\n      {\r\n        Headers: [\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete all general entries?`)) {\r\n                this.props.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>\r\n          </button>,\r\n          \"\"\r\n        ],\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to delete general entries for ${props.original.key}?`)) {\r\n                  this.props.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    if (this.props.activityCounter) {\r\n      generalTableColumns.push(\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Headers: [formattedHeaders[0], valueName],\r\n        accessor: \"calibration\",\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(valueRounding)\r\n      },\r\n      {\r\n        Headers: [formattedHeaders[1], keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns\r\n    ];\r\n\r\n    if (this.props.showTolerance) {\r\n      individualTableColumns.push({\r\n        Headers: [\"\", \"Tol\"],\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          const incrementIndex = Math.floor(Math.min(4, props.original.increments));\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[incrementIndex],\r\n                color: textColors[incrementIndex]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        width: 50\r\n      });\r\n    }\r\n\r\n    individualTableColumns.push(\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdates)), \"Num\"],\r\n        accessor: \"numUpdates\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[0])), \"-1\"],\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[1])), \"-2\"],\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[2])), \"-3\"],\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      }\r\n    );\r\n\r\n    if (this.props.activityCounter) {\r\n      individualTableColumns.push(\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const exitOptions = this.props.config.selfLearning.exitOptions;\r\n\r\n    individualTableColumns.push({\r\n      Headers: [\r\n        <button\r\n          onClick={() => {\r\n            if (window.confirm(`Are you sure you want to delete all individual entries?`)) {\r\n              this.props.deleteIndividualSL();\r\n            }\r\n          }}\r\n        >\r\n          <b> Delete </b>{\" \"}\r\n        </button>,\r\n        \"\"\r\n      ],\r\n      Cell: props =>\r\n        exitOptions.length ? (\r\n          <select\r\n            value=\"\"\r\n            onChange={event => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key, event.target.value);\r\n              }\r\n            }}\r\n          >\r\n            <option value=\"\">Delete</option>\r\n            {exitOptions.map(({ key, value }) => (\r\n              <option value={key}>{value}</option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key);\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n      width: 70\r\n    });\r\n\r\n    const tableStyle = { textAlign: \"center\" };\r\n\r\n    const downloadTable = () => {\r\n      const table = [];\r\n      let cols, tableRef, sheetName;\r\n\r\n      if (this.state.showIndividualTable) {\r\n        cols = individualTableColumns.slice(0, -1);\r\n        tableRef = this.UNTable;\r\n        sheetName = \"UN List\";\r\n      } else {\r\n        cols = generalTableColumns;\r\n        cols.splice(8, 1);\r\n        tableRef = this.SLTable;\r\n        sheetName = \"SL List\";\r\n      }\r\n\r\n      table[0] = cols.map(col => col.Headers[0]);\r\n      table[1] = cols.map(col => col.Headers[1]);\r\n\r\n      for (let row of tableRef.current.getResolvedState().sortedData) {\r\n        row = Object.values(row);\r\n        const newRow = [];\r\n        for (let i = 0; i < cols.length; i++) newRow.push(row[i]);\r\n        table.push(newRow);\r\n      }\r\n\r\n      const ws = XLSX.utils.aoa_to_sheet(table);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n      const date = dateFormat(new Date(), \"yyyy-mm-dd_HH-MM-ss\");\r\n\r\n      XLSX.writeFile(wb, `${this.props.name}_${this.props.config.logger.logID}_${date}.xlsx`);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle checked={this.state.showIndividualTable} onChange={this.toggleIndividualTable} />\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}\r\n        </span>\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button style={{ marginRight: \"20px\" }} onClick={downloadTable}>\r\n            <b> Download </b>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reset the data of the individual selfLearning?\"))\r\n                this.props.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b> Reset </b>\r\n          </button>\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN - list </div>\r\n            <ReactTable\r\n              forwardRef={this.UNTable}\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n              style={tableStyle}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL - list </div>\r\n            <ReactTable\r\n              forwardRef={this.SLTable}\r\n              style={tableStyle}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const showTolerance = state.static.showTolerance;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    showTolerance,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter,\r\n    name\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteGeneralSL, deleteIndividualSL, resetIndividualSL })(SelfLearningModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\nimport { downloadExcel, uploadExcelTemplate } from \"../actions/excelActions\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        normal: {\r\n          type: \"conditional\",\r\n          condition: config => !config.selfLearning.enabled.endsWith(\"ind\") && config.selfLearning.enabled !== \"off\",\r\n          contents: {\r\n            LogID: {\r\n              name: \"LogID\",\r\n              type: \"external\",\r\n              location: \"logger.logID\",\r\n              configuration: {\r\n                name: \"LogID\",\r\n                type: \"text\"\r\n              }\r\n            },\r\n            startCalibration: {\r\n              name: \"Calibration\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              rounding\r\n            },\r\n            totalNumber: {\r\n              name: \"Total number\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            startTolerance: {\r\n              name: \"Extra tolerance during learning %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            }\r\n          }\r\n        },\r\n        individual: {\r\n          type: \"conditional\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\"),\r\n          contents: {\r\n            important: {\r\n              type: \"emphasis\",\r\n              contents: {\r\n                downloadExcel: {\r\n                  name: \"Download Excel file\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.downloadExcel();\r\n                  }\r\n                },\r\n                resetSL: {\r\n                  name: \"Reset Self Learning Data\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.resetSLData();\r\n                  }\r\n                },\r\n                logID: {\r\n                  type: \"external\",\r\n                  location: \"logger.logID\",\r\n                  configuration: {\r\n                    name: \"LogID\",\r\n                    type: \"text\"\r\n                  }\r\n                },\r\n                startCalibration: {\r\n                  name: \"Calibration\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  rounding\r\n                },\r\n                totalNumber: {\r\n                  name: \"Total number\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                }\r\n              }\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"SL Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            individualToleranceAbs: {\r\n              name: \"Individual tolerance\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualTolerance: {\r\n              name: \"Individual tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualToleranceShift: {\r\n              name: \"Individual tolerance shift %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionIncrement: {\r\n              name: \"Correction %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionLimit: {\r\n              name: \"Correction limit (1-9, 0 = off)\",\r\n              type: \"number\",\r\n              min: 0,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCycleLimit: {\r\n              name: \"Cycle limit for UN list (days, 0 = off)\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCycleLimitDateColumn:{\r\n              name: \"Date column for cycle limit\",\r\n              type: \"select\",\r\n              numeric: true,\r\n              options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n            },\r\n            individualAverageNumber: {\r\n              name: \"Average calibration number (1-9)\",\r\n              type: \"number\",\r\n              min: 1,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            excelIndividualColumn: {\r\n              type: \"external\",\r\n              location: \"table.individualColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Com Ind\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelDateColumn: {\r\n              type: \"external\",\r\n              location: \"table.dateColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Date\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelExitColumn: {\r\n              type: \"external\",\r\n              location: \"table.exitColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Exit\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            exitOptions: {\r\n              name: \"Exit options\",\r\n              type: \"keyValue\"\r\n            },\r\n            activityCounter: {\r\n              type: \"checkbox\",\r\n              name: \"Activity counter\"\r\n            },\r\n            uploadExcelTemplate: {\r\n              name: \"Import Excel Template\",\r\n              type: \"button\",\r\n              onClick: uploadExcelTemplate\r\n            },\r\n            title: {\r\n              name: \"List column configuration\",\r\n              type: \"title\"\r\n            },\r\n            firstTopFormula: {\r\n              name: \"#1 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            firstTopDigits: {\r\n              name: \"#1 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            secondTopFormula: {\r\n              name: \"#2 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            secondTopDigits: {\r\n              name: \"#2 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            extraColumns: {\r\n              name: \"Additional columns\",\r\n              type: \"structArray\",\r\n              structure: {\r\n                title: {\r\n                  name: \"Title\",\r\n                  type: \"text\"\r\n                },\r\n                topFormula: {\r\n                  name: \"Top formula\",\r\n                  type: \"text\"\r\n                },\r\n                formula: {\r\n                  name: \"Formula\",\r\n                  type: \"text\"\r\n                },\r\n                type: {\r\n                  name: \"Type of content\",\r\n                  type: \"select\",\r\n                  options: {\r\n                    text: \"Non-num\",\r\n                    number: \"Numeric\",\r\n                    date: \"Date\"\r\n                  }\r\n                },\r\n                digits: {\r\n                  name: \"Digits\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                },\r\n                generalVisible: {\r\n                  name: \"Show in SL list\",\r\n                  type: \"checkbox\"\r\n                }\r\n              },\r\n              defaults: {\r\n                title: \"\",\r\n                topFormula: \"\",\r\n                formula: \"\",\r\n                type: \"text\",\r\n                digits: 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\"selfLearning--inProgress\", \"selfLearning--success\", \"selfLearning--warning\"];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(this.props.config.serial.coms[this.props.comIndex || 0].digits) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(Math.round((this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000) / 10 + \"%\");\r\n    }\r\n\r\n    if (this.props.individual && this.props.activityCounter) {\r\n      const activity =\r\n        Object.values(this.props.individualEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0) +\r\n        Object.values(this.props.generalEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0);\r\n\r\n      cells.push(activity);\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal isOpen={this.state.SLModalIsOpen} onClose={this.closeSLModal} />\r\n\r\n        <div\r\n          className={classNames(\"selfLearning\", indicators[this.props.success || 0])}\r\n          onClick={this.props.configLocked ? (this.props.individual ? this.openSLModal : null) : this.openConfigModal}\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const activityCounter = state.config.selfLearning.activityCounter;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { resetSLData, downloadExcel, changeConfig })(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig,\r\n} from \"../actions/configActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      listModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\"),\r\n    };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\",\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" },\r\n        },\r\n      },\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\",\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"],\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          fileExtension: {\r\n            name: \"Exported Excel file extension\",\r\n            type: \"select\",\r\n            options: { xls: \".xls\", xlsx: \".xlsx\" },\r\n          },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            numeric: true,\r\n            options: [...Array(26).keys()].map((i) => String.fromCharCode(\"A\".charCodeAt(0) + i)),\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\",\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\",\r\n          },\r\n          csvSeparator: {\r\n            name: \"CSV separator\",\r\n            type: \"select\",\r\n            options: { \",\": \",\", \";\": \";\" },\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\",\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" },\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\",\r\n            },\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: (config) => config.logger.resetMode === \"time\",\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: (config) => config.logger.resetMode === \"interval\",\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\",\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\",\r\n          },\r\n          uploadExcel: {\r\n            name: \"Include Excel with upload\",\r\n            type: \"checkbox\",\r\n          },\r\n          targets: [1, 2].map((index) => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\",\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\",\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\",\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\",\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\",\r\n            },\r\n          })),\r\n        },\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map((config) => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input type=\"button\" value=\"Delete\" onClick={() => this.props.deleteConfig(config)} />\r\n                  <input type=\"button\" value=\"Load\" onClick={() => this.props.loadConfig(config)} />\r\n                  <input type=\"button\" value=\"Download\" onClick={() => this.props.downloadConfig(config)} />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input type=\"button\" value=\"Upload\" onClick={() => this.props.uploadConfig(this.props.version)} />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration - V{this.props.version}</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\"Please enter the name for the new config file:\", \"config\");\r\n                    if (name) this.props.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              <h3>Date and Time</h3>\r\n              <br />\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault();\r\n                  this.props.setDateTime(this.state.newDate);\r\n                }}\r\n              >\r\n                Change internal time:\r\n                <input type=\"submit\" value=\"Save\" />\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"newDate\"\r\n                  value={this.state.newDate}\r\n                  onChange={(event) => this.setState({ newDate: event.target.value })}\r\n                />\r\n              </form>\r\n\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div className=\"infobar\" onClick={this.props.configLocked ? null : this.openConfigModal}>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {this.props.name}\r\n                {this.props.logID === \"\" ? \"\" : ` - ${this.props.logID}`}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"HH:mm:ss\")}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"DD-MM-YYYY\")}</div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const logID = state.config.logger.logID;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n  const version = state.static.version;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    logID,\r\n    ip,\r\n    time,\r\n    version,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig,\r\n  setDateTime,\r\n})(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { loadConfig, loadStatic } from \"../actions/configActions\";\r\nimport { getLog } from \"../actions/logActions\";\r\nimport { openMenu, getLogo } from \"../actions/menuActions\";\r\n\r\nimport LogModal from \"./modals/LogModal\";\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.loadConfig();\r\n    this.props.loadStatic();\r\n\r\n    getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalFilterType: \"none\",\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.props.getLog, 1000)\r\n    });\r\n    this.props.getLog();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <LogModal isOpen={this.state.logModalIsOpen} onClose={this.closeLogModal} />\r\n          <div className=\"info\">\r\n            <Infobar />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo image={this.state.logo} alt=\"LOGO\" onClick={this.props.openMenu} />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && <SelfLearning />}\r\n            <ComList />\r\n          </div>\r\n\r\n          {this.props.showOutputs && <div className=\"outputs\">{this.props.showOutputs && <OutputList />} </div>}\r\n          {this.props.showInputs && <div className=\"inputs\">{this.props.showInputs && <InputList />}</div>}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable = state.static.exposeUpload && (!configLocked || state.config.table.cells.some(cell => cell.visible));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.input.ports.some(port => port.visible));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.output.ports.some(port => port.visible));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning && (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadConfig, loadStatic, openMenu, getLog }\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  LOGGER_STATE,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR,\r\n  SET_WARNING,\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: [],\r\n  },\r\n  logger: {\r\n    entries: [],\r\n    legend: [],\r\n    accessors: [],\r\n    digits: [],\r\n    visible: [],\r\n  },\r\n  tableNotFound: false,\r\n  warning: false,\r\n};\r\n\r\nexport default function (fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced, blocking } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced, blocking };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\"),\r\n          },\r\n          ...fullState.coms[index].history,\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory,\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case SERIAL_CLEAR: {\r\n      const newComs = fullState.coms.map((com) => ({\r\n        entry: \"\",\r\n        entryTime: new Date(),\r\n        history: com.history,\r\n      }));\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload },\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload,\r\n      };\r\n    }\r\n    case LOGGER_STATE: {\r\n      return {\r\n        ...fullState,\r\n        logger: action.payload,\r\n      };\r\n    }\r\n    case SET_WARNING: {\r\n      return {\r\n        ...fullState,\r\n        warning: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SERIAL_COM_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR,\r\n  SET_WARNING\r\n} from \"./types\";\r\n\r\nexport default {\r\n  input: INPUT_PORT_STATE,\r\n  output: OUTPUT_PORT_STATE,\r\n  table: TABLE_CELL_STATE,\r\n  tableColor: TABLE_CELL_COLOR,\r\n  entry: SERIAL_COM_STATE,\r\n  selfLearning: SELFLEARNING_STATE,\r\n  ip: RECEIVE_IP,\r\n  time: RECEIVE_TIME,\r\n  notfound: TABLE_FOUND_STATE,\r\n  clearSerial: SERIAL_CLEAR,\r\n  setWarning: SET_WARNING\r\n};\r\n","import io from \"socket.io-client\";\r\nimport messageTypes from \"./messageTypes.js\";\r\n\r\nconst socket = io();\r\n\r\nexport const init = store => {\r\n  for (const type in messageTypes) {\r\n    socket.on(type, payload => store.dispatch({ type: messageTypes[type], payload }));\r\n  }\r\n  socket.on(\"error\", payload => window.alert(payload));\r\n};\r\n\r\nexport const emit = (type, payload, callback) => socket.emit(type, payload, callback);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport { init, emit } from \"./actions/socketApi\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst middleware = [thunk.withExtraArgument({ emit })];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\ninit(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"LOGGER_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\",\r\n  \"SET_WARNING\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";","import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, changeConfig, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map((key) =>\r\n                makeForm(value[0][key], config, changeConfig, index, name + \"[\" + index + \"].\" + key)\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(element, config, changeConfig, index, name + \"[\" + index + \"]\");\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter((key) => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map((key) => makeForm(value[key], config, changeConfig, index, name + (name ? \".\" : \"\") + key))}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"emphasis\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return (\r\n          <div className=\"configuration--emphasis\">\r\n            {makeForm(value.contents, config, changeConfig, index, oldName)}\r\n          </div>\r\n        );\r\n      }\r\n      case \"conditional\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return makeForm(value.contents, config, changeConfig, index, oldName);\r\n      }\r\n      case \"external\": {\r\n        return makeForm(value.configuration, config, changeConfig, index, value.location);\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const structure = value.structure;\r\n        const defaultStruct = value.defaults;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"configuration--struct\">\r\n                #{index + 3}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    contents.splice(index, 1);\r\n                    changeConfig(name, contents);\r\n                  }}\r\n                />\r\n                {makeForm(structure, config, changeConfig, index, name + \"[\" + index + \"]\")}\r\n              </div>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={(e) => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map((entry) => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={(e) => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                        numeric: true,\r\n                      });\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"button\": {\r\n        return (\r\n          <>\r\n            <input type=\"button\" value={value.name} className=\"configuration--button\" onClick={value.onClick} />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={(event) => {\r\n                changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric,\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={value.rounding !== undefined ? round(get(config, name), value.rounding) : get(config, name)}\r\n              onChange={(event) => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  changeConfig(name, event.target.checked);\r\n                } else {\r\n                  console.log(event.target.value);\r\n                  changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(...rows.map((row) => (`${get(row, accessor)}` || \"\").length));\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = (days) => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n"],"sourceRoot":""}