{"version":3,"sources":["helpers.js","actions/excelActions.js","actions/logActions.js","actions/menuActions.js","actions/configActions.js","components/Sidebar.js","components/modals/LogModal.js","components/ComList.js","components/OutputList.js","actions/internalActions.js","components/InputList.js","components/TableCell.js","components/Table.js","components/util/ReactTableWrapper.js","components/modals/SelfLearningModal.js","actions/selfLearningActions.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","actions/messageTypes.js","actions/socketApi.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","changeConfig","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","oldName","className","contents","configuration","location","structure","defaultStruct","defaults","onClick","splice","concat","options","keyOptions","option","onChange","e","target","entries","entry","numeric","event","min","max","step","checked","rounding","round","num","digits","factor","Math","pow","getColumnWidth","rows","accessor","cellLength","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","downloadExcel","window","href","uploadExcelTemplate","input","document","accept","onchange","data","FormData","append","files","axios","post","then","alert","catch","click","getLogList","dispatch","getState","_ref","emit","list","RECEIVE_LOG_LIST","payload","openMenu","OPEN_MENU","reboot","setTimeout","loadConfig","getLogo","asyncToGenerator","regenerator_default","mark","_callee","logo","wrap","_context","prev","next","abrupt","stop","this","CONFIG_CHANGE","getConfigList","RECEIVE_CONFIG_LIST","_ref3","RECEIVE_CONFIG","JSON","parse","result","console","log","err","configExists","_ref4","Promise","resolve","_ref5","saveConfig","_ref6","newConfig","stringify","loaded","locked","hasChanged","confirm","consistent","CONFIG_LOCK","reload","Sidebar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","uploadLog","deleteLog","downloadAllLogs","deleteAllLogs","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","contentLabel","logList","downloadLog","ftpTargets","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","uploadExcel","exposeShutdown","shutdown","QS","Component","connect","static","misc","logger","writeToFile","FTP","targets","fileList","i","CONFIG_UNLOCK","toggleMenu","TOGGLE_MENU","CLOSE_MENU","_ref2","msg","LogModal","changeFilterType","filterType","filterTypes","id","title","full","uniqueLogEnabled","push","TU","activityCounter","TA","currentFilter","find","_this$props$loggerSta","loggerState","accessors","legend","columns","Header","style","textAlign","Cell","toFixed","column","filteredEntries","onClose","react_table_es","fontSize","unique","selfLearning","internal","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","space","RTSCTS","XONXOFF","average","alwaysPositive","timeoutReset","timeout","prefix","postfix","autoCommandEnabled","autoCommandMin","autoCommandMax","autoCommandTime","autoCommandText","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","Modal","setAppElement","output","ports","hardwareOutput","-1","0","1","2","3","4","5","6","7","8","9","visible","formula","execute","seconds","manualConfirmation","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","forceOutput","hardwareInput","","exe","exebl","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","message","manualFunction","menuOptions","newMenuIndex","findIndex","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","backgroundColor","color","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","#3fd35d","yellow","#ffc000","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","ReactTableWrapper","Headers","ref","forwardRef","individualColors","textColors","sum","reduce","acc","cur","SelfLearningModal","toggleIndividualTable","showIndividualTable","UNTable","React","createRef","SLTable","comConfigs","extraColumnConfigs","extraColumns","keyName","valueName","valueRounding","firstTopDigits","secondTopDigits","individualEntries","generalEntries","individualColumnHeaders","headerRoundings","toConsumableArray","formattedHeaders","header","extra","dateFormat","generalVisible","generalTableColumns","deleteGeneralSL","original","activity","activityHistory","individualTableColumns","increments","numUpdates","numUpdatesHistory","exitOptions","deleteIndividualSL","tableStyle","marginRight","cols","tableRef","sheetName","col","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","current","getResolvedState","sortedData","Symbol","iterator","done","values","newRow","return","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","logID","resetIndividualSL","getSLModalContent","individual","tableExtraColumnTitle","totalNumber","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","isUndefined","enabled","off","com0ind","com1ind","endsWith","LogID","startCalibration","numberPercentage","tolerance","startTolerance","important","resetSL","resetSLData","individualToleranceAbs","individualTolerance","individualToleranceShift","individualCorrectionIncrement","individualCorrectionLimit","excelIndividualColumn","charCodeAt","excelDateColumn","excelExitColumn","firstTopFormula","secondTopFormula","topFormula","text","number","calibration","success","matchedTolerance","modals_SelfLearningModal","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","newDate","moment","time","format","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","resetMode","interval","resetTime","resetInterval","automatic","folder","username","password","configList","deleteConfig","downloadConfig","uploadConfig","version","prompt","onSubmit","preventDefault","setDateTime","ip","currentVersion","file","versionName","Main","reloadInterval","setInterval","getLog","clearInterval","loadStatic","logModalFilterType","logEntries","logTableColumns","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","modals_LogModal","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","some","enabledModules","RECEIVE_STATIC","LOGGER_STATE","App","components_Sidebar","components_Main","require","initialState","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","SERIAL_CLEAR","formulaResults","RECEIVE_IP","RECEIVE_TIME","getTime","combineReducers","action","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","_action$payload4","newCells","_action$payload5","messageTypes","tableColor","notfound","clearSerial","socket","io","Boolean","hostname","middleware","thunk","withExtraArgument","callback","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducer","_loop","init","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8bc04393.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, changeConfig, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(value[0][key], config, changeConfig, index, name + \"[\" + index + \"].\" + key)\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(element, config, changeConfig, index, name + \"[\" + index + \"]\");\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key => makeForm(value[key], config, changeConfig, index, name + (name ? \".\" : \"\") + key))}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"emphasis\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return (\r\n          <div className=\"configuration--emphasis\">\r\n            {makeForm(value.contents, config, changeConfig, index, oldName)}\r\n          </div>\r\n        );\r\n      }\r\n      case \"conditional\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return makeForm(value.contents, config, changeConfig, index, oldName);\r\n      }\r\n      case \"external\": {\r\n        return makeForm(value.configuration, config, changeConfig, index, value.location);\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const structure = value.structure;\r\n        const defaultStruct = value.defaults;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"configuration--struct\">\r\n                #{index + 3}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    contents.splice(index, 1);\r\n                    changeConfig(name, contents);\r\n                  }}\r\n                />\r\n                {makeForm(structure, config, changeConfig, index, name + \"[\" + index + \"]\")}\r\n              </div>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                        numeric: true\r\n                      });\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"button\": {\r\n        return (\r\n          <>\r\n            <input type=\"button\" value={value.name} className=\"configuration--button\" onClick={value.onClick} />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={value.rounding ? round(get(config, name), value.rounding) : get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  changeConfig(name, event.target.checked);\r\n                } else {\r\n                  changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(...rows.map(row => (`${get(row, accessor)}` || \"\").length));\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import axios from \"axios\";\r\n\r\nexport const downloadExcel = () => {\r\n  window.location.href = \"/downloadExcel\";\r\n};\r\n\r\nexport const uploadExcel = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"excelFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importExcel\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel file.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel file.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const uploadExcelTemplate = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"templateFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importTemplate\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel template.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel template.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import axios from \"axios\";\r\nimport { RECEIVE_LOG_LIST, LOGGER_STATE } from \"./types\";\r\n\r\nexport const downloadLog = name => {\r\n  window.location.href = \"/downloadLog?file=\" + name;\r\n};\r\n\r\nexport const downloadAllLogs = () => (dispatch, getState) => {\r\n  window.location.href = \"/downloadLog?multiFile=\" + getState().misc.logList;\r\n};\r\n\r\nexport const getLogList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getLogList\", null, list => {\r\n    dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const uploadLog = (name, index) => (dispatch, getState, { emit }) => {\r\n  emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n};\r\n\r\nexport const deleteAllLogs = () => (dispatch, getState, { emit }) => {\r\n  const fileList = getState().misc.logList;\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    emit(\"deleteLog\", fileList[i]);\r\n  }\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const deleteLog = name => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteLog\", name);\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const getLog = () => dispatch => {\r\n  axios.get(\"/comlog\").then(result => {\r\n    dispatch({ type: LOGGER_STATE, payload: result.data });\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { TOGGLE_MENU, OPEN_MENU, CLOSE_MENU, CONFIG_UNLOCK } from \"./types\";\r\n\r\nimport { loadConfig } from \"./configActions\";\r\n\r\nexport const toggleMenu = () => dispatch => {\r\n  dispatch({ type: TOGGLE_MENU });\r\n};\r\n\r\nexport const openMenu = () => dispatch => {\r\n  dispatch({ type: OPEN_MENU });\r\n};\r\n\r\nexport const closeMenu = () => dispatch => {\r\n  dispatch({ type: CLOSE_MENU });\r\n};\r\n\r\nexport const unlockConfig = () => dispatch => {\r\n  dispatch({ type: CONFIG_UNLOCK });\r\n};\r\n\r\nexport const reboot = () => dispatch => {\r\n  axios.get(\"/restart\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 5000);\r\n};\r\n\r\nexport const shutdown = () => {\r\n  axios.get(\"/shutdown\");\r\n};\r\n\r\nexport const getLogo = async () => {\r\n  let logo = false;\r\n  try {\r\n    await axios.get(\"/logo\");\r\n    logo = \"/logo\";\r\n  } finally {\r\n    return logo;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { RECEIVE_CONFIG_LIST, CONFIG_CHANGE, RECEIVE_CONFIG, RECEIVE_STATIC, CONFIG_LOCK } from \"./types\";\r\nimport { reboot } from \"./menuActions\";\r\n\r\nexport const downloadConfig = name => {\r\n  window.location.href = \"/downloadConfig?file=\" + name;\r\n};\r\n\r\nexport const changeConfig = (address, value, options) => dispatch => {\r\n  if (options && options.numeric) {\r\n    value = Number(value);\r\n  }\r\n  dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n};\r\n\r\nexport const getConfigList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getConfigList\", null, list => {\r\n    dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const deleteConfig = name => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n    emit(\"deleteConfig\", name);\r\n    dispatch(getConfigList());\r\n  }\r\n};\r\n\r\nexport const loadConfig = name => (dispatch, getState, { emit }) => {\r\n  if (name) {\r\n    emit(\"loadConfig\", name, config => {\r\n      dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n    });\r\n  } else {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n};\r\n\r\nexport const loadStatic = () => dispatch => {\r\n  axios.get(\"/static\").then(result => {\r\n    dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n    document.title = result.data.name;\r\n  });\r\n};\r\n\r\nexport const configExists = name => (dispatch, getState, { emit }) => {\r\n  return new Promise(resolve => {\r\n    emit(\"configExists\", name, ({ result }) => resolve(result));\r\n  });\r\n};\r\n\r\nexport const saveConfig = name => (dispatch, getState, { emit }) => {\r\n  const newConfig = JSON.parse(JSON.stringify(getState().config));\r\n  delete newConfig.loaded;\r\n  delete newConfig.locked;\r\n  delete newConfig.hasChanged;\r\n\r\n  if (name) {\r\n    dispatch(configExists(name)).then(result => {\r\n      if (!result || window.confirm(\"File already exists, do you want to overwrite?\")) {\r\n        emit(\"saveConfig\", { name: name, config: newConfig });\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (getState().config.hasChanged) {\r\n    emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n      if (\r\n        (consistent || window.confirm(\"This will reset the log, continue?\")) &&\r\n        window.confirm(\"Are you sure you want to save these changes?\")\r\n      ) {\r\n        emit(\"settings\", newConfig);\r\n        dispatch({ type: CONFIG_LOCK });\r\n        dispatch(reboot());\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    dispatch({ type: CONFIG_LOCK });\r\n  }\r\n};\r\n\r\nexport const uploadConfig = currentVersion => dispatch => {\r\n  const uploadFunction = event => {\r\n    const file = event.target.files[0];\r\n\r\n    const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n    if (!versionName) {\r\n      alert(\"Config does not have a valid name\");\r\n      return;\r\n    }\r\n    const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n    const currentMayorVersion = currentVersion.split(\".\")[0];\r\n\r\n    if (mayorVersion !== currentMayorVersion) {\r\n      alert(\"Version of new config does not match the current one\");\r\n      return;\r\n    }\r\n\r\n    dispatch(configExists(file.name)).then(result => {\r\n      if (result && !window.confirm(\"Config already exists. Overwrite?\")) return;\r\n\r\n      const data = new FormData();\r\n      data.append(\"configFile\", file);\r\n      axios\r\n        .post(\"/uploadConfig\", data)\r\n        .then(() => {\r\n          window.alert(\"Successfully uploaded new config.\");\r\n          dispatch(getConfigList());\r\n        })\r\n        .catch(() => window.alert(\"Error uploading new config.\"));\r\n    });\r\n  };\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".json\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { downloadExcel, uploadExcel } from \"../actions/excelActions\";\r\nimport { downloadAllLogs, downloadLog, deleteLog, deleteAllLogs, getLogList, uploadLog } from \"../actions/logActions\";\r\nimport { saveConfig } from \"../actions/configActions\";\r\nimport { unlockConfig, toggleMenu, openMenu, closeMenu, reboot, shutdown } from \"../actions/menuActions\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.unlockConfig();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState => !newState.isOpen && closeMenu()}\r\n          width={450}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>{\" \"}\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                uploadExcel();\r\n                //this.openUploadModal();\r\n                //closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.downloadExcel();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Download Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\")) this.props.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: []\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    downloadExcel,\r\n    downloadAllLogs,\r\n    deleteLog,\r\n    deleteAllLogs,\r\n    downloadLog,\r\n    getLogList,\r\n    unlockConfig,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    saveConfig,\r\n    reboot,\r\n    shutdown,\r\n    uploadLog\r\n  }\r\n)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport { getColumnWidth } from \"../../helpers\";\r\n\r\nclass LogModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: \"full\"\r\n    };\r\n  }\r\n\r\n  changeFilterType = event => {\r\n    this.setState({ filterType: event.target.value });\r\n  };\r\n\r\n  filterTypes = [\r\n    {\r\n      id: \"full\",\r\n      name: \"Show only complete\",\r\n      title: \"Complete Log\",\r\n      filter: entry => entry.full\r\n    }\r\n  ];\r\n\r\n  componentWillMount() {\r\n    if (this.props.uniqueLogEnabled) {\r\n      this.filterTypes.push({\r\n        id: \"unique\",\r\n        name: \"Show only unique\",\r\n        title: \"Unique Log\",\r\n        filter: entry => entry.TU\r\n      });\r\n    }\r\n\r\n    if (this.props.activityCounter) {\r\n      this.filterTypes.push({\r\n        id: \"activity\",\r\n        name: \"Show only activity\",\r\n        title: \"Activity Log\",\r\n        filter: entry => entry.TA\r\n      });\r\n    }\r\n    this.filterTypes.push({\r\n      id: \"none\",\r\n      name: \"Show all\",\r\n      title: \"Normal Log\",\r\n      filter: entry => true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const currentFilter = this.filterTypes.find(filter => filter.id === this.state.filterType);\r\n\r\n    const { entries, accessors, legend, digits } = this.props.loggerState;\r\n    const columns = legend\r\n      .map((name, index) => ({\r\n        Header: () => <b>{name}</b>,\r\n        accessor: accessors[index],\r\n        width: getColumnWidth(entries, accessors[index]),\r\n        style: { textAlign: \"center\" },\r\n        Cell: props => {\r\n          if (typeof props.value === \"number\") {\r\n            return props.value.toFixed(digits[index]);\r\n          }\r\n          return props.value;\r\n        },\r\n        name\r\n      }))\r\n      .filter((column, index) => index >= 2)\r\n      .filter(column => this.props.uniqueLogEnabled || column.name !== \"TU\")\r\n      .filter(column => this.props.activityCounter || column.name !== \"TA\");\r\n\r\n    const filteredEntries = entries.filter(currentFilter.filter);\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"Log Modal\"\r\n      >\r\n        {this.filterTypes.length > 1 && (\r\n          <span>\r\n            <select value={this.state.filterType} onChange={this.changeFilterType}>\r\n              {this.filterTypes.map(filter => (\r\n                <option value={filter.id}>{filter.name}</option>\r\n              ))}\r\n            </select>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"main--logModal\">\r\n          <div>\r\n            <div className=\"main--logModal--title\">\r\n              <b>{currentFilter.title}</b>\r\n            </div>\r\n            <ReactTable style={{ fontSize: 14 }} data={filteredEntries} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  const loggerState = state.internal.logger;\r\n\r\n  return {\r\n    uniqueLogEnabled,\r\n    activityCounter,\r\n    loggerState\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LogModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandEnabled: {\r\n          name: \"AutoCommand\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandMin: {\r\n          name: \"Min Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandMax: {\r\n          name: \"Max Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandTime: {\r\n          name: \"Time (sec)\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandText: {\r\n          name: \"Command\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) => (i === index ? !element : element))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.comIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history.slice(0, this.props.config.serial.coms[com.index].entries).map(element => (\r\n                    <>\r\n                      <div>{element.timeString}</div>\r\n                      <div>{element.entry}</div>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeConfig }\r\n)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceOutput } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        hardwareOutput: {\r\n          name: \"Hardware output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"HW Output 1\",\r\n            \"1\": \"HW Output 2\",\r\n            \"2\": \"HW Output 3\",\r\n            \"3\": \"HW Output 4\",\r\n            \"4\": \"HW Output 5\",\r\n            \"5\": \"HW Output 6\",\r\n            \"6\": \"HW Output 7\",\r\n            \"7\": \"HW Output 8\",\r\n            \"8\": \"HW Output 9\",\r\n            \"9\": \"HW Output 10\"\r\n          }\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.output.ports[index].execute\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(port => port.visible);\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forceOutput, changeConfig }\r\n)(OutputList);\r\n","export const forceInput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.input.ports[index],\r\n    ...state.internal.inputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceInput\", index);\r\n};\r\n\r\nexport const forceOutput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.output.ports[index],\r\n    ...state.internal.outputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceOutput\", index);\r\n};\r\n\r\nexport const tableManual = (index, value) => (dispatch, getState, { emit }) => {\r\n  emit(\"manual\", { index, value });\r\n};\r\n\r\nexport const setDateTime = date => (dispatch, getState, { emit }) => {\r\n  emit(\"setDateTime\", date);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceInput } from \"../actions/internalActions\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        hardwareInput: {\r\n          name: \"Hardware input\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"HW Input 1\",\r\n            \"1\": \"HW Input 2\",\r\n            \"2\": \"HW Input 3\",\r\n            \"3\": \"HW Input 4\",\r\n            \"4\": \"HW Input 5\"\r\n          }\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\"\r\n          }\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\"\r\n          },\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\"\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\"\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(port => port.visible);\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forceInput, changeConfig }\r\n)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={event => {\r\n            const value = event.target.value;\r\n            const message = props.cell.numeric ? Number(value) : value;\r\n            props.manualFunction(index, message);\r\n          }}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) + 1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length) newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\" style={{ backgroundColor: !props.notFound && cell.color }}>\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { tableManual } from \"../actions/internalActions\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\"\r\n          }\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.table.cells[index].type === \"reader\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.table.cells[index].type !== \"date\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type) && !config.table.cells[index].readerPort\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) => config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => [\"normal\", \"reader\"].includes(config.table.cells[index].type)\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.visible);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell {String.fromCharCode(65 + Math.floor(this.state.configCellIndex / 5))}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configCellIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.tableManual}\r\n              openModal={this.props.configLocked ? this.props.openLog : () => this.openConfigModal(cell.index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { tableManual, changeConfig }\r\n)(Table);\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport \"../../styles/reactTable.scss\";\r\n\r\nlet id = 0;\r\n\r\nexport default function ReactTableWrapper(props) {\r\n  const columns = props.columns.map(column => {\r\n    id++;\r\n    return {\r\n      ...column,\r\n      id,\r\n      style: { ...column.style, ...props.style },\r\n      Header: (\r\n        <div className=\"reactTable--header\">\r\n          {column.Headers.map(element => (\r\n            <div className=\"reactTable--header--child\">{element || \" \"}</div>\r\n          ))}\r\n        </div>\r\n      )\r\n    };\r\n  });\r\n\r\n  return <ReactTable ref={props.forwardRef} data={props.data} columns={columns} />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"../util/ReactTableWrapper\";\r\nimport Toggle from \"react-toggle\";\r\nimport dateFormat from \"dateformat\";\r\nimport XLSX from \"xlsx\";\r\n\r\nimport { daysToDate } from \"../../helpers\";\r\nimport { deleteGeneralSL, deleteIndividualSL, resetIndividualSL } from \"../../actions/selfLearningActions\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nfunction sum(list) {\r\n  return list.filter(entry => entry).reduce((acc, cur) => acc + cur, 0);\r\n}\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.UNTable = React.createRef();\r\n    this.SLTable = React.createRef();\r\n\r\n    this.state = {\r\n      showIndividualTable: true\r\n    };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({\r\n      showIndividualTable: !this.state.showIndividualTable\r\n    });\r\n  };\r\n\r\n  getSLModalContent() {\r\n    const comConfigs = this.props.config.serial.coms;\r\n    const comIndex = this.props.comIndex;\r\n    const extraColumnConfigs = this.props.config.selfLearning.extraColumns;\r\n\r\n    const keyName = comConfigs[1 - comIndex].name;\r\n    const valueName = comConfigs[comIndex].name;\r\n    const valueRounding = comConfigs[comIndex].digits;\r\n\r\n    const firstTopDigits = this.props.config.selfLearning.firstTopDigits;\r\n    const secondTopDigits = this.props.config.selfLearning.secondTopDigits;\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n    const individualColumnHeaders = this.props.individualColumnHeaders;\r\n    const headerRoundings = [firstTopDigits, secondTopDigits, ...extraColumnConfigs.map(column => column.digits)];\r\n    const formattedHeaders = individualColumnHeaders.map((header, index) =>\r\n      header ? Number(header).toFixed(headerRoundings[index]) : \"\"\r\n    );\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({\r\n        key,\r\n        ...this.props.generalEntries[key]\r\n      });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({\r\n        key,\r\n        ...this.props.individualEntries[key]\r\n      });\r\n    }\r\n\r\n    const extraColumns = this.props.config.selfLearning.extraColumns.map((column, index) => {\r\n      return {\r\n        Headers: [formattedHeaders[index + 2], column.title],\r\n        accessor: row => row.extra[index],\r\n        Cell: props => {\r\n          switch (column.type) {\r\n            case \"text\":\r\n              return props.value ? String(props.value).slice(-column.digits) : \"\";\r\n            case \"number\":\r\n              return Number(props.value).toFixed(column.digits);\r\n            case \"date\":\r\n              return Number(props.value) > 0\r\n                ? dateFormat(daysToDate(Number(props.value)), \"dd-mm-yyyy\")\r\n                : \"Invalid date\";\r\n            default:\r\n              return props.value;\r\n          }\r\n        },\r\n        width: Math.max(80, 11 * column.title.length),\r\n        generalVisible: column.generalVisible\r\n      };\r\n    });\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Headers: [\"\", valueName],\r\n        accessor: row => row.entries[0],\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-1\"],\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-2\"],\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-3\"],\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-4\"],\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns.filter(column => column.generalVisible),\r\n      {\r\n        Headers: [\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete all general entries?`)) {\r\n                this.props.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>\r\n          </button>,\r\n          \"\"\r\n        ],\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to delete general entries for ${props.original.key}?`)) {\r\n                  this.props.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    if (this.props.activityCounter) {\r\n      generalTableColumns.push(\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Headers: [formattedHeaders[0], valueName],\r\n        accessor: \"calibration\",\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(valueRounding)\r\n      },\r\n      {\r\n        Headers: [formattedHeaders[1], keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns,\r\n      {\r\n        Headers: [\"\", \"Tol\"],\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[Math.min(4, props.original.increments)],\r\n                color: textColors[Math.min(4, props.original.increments)]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdates)), \"Num\"],\r\n        accessor: \"numUpdates\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[0])), \"-1\"],\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[1])), \"-2\"],\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[2])), \"-3\"],\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      }\r\n    ];\r\n\r\n    if (this.props.activityCounter) {\r\n      individualTableColumns.push(\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const exitOptions = this.props.config.selfLearning.exitOptions;\r\n\r\n    individualTableColumns.push({\r\n      Headers: [\r\n        <button\r\n          onClick={() => {\r\n            if (window.confirm(`Are you sure you want to delete all individual entries?`)) {\r\n              this.props.deleteIndividualSL();\r\n            }\r\n          }}\r\n        >\r\n          <b> Delete </b>{\" \"}\r\n        </button>,\r\n        \"\"\r\n      ],\r\n      Cell: props =>\r\n        exitOptions.length ? (\r\n          <select\r\n            value=\"\"\r\n            onChange={event => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key, event.target.value);\r\n              }\r\n            }}\r\n          >\r\n            <option value=\"\">Delete</option>\r\n            {exitOptions.map(({ key, value }) => (\r\n              <option value={key}>{value}</option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key);\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n      width: 70\r\n    });\r\n\r\n    const tableStyle = { textAlign: \"center\" };\r\n\r\n    const downloadTable = () => {\r\n      const table = [];\r\n      let cols, tableRef, sheetName;\r\n\r\n      if (this.state.showIndividualTable) {\r\n        cols = individualTableColumns.slice(0, -1);\r\n        tableRef = this.UNTable;\r\n        sheetName = \"UN List\";\r\n      } else {\r\n        cols = generalTableColumns;\r\n        cols.splice(8, 1);\r\n        tableRef = this.SLTable;\r\n        sheetName = \"SL List\";\r\n      }\r\n\r\n      table[0] = cols.map(col => col.Headers[0]);\r\n      table[1] = cols.map(col => col.Headers[1]);\r\n\r\n      for (let row of tableRef.current.getResolvedState().sortedData) {\r\n        row = Object.values(row);\r\n        const newRow = [];\r\n        for (let i = 0; i < cols.length; i++) newRow.push(row[i]);\r\n        table.push(newRow);\r\n      }\r\n\r\n      const ws = XLSX.utils.aoa_to_sheet(table);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n      const date = dateFormat(new Date(), \"yyyy-mm-dd_HH-MM-ss\");\r\n\r\n      XLSX.writeFile(wb, `${this.props.name}_${this.props.config.logger.logID}_${date}.xlsx`);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle checked={this.state.showIndividualTable} onChange={this.toggleIndividualTable} />\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}\r\n        </span>\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button style={{ marginRight: \"20px\" }} onClick={downloadTable}>\r\n            <b> Download </b>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reset the data of the individual selfLearning?\"))\r\n                this.props.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b> Reset </b>\r\n          </button>\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN - list </div>\r\n            <ReactTable\r\n              forwardRef={this.UNTable}\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n              style={tableStyle}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL - list </div>\r\n            <ReactTable\r\n              forwardRef={this.SLTable}\r\n              style={tableStyle}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter,\r\n    name\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteGeneralSL, deleteIndividualSL, resetIndividualSL }\r\n)(SelfLearningModal);\r\n","export const deleteGeneralSL = key => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteGeneralSL\", key);\r\n};\r\n\r\nexport const deleteIndividualSL = (key, message) => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteIndividualSL\", { key, message }, totalNumber =>\r\n    window.alert(`Total SL number has been lowered from ${totalNumber + 1} to ${totalNumber}`)\r\n  );\r\n};\r\n\r\nexport const resetIndividualSL = () => (dispatch, getState, { emit }) => {\r\n  emit(\"resetIndividualSL\");\r\n};\r\n\r\nexport const resetSLData = () => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"This will clear the Excel file. Do you want to download it first?\")) {\r\n    return;\r\n  }\r\n  if (window.confirm(\"Are you sure you want to clear all SL data?\")) {\r\n    emit(\"deleteSLData\");\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\nimport { downloadExcel, uploadExcelTemplate } from \"../actions/excelActions\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        normal: {\r\n          type: \"conditional\",\r\n          condition: config => !config.selfLearning.enabled.endsWith(\"ind\") && config.selfLearning.enabled !== \"off\",\r\n          contents: {\r\n            LogID: {\r\n              name: \"LogID\",\r\n              type: \"external\",\r\n              location: \"logger.logID\",\r\n              configuration: {\r\n                name: \"LogID\",\r\n                type: \"text\"\r\n              }\r\n            },\r\n            startCalibration: {\r\n              name: \"Calibration\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              rounding\r\n            },\r\n            totalNumber: {\r\n              name: \"Total number\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            startTolerance: {\r\n              name: \"Extra tolerance during learning %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            }\r\n          }\r\n        },\r\n        individual: {\r\n          type: \"conditional\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\"),\r\n          contents: {\r\n            important: {\r\n              type: \"emphasis\",\r\n              contents: {\r\n                resetSL: {\r\n                  name: \"Reset Self Learning Data\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.resetSLData();\r\n                  }\r\n                },\r\n                downloadExcel: {\r\n                  name: \"Download Excel file\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.downloadExcel();\r\n                  }\r\n                },\r\n                logID: {\r\n                  type: \"external\",\r\n                  location: \"logger.logID\",\r\n                  configuration: {\r\n                    name: \"LogID\",\r\n                    type: \"text\"\r\n                  }\r\n                },\r\n                startCalibration: {\r\n                  name: \"Calibration\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  rounding\r\n                },\r\n                totalNumber: {\r\n                  name: \"Total number\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                }\r\n              }\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            individualToleranceAbs: {\r\n              name: \"Individual tolerance\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualTolerance: {\r\n              name: \"Individual tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualToleranceShift: {\r\n              name: \"Individual tolerance shift %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionIncrement: {\r\n              name: \"Correction %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionLimit: {\r\n              name: \"Correction limit (max 9)\",\r\n              type: \"number\",\r\n              min: 0,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            excelIndividualColumn: {\r\n              type: \"external\",\r\n              location: \"table.individualColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Com Ind\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelDateColumn: {\r\n              type: \"external\",\r\n              location: \"table.dateColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Date\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelExitColumn: {\r\n              type: \"external\",\r\n              location: \"table.exitColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Exit\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            exitOptions: {\r\n              name: \"Exit options\",\r\n              type: \"keyValue\"\r\n            },\r\n            activityCounter: {\r\n              type: \"checkbox\",\r\n              name: \"Activity counter\"\r\n            },\r\n            uploadExcelTemplate: {\r\n              name: \"Import Excel Template\",\r\n              type: \"button\",\r\n              onClick: uploadExcelTemplate\r\n            },\r\n            title: {\r\n              name: \"List column configuration\",\r\n              type: \"title\"\r\n            },\r\n            firstTopFormula: {\r\n              name: \"#1 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            firstTopDigits: {\r\n              name: \"#1 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            secondTopFormula: {\r\n              name: \"#2 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            secondTopDigits: {\r\n              name: \"#1 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            extraColumns: {\r\n              name: \"Additional columns\",\r\n              type: \"structArray\",\r\n              structure: {\r\n                title: {\r\n                  name: \"Title\",\r\n                  type: \"text\"\r\n                },\r\n                topFormula: {\r\n                  name: \"Top formula\",\r\n                  type: \"text\"\r\n                },\r\n                formula: {\r\n                  name: \"Formula\",\r\n                  type: \"text\"\r\n                },\r\n                type: {\r\n                  name: \"Type of content\",\r\n                  type: \"select\",\r\n                  options: {\r\n                    text: \"Non-num\",\r\n                    number: \"Numeric\",\r\n                    date: \"Date\"\r\n                  }\r\n                },\r\n                digits: {\r\n                  name: \"Digits\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                },\r\n                generalVisible: {\r\n                  name: \"Show in SL list\",\r\n                  type: \"checkbox\"\r\n                }\r\n              },\r\n              defaults: {\r\n                title: \"\",\r\n                topFormula: \"\",\r\n                formula: \"\",\r\n                type: \"text\",\r\n                digits: 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\"selfLearning--inProgress\", \"selfLearning--success\", \"selfLearning--warning\"];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(this.props.config.serial.coms[this.props.comIndex || 0].digits) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(Math.round((this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000) / 10 + \"%\");\r\n    }\r\n\r\n    if (this.props.individual && this.props.activityCounter) {\r\n      const activity =\r\n        Object.values(this.props.individualEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0) +\r\n        Object.values(this.props.generalEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0);\r\n\r\n      cells.push(activity);\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal isOpen={this.state.SLModalIsOpen} onClose={this.closeSLModal} />\r\n\r\n        <div\r\n          className={classNames(\"selfLearning\", indicators[this.props.success || 0])}\r\n          onClick={this.props.configLocked ? (this.props.individual ? this.openSLModal : null) : this.openConfigModal}\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const activityCounter = state.config.selfLearning.activityCounter;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { resetSLData, downloadExcel, changeConfig }\r\n)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig\r\n} from \"../actions/configActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      listModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\")\r\n    };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\"\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\"\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"]\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            numeric: true,\r\n            options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\"\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\"\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\"\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\"\r\n            }\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: config => config.logger.resetMode === \"time\"\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: config => config.logger.resetMode === \"interval\"\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\"\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\"\r\n          },\r\n          uploadExcel: {\r\n            name: \"Include Excel with upload\",\r\n            type: \"checkbox\"\r\n          },\r\n          targets: [1, 2].map(index => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\"\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\"\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\"\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\"\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\"\r\n            }\r\n          }))\r\n        }\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input type=\"button\" value=\"Delete\" onClick={() => this.props.deleteConfig(config)} />\r\n                  <input type=\"button\" value=\"Load\" onClick={() => this.props.loadConfig(config)} />\r\n                  <input type=\"button\" value=\"Download\" onClick={() => this.props.downloadConfig(config)} />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input type=\"button\" value=\"Upload\" onClick={() => this.props.uploadConfig(this.props.config.version)} />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\"Please enter the name for the new config file:\", \"config\");\r\n                    if (name) this.props.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              <h3>Date and Time</h3>\r\n              <br />\r\n              <form\r\n                onSubmit={event => {\r\n                  event.preventDefault();\r\n                  this.props.setDateTime(this.state.newDate);\r\n                }}\r\n              >\r\n                Change internal time:\r\n                <input type=\"submit\" value=\"Save\" />\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"newDate\"\r\n                  value={this.state.newDate}\r\n                  onChange={event => this.setState({ newDate: event.target.value })}\r\n                />\r\n              </form>\r\n\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div className=\"infobar\" onClick={this.props.configLocked ? null : this.openConfigModal}>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"HH:mm:ss\")}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"DD-MM-YYYY\")}</div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeConfig,\r\n    deleteConfig,\r\n    loadConfig,\r\n    downloadConfig,\r\n    configExists,\r\n    saveConfig,\r\n    getConfigList,\r\n    uploadConfig,\r\n    setDateTime\r\n  }\r\n)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { loadConfig, loadStatic } from \"../actions/configActions\";\r\nimport { getLog } from \"../actions/logActions\";\r\nimport { openMenu, getLogo } from \"../actions/menuActions\";\r\n\r\nimport LogModal from \"./modals/LogModal\";\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.loadConfig();\r\n    this.props.loadStatic();\r\n\r\n    getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalFilterType: \"none\",\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.props.getLog, 1000)\r\n    });\r\n    this.props.getLog();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <LogModal isOpen={this.state.logModalIsOpen} onClose={this.closeLogModal} />\r\n          <div className=\"info\">\r\n            <Infobar />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo image={this.state.logo} alt=\"LOGO\" onClick={this.props.openMenu} />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && <SelfLearning />}\r\n            <ComList />\r\n          </div>\r\n\r\n          {this.props.showOutputs && <div className=\"outputs\">{this.props.showOutputs && <OutputList />} </div>}\r\n          {this.props.showInputs && <div className=\"inputs\">{this.props.showInputs && <InputList />}</div>}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable = state.static.exposeUpload && (!configLocked || state.config.table.cells.some(cell => cell.visible));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.input.ports.some(port => port.visible));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.output.ports.some(port => port.visible));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning && (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadConfig, loadStatic, openMenu, getLog }\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  LOGGER_STATE,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: []\r\n  },\r\n  logger: {\r\n    entries: [],\r\n    legend: [],\r\n    accessors: [],\r\n    digits: []\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case SERIAL_CLEAR: {\r\n      const newComs = fullState.coms.map(com => ({\r\n        entry: \"\",\r\n        entryTime: new Date(),\r\n        history: com.history\r\n      }));\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    case LOGGER_STATE: {\r\n      return {\r\n        ...fullState,\r\n        logger: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SERIAL_COM_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR\r\n} from \"./types\";\r\n\r\nexport default {\r\n  input: INPUT_PORT_STATE,\r\n  output: OUTPUT_PORT_STATE,\r\n  table: TABLE_CELL_STATE,\r\n  tableColor: TABLE_CELL_COLOR,\r\n  entry: SERIAL_COM_STATE,\r\n  selfLearning: SELFLEARNING_STATE,\r\n  ip: RECEIVE_IP,\r\n  time: RECEIVE_TIME,\r\n  notfound: TABLE_FOUND_STATE,\r\n  clearSerial: SERIAL_CLEAR\r\n};\r\n","import io from \"socket.io-client\";\r\nimport messageTypes from \"./messageTypes.js\";\r\n\r\nconst socket = io();\r\n\r\nexport const init = store => {\r\n  for (const type in messageTypes) {\r\n    socket.on(type, payload => store.dispatch({ type: messageTypes[type], payload }));\r\n  }\r\n  socket.on(\"error\", payload => window.alert(payload));\r\n};\r\n\r\nexport const emit = (type, payload, callback) => socket.emit(type, payload, callback);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport { init, emit } from \"./actions/socketApi\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst middleware = [thunk.withExtraArgument({ emit })];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\ninit(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"LOGGER_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}