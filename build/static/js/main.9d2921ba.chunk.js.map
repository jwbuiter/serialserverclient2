{"version":3,"sources":["configHelper.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["__webpack_require__","r","__webpack_exports__","d","get","set","makeForm","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","newValue","value","config","name","arguments","undefined","type","Array","isArray","a","createElement","Object","keys","map","key","Fragment","entries","options","entry","min","max","step","checked","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","e","target","api","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","toggleMenu","closeUploadModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","onclick","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","isMenuOpen","component_default","onChange","onClick","window","confirm","reboot","openLogModal","href","shutdown","QS","Component","connect","misc","static","configurationValues","serial","coms","testMessage","reader","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","numeric","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","configComIndex","closeConfigModal","changeConfig","com","configLocked","ReactFitText_default","compressor","concat","classNames","comElement--content--testMode","testMode","internal","objectSpread","locked","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","filter","portsEnabled","indicator","isForced","result","forceOutput","input","exe","exebl","teach","restart","invert","follow","-1","0","manualTimeout","InputList","inputs","forceInput","TableCell","content","manualFunction","menuOptions","option","description","newMenuIndex","findIndex","openModal","table","cells","resetOnExe","Table","configCellIndex","filteredCells","cell","String","fromCharCode","Math","floor","components_TableCell","manual","tableManual","openLog","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","individualTolerance","individualToleranceIncrement","individualToleranceLimit","generalTableColumns","Header","accessor","row","style","textAlign","width","Cell","individualColors","textColors","individualTableColumns","console","log","backgroundColor","original","increments","color","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","individualEntries","generalEntries","push","calibration","toConsumableArray","individual","matchedTolerance","react_table_es","data","columns","success","Logo","src","image","alt","title","trigger","1","useFile","waitForOther","searchColumn","logger","writeToFile","logID","unique","resetMode","time","interval","resetValue","condition","FTP","automatic","Infobar","ip","moment","format","getColumnWidth","rows","cellLength","apply","Main","logModalIsOpen","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","clearInterval","getLogo","logo","MBDC","loaded","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","showPorts","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","Date","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","_action$payload3","entryTime","newComs","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","_loop","message","on","dispatch","loadConfig","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","document","emit","getState","newConfig","event","Boolean","location","hostname","createStore","reducer","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","p"],"mappings":"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","file":"static/js/main.9d2921ba.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div name={name}>\r\n          {Object.keys(value).map(key =>\r\n            makeForm(value[key], config, index, name + (name ? \".\" : \"\") + key)\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3>{value.name}</h3>;\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select name={name} value={get(config, name)}>\r\n              {Object.entries(value.options).map(entry => (\r\n                <option value={entry[0]}>{entry[1]}</option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              name={name}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { get, set, makeForm };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = e => {\r\n    if (e.target.checked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.toggleMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"button\" value=\"Import .xls\" onclick={() => {}} />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            Unlock settings <Toggle onChange={this.toggleConfigLock} />\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n                this.props.api.toggleMenu();\r\n              }\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={this.openUploadModal}\r\n          >\r\n            Upload data\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={this.openLogModal}\r\n          >\r\n            Download log files\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            href=\"/\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                this.props.api.shutdown();\r\n            }}\r\n          >\r\n            Shutdown unit\r\n          </span>\r\n          <span className=\"menu-item\" />\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\"\r\n        },\r\n        reader: {\r\n          name: \"MBDC Reader\",\r\n          type: \"checkbox\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate/Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          }\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\"\r\n        },\r\n        postfix: { name: \"Suffix\", type: \"text\" }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configComIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configComIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for com{this.state.configComIndex}</h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configComIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        {this.props.coms.map((com, index) => (\r\n          <div\r\n            className=\"comElement\"\r\n            onClick={\r\n              this.props.configLocked ? null : () => this.openConfigModal(index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": this.props.testMode\r\n              })}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText compressor={0.9}>\r\n                  <div>{com.entry}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    testMode: state.config.serial.testMode\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configPortIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow 0\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout in milliseconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configPortIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index } = props;\r\n\r\n  let content;\r\n  switch (props.type) {\r\n    case \"manualText\": {\r\n      content = (\r\n        <input\r\n          type=\"text\"\r\n          className=\"tableCell--content--input tableCell--content--input--text\"\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    }\r\n    case \"manualNumeric\": {\r\n      const decrement = () => {\r\n        props.manualFunction(index, Number(props.value) - 1);\r\n      };\r\n      const increment = () => {\r\n        props.manualFunction(index, Number(props.value) + 1);\r\n      };\r\n\r\n      content = (\r\n        <>\r\n          <button onClick={decrement}>-</button>\r\n          <input\r\n            type=\"number\"\r\n            className=\"tableCell--content--input tableCell--content--input--numeric\"\r\n            onChange={e => props.manualFunction(index, e.target.value)}\r\n            value={props.value}\r\n          />\r\n          <button onClick={increment}>+</button>\r\n        </>\r\n      );\r\n      break;\r\n    }\r\n    case \"menuText\": {\r\n      content = (\r\n        <select\r\n          className=\"tableCell--content--input tableCell--content--input--text\"\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={props.value}\r\n        >\r\n          {props.menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    }\r\n    case \"menuNumeric\": {\r\n      const decrement = () => {\r\n        let newMenuIndex =\r\n          props.menuOptions.findIndex(option => option.value === props.value) -\r\n          1;\r\n\r\n        if (newMenuIndex < 0) newMenuIndex = 0;\r\n\r\n        props.manualFunction(index, props.menuOptions[newMenuIndex].value);\r\n      };\r\n      const increment = () => {\r\n        let newMenuIndex =\r\n          props.menuOptions.findIndex(option => option.value === props.value) +\r\n          1;\r\n\r\n        if (newMenuIndex === 0 || newMenuIndex === props.menuOptions.length)\r\n          newMenuIndex = props.menuOptions.length - 1;\r\n\r\n        props.manualFunction(index, props.menuOptions[newMenuIndex].value);\r\n      };\r\n\r\n      content = (\r\n        <>\r\n          <button onClick={decrement}>-</button>\r\n          <select\r\n            className=\"tableCell--content--input tableCell--content--input--numeric\"\r\n            onChange={e => props.manualFunction(index, e.target.value)}\r\n            value={props.value}\r\n          >\r\n            {props.menuOptions.map(option => (\r\n              <option value={option.value}>{option.description}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={increment}>+</button>\r\n        </>\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      content = props.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableCell\">\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{props.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const filteredCells = this.props.cells.filter((cell, index) => {\r\n      return index < 10;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>\r\n              Configuration for cell{\" \"}\r\n              {String.fromCharCode(\r\n                65 + Math.floor(this.state.configCellIndex / 5)\r\n              )}\r\n              {(this.state.configCellIndex % 5) + 1}\r\n            </h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configCellIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${filteredCells.length}`}>\r\n          {filteredCells.map((cell, index) => (\r\n            <TableCell\r\n              key={index}\r\n              name={cell.name}\r\n              value={cell.value}\r\n              index={index}\r\n              type={cell.manual ? \"menuNumeric\" : \"text\"}\r\n              menuOptions={[\r\n                { value: 1, description: \"smeeeeeeeeeeeall\" },\r\n                { value: 3, description: \"big\" }\r\n              ]}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  }\r\n};\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      console.log(props);\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { SLModalIsOpen: false, configModalIsOpen: false };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      console.log(this.props.individualEntries[key]);\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    const cells = [\r\n      \"Self Learning:\",\r\n      this.props.calibration || 0,\r\n      ...(this.props.individual\r\n        ? [this.props.tolerance * 100 + \"%\"]\r\n        : [\r\n            (this.props.tolerance || 0) * 100 + \"%\",\r\n            (this.props.tolerance || 0 - this.props.matchedTolerance || 0) *\r\n              100 +\r\n              \"%\"\r\n          ])\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for SelfLearning</h2>\r\n            {makeForm(configurationValues, this.props.config)}\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <div>SL: Ind COM0</div>\r\n          <div className=\"selfLearning--modal\">\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked ? this.openSLModal : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map(cell => (\r\n            <div className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.6}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  title: {\r\n    name: \"General Configuration\",\r\n    type: \"title\"\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode:\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: \"logger.resetMode==='time'\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            {makeForm(configurationValues, this.props.config)}\r\n          </form>\r\n        </Modal>\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend.map((name, index) => ({\r\n          Header: () => <b>{name}</b>,\r\n          accessor: index + \"\",\r\n          width: getColumnWidth(result.data.entries, index + \"\"),\r\n          style: { textAlign: \"center\" }\r\n        })),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        .\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    !configLocked ||\r\n    state.config.table.cells.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showInputs =\r\n    !configLocked ||\r\n    state.config.input.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showOutputs =\r\n    !configLocked ||\r\n    state.config.output.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showPorts = !configLocked || showInputs || showOutputs;\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showPorts,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../configHelper\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  }\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      newComs[index] = { entry, entryTime };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      console.log(action.payload);\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME, TOGGLE_MENU } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  function loadConfig() {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig() {\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        const newConfig = store.getState().config;\r\n        delete newConfig.loaded;\r\n        delete newConfig.locked;\r\n        delete newConfig.hasChanged;\r\n        console.log(newConfig);\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(event) {\r\n    const address = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (event.target.type === \"number\") {\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    console.log({ address, value });\r\n\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}