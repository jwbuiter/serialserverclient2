{"version":3,"sources":["components/Sidebar.js","components/ComElement.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","assets/Logo-MBDC.jpg","actions/types.js"],"names":["Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","BurgerMenu","pageWrapId","outerContainerId","className","Component","ComElement","ReactFitText_default","name","compressor","average","concat","entries","entry","OutputList","outputs","map","port","index","indicator","isForced","result","onClick","clickFunction","InputList","ports","forced","_this2","inputs","TableCell","content","manual","Fragment","value","openLog","generalTableColumns","Header","accessor","row","id","style","textAlign","width","type","Cell","individualColors","textColors","individualTableColumns","console","log","backgroundColor","original","increments","color","Modal","setAppElement","SelfLearning","openModal","setState","modalIsOpen","closeModal","individualEntries","generalEntries","key","push","objectSpread","lib_default","isOpen","onRequestClose","overlayClassName","contentLabel","react_table_es","data","columns","success","individual","calibration","tolerance","toFixed","matchedTolerance","connect","internal","selfLearning","Logo","src","image","alt","Infobar","ip","moment","time","format","static","misc","Main","openLogModal","logModalIsOpen","logModalUnique","api","getLog","then","logTableColumns","legend","logEntries","closeLogModal","uniqueLogEntries","loaded","components_Infobar","components_Logo","MBDC","selfLearningEnabled","components_SelfLearning","coms","com","components_ComElement","components_OutputList","forceOutput","components_InputList","forceInput","cells","cell","components_TableCell","config","serial","input","output","table","enabled","App","components_Sidebar","components_Main","RECEIVE_CONFIG","require","initialState","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","RECEIVE_IP","RECEIVE_TIME","Date","getTime","combineReducers","arguments","length","undefined","action","payload","fullState","_action$payload","newInputs","Array","from","_action$payload2","newOutputs","_action$payload3","entryTime","newComs","_action$payload4","newCells","APIendPoint","store","socket","socketIOClient","messageTypes","_loop","message","on","dispatch","axios","get","catch","err","emit","getUniqueLog","Boolean","window","location","hostname","match","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p","array","forEach","elem","stringMapFromArray"],"mappings":"2ZAsBeA,qBAjBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAMjB,OACEQ,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,WAAY,YAAaC,iBAAkB,mBAC/CL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,mBACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,eACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,eACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,yBAZcC,+DCsBPC,UAtBI,SAAAjB,GACjB,OACES,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAAA,WAAMX,EAAMmB,OAEdV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAASU,WAAY,GACnBX,EAAAC,EAAAC,cAAA,WAAMX,EAAMqB,SAAN,WAAAC,OAA4BtB,EAAMuB,aAI9Cd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAUf,EAAMwB,YCkB1BC,2LAjCJ,IAAAxB,EAAAG,KACP,OACEK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBAAf,2BAEDX,KAAKJ,MAAM0B,QAAQC,IAAI,SAACC,EAAMC,GAC7B,IAAIC,EAAY,sCAWhB,OAVIF,EAAKG,WAAUD,GAAa,UAE5BF,EAAKpB,MACPsB,GAAa,KACJF,EAAKI,SAAWJ,EAAKG,SAC9BD,GAAa,UAEbA,GAAa,MAIbrB,EAAAC,EAAAC,cAAA,OACEI,UAAU,yBACVkB,QAAS,kBAAMhC,EAAKD,MAAMkC,cAAcL,KAExCpB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBAAf,IAAmCa,EAAKT,MACxCV,EAAAC,EAAAC,cAAA,OAAKI,UAAW,+BAAiCe,eAzBtCd,cCwCVmB,sBAvCb,SAAAA,EAAYnC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACjBlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMJ,KACDQ,MAAQ,CACX4B,MAAO,CACL,CAAE5B,OAAO,EAAO6B,QAAQ,EAAOlB,KAAM,cACrC,CAAEX,OAAO,EAAO6B,QAAQ,EAAOlB,KAAM,YACrC,CAAEX,OAAO,EAAO6B,QAAQ,EAAOlB,KAAM,YACrC,CAAEX,OAAO,EAAO6B,QAAQ,EAAOlB,KAAM,YACrC,CAAEX,OAAO,EAAO6B,QAAQ,EAAOlB,KAAM,aARxBlB,wEAYV,IAAAqC,EAAAlC,KACP,OACEK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBAAf,aAEDX,KAAKJ,MAAMuC,OAAOZ,IAAI,SAACC,EAAMC,GAC5B,IAAIC,EAAY,qCAKhB,OAJIF,EAAKG,WAAUD,GAAa,UAEhCA,GAAaF,EAAKpB,MAAQ,KAAO,MAG/BC,EAAAC,EAAAC,cAAA,OACEI,UAAU,yBACVkB,QAAS,kBAAMK,EAAKtC,MAAMkC,cAAcL,KAExCpB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBAAf,IAAmCa,EAAKT,MACxCV,EAAAC,EAAAC,cAAA,OAAKI,UAAW,+BAAiCe,eA/BvCd,cCkCTwB,UAhCG,SAAAxC,GAChB,IAAIyC,EAeJ,OAZIA,EAFAzC,EAAM0C,OAGJjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAAlB,KACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,YACjBN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,eAAlB,MAKIf,EAAM4C,MAIhBnC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAYkB,QAASjC,EAAM6C,SACxCpC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAUf,EAAMmB,QAGnCV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAASU,WAAY,IACnBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAU0B,QCrB7BK,iBAAsB,CAC1B,CACEC,OAAQ,OACRC,SAAU,SAAAC,GAAG,OAAIA,EAAI1B,QAAQ,IAC7B2B,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,KACRC,SAAU,SAAAC,GAAG,OAAIA,EAAI1B,QAAQ,IAC7B2B,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,KACRC,SAAU,SAAAC,GAAG,OAAIA,EAAI1B,QAAQ,IAC7B2B,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,KACRC,SAAU,SAAAC,GAAG,OAAIA,EAAI1B,QAAQ,IAC7B2B,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,KACRC,SAAU,SAAAC,GAAG,OAAIA,EAAI1B,QAAQ,IAC7B2B,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,OACRC,SAAU,MACVG,MAAO,CAAEC,UAAW,UACpBC,MAAO,KAET,CACEN,OAAQ,kBAAMtC,EAAAC,EAAAC,cAAA,SAAO2C,KAAK,UAC1BN,SAAU,cACVG,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,SAAA/C,GAAK,OAAIS,EAAAC,EAAAC,cAAA,yBACjB4C,KAAM,SAAAvD,GAAK,OAAIS,EAAAC,EAAAC,cAAA,yBACfuC,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,MAILG,EAAmB,CAAC,GAAI,QAAS,SAAU,SAAU,OACrDC,EAAa,CAAC,QAAS,QAAS,QAAS,QAAS,SAElDC,EAAyB,CAC7B,CACEX,OAAQ,OACRC,SAAU,cACVG,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,OACRC,SAAU,MACVG,MAAO,CAAEC,UAAW,UACpBC,MAAO,KAET,CACEN,OAAQ,kBAAMtC,EAAAC,EAAAC,cAAA,SAAO2C,KAAK,UAC1BN,SAAU,cACVG,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,MACRC,SAAU,YACVO,KAAM,SAAAvD,GAEJ,OADA2D,QAAQC,IAAI5D,GAEVS,EAAAC,EAAAC,cAAA,OACEwC,MAAO,CACLU,gBAAiBL,EAAiBxD,EAAM8D,SAASC,YACjDC,MAAOP,EAAWzD,EAAM8D,SAASC,cAGlC/D,EAAM4C,QAIbO,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,MACRC,SAAU,aACVG,MAAO,CAAEC,UAAW,UACpBC,MAAO,IAET,CACEN,OAAQ,SAAA/C,GAAK,OAAIS,EAAAC,EAAAC,cAAA,yBACjB4C,KAAM,SAAAvD,GAAK,OAAIS,EAAAC,EAAAC,cAAA,yBACfuC,GAAI,EACJC,MAAO,CAAEC,UAAW,UACpBC,MAAO,KAIXY,IAAMC,cAAc,aAEdC,cACJ,SAAAA,EAAYnE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACjBlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KAIRoE,UAAY,WACVnE,EAAKoE,SAAS,CAAEC,aAAa,KANZrE,EASnBsE,WAAa,WACXtE,EAAKoE,SAAS,CAAEC,aAAa,KAR7BrE,EAAKO,MAAQ,CAAE8D,aAAa,GAFXrE,wEAajB,IAMMuE,EAAoB,GACpBC,EAAiB,GAEvB,IAAK,IAAIC,KAAOtE,KAAKJ,MAAMyE,eACzBA,EAAeE,KAAK,CAAED,MAAKnD,QAASnB,KAAKJ,MAAMyE,eAAeC,KAEhE,IAAK,IAAIA,KAAOtE,KAAKJ,MAAMwE,kBACzBb,QAAQC,IAAIxD,KAAKJ,MAAMwE,kBAAkBE,IACzCF,EAAkBG,KAAlBzE,OAAA0E,EAAA,EAAA1E,CAAA,CAAyBwE,OAAQtE,KAAKJ,MAAMwE,kBAAkBE,KAGhE,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEoE,OAAQ1E,KAAKI,MAAM8D,YACnBS,eAAgB3E,KAAKmE,WACrBS,iBAAiB,eACjBjE,UAAU,eACVkE,aAAa,sBAEbxE,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BAAf,aACAN,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACE/B,MAAO,CAAEC,UAAW,UACpB+B,KAAMV,EACNW,QAAStC,KAGbrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BAAf,aACAN,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACEC,KAAMX,EACNY,QAAS1B,OAKjBjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAekB,QAAS7B,KAAKgE,WAC1C3D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,OACEI,UACE,2CArDK,CACjB,sCACA,mCACA,oCAmDuBX,KAAKJ,MAAMqF,aAK9B5E,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACZX,KAAKJ,MAAMsF,WACV7E,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACZX,KAAKJ,MAAMuF,YADd,QAC6B,KACF,IAAvBnF,KAAKJ,MAAMwF,WAAiBC,QAAQ,GAFxC,MAKAhF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACZX,KAAKJ,MAAMuF,YADd,QAC6B,KACK,IAA9BnF,KAAKJ,MAAM0F,kBAAwBD,QAAQ,GAF/C,gBAhFazE,aA+FZ2E,kBAJf,SAAyBnF,GACvB,OAAON,OAAA0E,EAAA,EAAA1E,CAAA,GAAKM,EAAMoF,SAASC,eAGdF,CAAyBxB,GChNzB2B,UARF,SAAA9F,GACX,OACES,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASgF,IAAK/F,EAAMgG,MAAOC,IAAKjG,EAAMiG,2CCCrDC,sBACJ,SAAAA,EAAYlG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACjBjG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAA3F,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAKjB,OACEQ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAASU,WAAY,GACnBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACZX,KAAKJ,MAAMmB,KADd,MACuBf,KAAKJ,MAAMmG,GADlC,KAEGC,IAAOhG,KAAKJ,MAAMqG,MAAMC,OAAO,uCAZxBtF,cA6BP2E,kBARf,SAAyBnF,GACvB,MAAO,CACLW,KAAMX,EAAM+F,OAAOpF,KACnBgF,GAAI3F,EAAMgG,KAAKL,GACfE,KAAM7F,EAAMgG,KAAKH,OAINV,CAAyBO,UCnBxCjC,IAAMC,cAAc,aAEduC,cACJ,SAAAA,EAAYzG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACjBxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,KAAMJ,KAUR0G,aAAe,WACbzG,EAAKoE,SAAS,CAAEsC,gBAAgB,EAAMC,gBAAgB,IACtD3G,EAAKD,MAAM6G,IAAIC,SAASC,KAAK,SAAA/E,GAC3B/B,EAAKoE,SAAS,CACZ2C,gBAAiBhF,EAAOmD,KAAK8B,OAAOtF,IAAI,SAACR,EAAMU,GAAP,MAAkB,CACxDkB,OAAQ5B,EACR6B,SAAUnB,EAAQ,GAClBwB,MAAO,MAET6D,WAAYlF,EAAOmD,KAAK5D,aApBXtB,EAyBnBkH,cAAgB,WACdlH,EAAKoE,SAAS,CAAEsC,gBAAgB,KAxBhC1G,EAAKO,MAAQ,CACXmG,gBAAgB,EAChBC,gBAAgB,EAChBM,WAAY,GACZE,iBAAkB,GAClBJ,gBAAiB,IAPF/G,wEA6BV,IAAAqC,EAAAlC,KACP,OAAKA,KAAKJ,MAAMqH,OAKd5G,EAAAC,EAAAC,cAAA,OAAKuC,GAAG,YAAYnC,UAAU,QAC5BN,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEoE,OAAQ1E,KAAKI,MAAMmG,eACnB5B,eAAgB3E,KAAK+G,cACrBnC,iBAAiB,eACjBjE,UAAU,eACVkE,aAAa,aAEbxE,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACZX,KAAKI,MAAMoG,eAAiB,aAAe,aAAc,KAE5DnG,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACE/B,MAAO,CAAEC,UAAW,UACpB+B,KACE/E,KAAKI,MAAMoG,eACPxG,KAAKI,MAAM4G,iBACXhH,KAAKI,MAAM0G,WAEjB9B,QAAShF,KAAKI,MAAMwG,qBAK5BvG,EAAAC,EAAAC,cAAC2G,EAAD,MACA7G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAC4G,EAAD,CAAMvB,MAAOwB,IAAMvB,IAAK,SACvB7F,KAAKJ,MAAMyH,qBAAuBhH,EAAAC,EAAAC,cAAC+G,EAAD,OAErCjH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACZX,KAAKJ,MAAM2H,KAAKhG,IAAI,SAAAiG,GACnB,OACEnH,EAAAC,EAAAC,cAACkH,EAAD,CACE1G,KAAMyG,EAAIzG,KACVK,MAAOoG,EAAIpG,MACX6E,KAAMuB,EAAIvB,KACVhF,QAASuG,EAAIvG,QACbE,QAASqG,EAAIrG,aAKrBd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAACmH,EAAD,CACEpG,QAAStB,KAAKJ,MAAM0B,QACpBQ,cAAe9B,KAAKJ,MAAM6G,IAAIkB,cAEhCtH,EAAAC,EAAAC,cAACqH,EAAD,CACEzF,OAAQnC,KAAKJ,MAAMuC,OACnBL,cAAe9B,KAAKJ,MAAM6G,IAAIoB,cAGlCxH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACZX,KAAKJ,MAAMkI,MAAMvG,IAAI,SAAAwG,GAAI,OACxB1H,EAAAC,EAAAC,cAACyH,EAAD,CACEjH,KAAMgH,EAAKhH,KACXyB,MAAOuF,EAAKvF,MACZF,OAAQyF,EAAKzF,OACbG,QAASP,EAAKoE,mBAhEfjG,EAAAC,EAAAC,cAAA,6BAhCMK,aA8IJ2E,kBArCf,SAAyBnF,GACvB,OAAKA,EAAM6H,OAAOhB,QAAW7G,EAAM+F,OAAOc,OA0BnC,CACLA,QAAQ,EACRM,KAxBWnH,EAAMoF,SAAS+B,KAAKhG,IAAI,SAACiG,EAAK/F,GAAN,OAAA3B,OAAA0E,EAAA,EAAA1E,CAAA,GAChC0H,EACApH,EAAM6H,OAAOC,OAAOX,KAAK9F,MAuB5BU,OApBa/B,EAAMoF,SAASrD,OAAOZ,IAAI,SAAC4G,EAAO1G,GAAR,OAAA3B,OAAA0E,EAAA,EAAA1E,CAAA,GACpCqI,EADoC,CAEvCpH,KAAMX,EAAM6H,OAAOE,MAAMnG,MAAMP,GAAOV,SAmBtCO,QAhBclB,EAAMoF,SAASlE,QAAQC,IAAI,SAAC6G,EAAQ3G,GAAT,OAAA3B,OAAA0E,EAAA,EAAA1E,CAAA,GACtCsI,EADsC,CAEzCrH,KAAMX,EAAM6H,OAAOG,OAAOpG,MAAMP,GAAOV,SAevC+G,MAZY1H,EAAMoF,SAASsC,MAAMvG,IAAI,SAACwG,EAAMtG,GAAP,OAAA3B,OAAA0E,EAAA,EAAA1E,CAAA,GAClCiI,EADkC,CAErChH,KAAMX,EAAM6H,OAAOI,MAAMP,MAAMrG,GAAOV,SAWtCsG,oBAR0BjH,EAAMoF,SAASC,aAAa6C,SAvB/C,CAAErB,QAAQ,IAmCN1B,CAAyBc,GClJzBkC,mLATX,OACElI,EAAAC,EAAAC,cAAA,OAAKuC,GAAG,mBACNzC,EAAAC,EAAAC,cAACiI,EAAD,MACAnI,EAAAC,EAAAC,cAACkI,EAAD,CAAMhC,IAAKzG,KAAKJ,MAAM6G,cALZ7F,aCJV8H,EAAmBC,EAAQ,GAA3BD,eAEFE,EAAe,CAAE3B,QAAQ,GCFvB4B,EAAmBF,EAAQ,GAA3BE,eAEFD,EAAe,CAAE3B,QAAQ,KCI3B0B,EAAQ,GALVG,qBACAC,sBACAC,qBACAC,qBACAC,uBAGIN,EAAe,CACnBrB,KAAM,GACNjG,QAAS,GACTa,OAAQ,GACR2F,MAAO,GACPrC,aAAc,CACZ6C,SAAS,MCdwBK,EAAQ,GAArCQ,gBAAYC,kBAEdR,GAAe,CACnB7C,GAAI,GACJE,MAAM,IAAIoD,MAAOC,WCEJC,eAAgB,CAC7BtB,OJHa,WAAuC,IAA9B7H,EAA8BoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBZ,EAAce,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOzG,MACb,KAAKwF,EACH,OAAO5I,OAAA0E,EAAA,EAAA1E,CAAA,CAAEmH,QAAQ,GAAS0C,EAAOC,SAEnC,QACE,OAAOxJ,IIFX+F,OHJa,WAAuC,IAA9B/F,EAA8BoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBZ,EAAce,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOzG,MACb,KAAK2F,EACH,OAAO/I,OAAA0E,EAAA,EAAA1E,CAAA,CAAEmH,QAAQ,GAAS0C,EAAOC,SAEnC,QACE,OAAOxJ,IGDXoF,SFSa,WAA2C,IAAlCqE,EAAkCL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBZ,EAAce,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAQC,EAAOzG,MACb,KAAK4F,EAAkB,IAAAgB,EACcH,EAAOC,QAAlCnI,EADaqI,EACbrI,MAAOrB,EADM0J,EACN1J,MAAOuB,EADDmI,EACCnI,SAEhBoI,EAAYC,MAAMC,KAAKJ,EAAU1H,QAGvC,OAFA4H,EAAUtI,GAAS,CAAErB,QAAOuB,YAErB7B,OAAA0E,EAAA,EAAA1E,CAAA,GAAK+J,EAAZ,CAAuB1H,OAAQ4H,IAEjC,KAAKhB,EAAmB,IAAAmB,EACqBP,EAAOC,QAA1CnI,EADcyI,EACdzI,MAAOrB,EADO8J,EACP9J,MAAOwB,EADAsI,EACAtI,OAAQD,EADRuI,EACQvI,SAExBwI,EAAaH,MAAMC,KAAKJ,EAAUvI,SAGxC,OAFA6I,EAAW1I,GAAS,CAAErB,QAAOwB,SAAQD,YAE9B7B,OAAA0E,EAAA,EAAA1E,CAAA,GAAK+J,EAAZ,CAAuBvI,QAAS6I,IAElC,KAAKnB,EAAkB,IAAAoB,EACeT,EAAOC,QAAnCnI,EADa2I,EACb3I,MAAOL,EADMgJ,EACNhJ,MAAOiJ,EADDD,EACCC,UAEhBC,EAAUN,MAAMC,KAAKJ,EAAUtC,MAGrC,OAFA+C,EAAQ7I,GAAS,CAAEL,QAAOiJ,aAEnBvK,OAAA0E,EAAA,EAAA1E,CAAA,GAAK+J,EAAZ,CAAuBtC,KAAM+C,IAE/B,KAAKrB,EAAkB,IAAAsB,EACYZ,EAAOC,QAAhCnI,EADa8I,EACb9I,MAAOe,EADM+H,EACN/H,MAAOF,EADDiI,EACCjI,OAEhBkI,EAAWR,MAAMC,KAAKJ,EAAU/B,OAGtC,OAFA0C,EAAS/I,GAAS,CAAEe,QAAOF,UAEpBxC,OAAA0E,EAAA,EAAA1E,CAAA,GAAK+J,EAAZ,CAAuB/B,MAAO0C,IAEhC,KAAKtB,EAEH,OADA3F,QAAQC,IAAImG,EAAOC,SACZ9J,OAAA0E,EAAA,EAAA1E,CAAA,GACF+J,EADL,CAEEpE,aAAa3F,OAAA0E,EAAA,EAAA1E,CAAA,CAAGwI,SAAS,GAASqB,EAAOC,WAG7C,QACE,OAAOC,IElDXzD,KDHa,WAAkC,IAAjChG,EAAiCoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBZ,GAAce,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOzG,MACb,KAAKiG,GACH,OAAOrJ,OAAA0E,EAAA,EAAA1E,CAAA,GACFM,EADL,CAEE2F,GAAI4D,EAAOC,UAGf,KAAKR,GACH,OAAOtJ,OAAA0E,EAAA,EAAA1E,CAAA,GACFM,EADL,CAEE6F,KAAM0D,EAAOC,UAGjB,QACE,OAAOxJ,sDENPqK,GAAc,yBACpBlH,QAAQC,IAAIiH,IAsDGhE,OApDf,SAAaiE,GACX,IAAMC,EAASC,KAAeH,IAExBI,EAAe,CACnB1C,MAAOW,oBACPV,OAAQW,qBACRV,MAAOY,oBACP7H,MAAO4H,oBACPvD,aAAcyD,sBACdnD,GAAIoD,cACJlD,KAAMmD,iBAVU0B,EAAA,SAaTC,GACPJ,EAAOK,GAAGD,EAAS,SAAAnB,GACjBrG,QAAQC,IAAIuH,GACZL,EAAMO,SAAS,CAAE/H,KAAM2H,EAAaE,GAAUnB,eAHlD,IAAK,IAAImB,KAAWF,EAAcC,EAAzBC,GAoCT,OA7BAG,KACGC,IAAIV,GAAc,WAClB9D,KAAK,SAAA/E,GACJ2B,QAAQC,IAAI,cACZkH,EAAMO,SAAS,CAAE/H,KAAMwF,kBAAgBkB,QAAShI,EAAOmD,SAExDqG,MAAM,SAAAC,GAAG,OAAI9H,QAAQC,IAAIiH,GAAc,UAAWY,KAErDH,KAAMC,IAAIV,GAAc,WAAW9D,KAAK,SAAA/E,GACtC2B,QAAQC,IAAI,cACZkH,EAAMO,SAAS,CAAE/H,KAAM2F,kBAAgBe,QAAShI,EAAOmD,SAmBlD,CAAE8C,WAhBT,SAAoBpG,GAClBkJ,EAAOW,KAAK,aAAc7J,IAePkG,YAZrB,SAAqBlG,GACnBkJ,EAAOW,KAAK,cAAe7J,IAWKiF,OARlC,WACE,OAAOwE,KAAMC,IAAIV,GAAc,YAOSc,aAJ1C,WACE,OAAOL,KAAMC,IAAIV,GAAc,eCrDfe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sECPAlB,GAAQmB,YAAYC,IAE1BC,IAASC,OACP3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CAAUvB,MAAOA,IACfrK,EAAAC,EAAAC,cAAC2L,EAAD,CAAKzF,IAAKA,GAAIiE,OAEhByB,SAASC,eAAe,SD4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5F,KAAK,SAAA6F,GACjCA,EAAaC,mCE/HnBC,EAAAC,QAAiBC,EAAAC,EAAuB,iHCoBxCH,EAAOC,QApBP,SAA4BG,GAC1B,IAAMlL,EAAS,GAIf,OAHAkL,EAAMC,QAAQ,SAAAC,GACZpL,EAAOoL,GAAQA,IAEVpL,EAeQqL,CAZG,CAClB,eACA,aACA,iBACA,iBACA,mBACA,oBACA,mBACA,mBACA","file":"static/js/main.9f4d540f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { push as Menu } from \"react-burger-menu\";\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-container\"}>\r\n        <span className=\"menu-item\">Access settings</span>\r\n        <span className=\"menu-item\">Reboot unit</span>\r\n        <span className=\"menu-item\">Upload data</span>\r\n        <span className=\"menu-item\">Shutdown unit</span>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst ComElement = props => {\r\n  return (\r\n    <div className=\"comElement\">\r\n      <div className=\"comElement--title\">\r\n        <div className=\"center\">\r\n          <FitText>\r\n            <div>{props.name}</div>\r\n          </FitText>\r\n          <FitText compressor={2}>\r\n            <div>{props.average && `Average ${props.entries}`}</div>\r\n          </FitText>\r\n        </div>\r\n      </div>\r\n      <div className=\"comElement--content\">\r\n        <FitText>\r\n          <div className=\"center\">{props.entry}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComElement;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nclass OutputList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttonList\">\r\n        <div className=\"buttonList--title\">\r\n          <div className=\"center-vertical\">uitgangen voor poorten</div>\r\n        </div>\r\n        {this.props.outputs.map((port, index) => {\r\n          let indicator = \"buttonList--list--indicator--output\";\r\n          if (port.isForced) indicator += \"Forced\";\r\n\r\n          if (port.state) {\r\n            indicator += \"On\";\r\n          } else if (port.result && !port.isForced) {\r\n            indicator += \"Execute\";\r\n          } else {\r\n            indicator += \"Off\";\r\n          }\r\n\r\n          return (\r\n            <div\r\n              className=\"buttonList--list--item\"\r\n              onClick={() => this.props.clickFunction(index)}\r\n            >\r\n              <div className=\"center-vertical\"> {port.name}</div>\r\n              <div className={\"buttonList--list--indicator \" + indicator} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutputList;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ports: [\r\n        { state: false, forced: false, name: \"blokkering\" },\r\n        { state: false, forced: false, name: \"ingang 1\" },\r\n        { state: false, forced: false, name: \"ingang 2\" },\r\n        { state: false, forced: false, name: \"ingang 2\" },\r\n        { state: false, forced: false, name: \"opslaan\" }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"buttonList inputList\">\r\n        <div className=\"buttonList--title\">\r\n          <div className=\"center-vertical\">ingangen</div>\r\n        </div>\r\n        {this.props.inputs.map((port, index) => {\r\n          let indicator = \"buttonList--list--indicator--input\";\r\n          if (port.isForced) indicator += \"Forced\";\r\n\r\n          indicator += port.state ? \"On\" : \"Off\";\r\n\r\n          return (\r\n            <div\r\n              className=\"buttonList--list--item\"\r\n              onClick={() => this.props.clickFunction(index)}\r\n            >\r\n              <div className=\"center-vertical\"> {port.name}</div>\r\n              <div className={\"buttonList--list--indicator \" + indicator} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputList;\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  let content;\r\n  if (props.manual) {\r\n    if (true) {\r\n      content = (\r\n        <>\r\n          <button className=\"leftButton\">-</button>\r\n          <input className=\"numeric\" />\r\n          <button className=\"rightButton\">+</button>\r\n        </>\r\n      );\r\n    }\r\n  } else {\r\n    content = props.value;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableCell\" onClick={props.openLog}>\r\n      <div className=\"tableCell--title\">\r\n        <FitText>\r\n          <div className=\"center\">{props.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.4}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      console.log(props);\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { modalIsOpen: false };\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({ modalIsOpen: true });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--indicator--inProgress\",\r\n      \"selfLearning--indicator--success\",\r\n      \"selfLearning--indicator--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      console.log(this.props.individualEntries[key]);\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <div>SL: Ind COM0</div>\r\n          <div className=\"selfLearning--modal\">\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <div className=\"selfLearning\" onClick={this.openModal}>\r\n          <div className=\"selfLearning--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Self Learning</div>\r\n              </FitText>\r\n              <div\r\n                className={\r\n                  \"center-vertical selfLearning--indicator \" +\r\n                  indicators[this.props.success]\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"selfLearning--content\">\r\n            {this.props.individual ? (\r\n              <div className=\"center-vertical\">\r\n                {this.props.calibration} ±{\" \"}\r\n                {(this.props.tolerance * 100).toFixed(1)} %\r\n              </div>\r\n            ) : (\r\n              <div className=\"center-vertical\">\r\n                {this.props.calibration} ±{\" \"}\r\n                {(this.props.matchedTolerance * 100).toFixed(1)} %\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return { ...state.internal.selfLearning };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"infobar\">\r\n        <div className=\"infobar--item\">\r\n          <FitText compressor={4}>\r\n            <div className=\"center\">\r\n              {this.props.name} | {this.props.ip} |\r\n              {moment(this.props.time).format(\" HH:mm:ss | MMMM Do YYYY\")}\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    name: state.static.name,\r\n    ip: state.misc.ip,\r\n    time: state.misc.time\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport ComElement from \"./ComElement\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport TableCell from \"./TableCell\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      uniqueLogEntries: [],\r\n      logTableColumns: []\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true, logModalUnique: false });\r\n    this.props.api.getLog().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend.map((name, index) => ({\r\n          Header: name,\r\n          accessor: index + \"\",\r\n          width: 70\r\n        })),\r\n        logEntries: result.data.entries\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div>Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\" className=\"main\">\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log Modal\"\r\n        >\r\n          <div>SL: Ind COM0</div>\r\n          <div className=\"main--logModal\">\r\n            <div>\r\n              <div className=\"main--logModal--title\">\r\n                {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}{\" \"}\r\n              </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={\r\n                  this.state.logModalUnique\r\n                    ? this.state.uniqueLogEntries\r\n                    : this.state.logEntries\r\n                }\r\n                columns={this.state.logTableColumns}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <Infobar />\r\n        <div className=\"logos\">\r\n          <Logo image={MBDC} alt={\"MBDC\"} />\r\n          {this.props.selfLearningEnabled && <SelfLearning />}\r\n        </div>\r\n        <div className=\"coms\">\r\n          {this.props.coms.map(com => {\r\n            return (\r\n              <ComElement\r\n                name={com.name}\r\n                entry={com.entry}\r\n                time={com.time}\r\n                average={com.average}\r\n                entries={com.entries}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"ports\">\r\n          <OutputList\r\n            outputs={this.props.outputs}\r\n            clickFunction={this.props.api.forceOutput}\r\n          />\r\n          <InputList\r\n            inputs={this.props.inputs}\r\n            clickFunction={this.props.api.forceInput}\r\n          />\r\n        </div>\r\n        <div className=\"table\">\r\n          {this.props.cells.map(cell => (\r\n            <TableCell\r\n              name={cell.name}\r\n              value={cell.value}\r\n              manual={cell.manual}\r\n              openLog={this.openLogModal}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  const selfLearningEnabled = state.internal.selfLearning.enabled;\r\n\r\n  return {\r\n    loaded: true,\r\n    coms,\r\n    inputs,\r\n    outputs,\r\n    cells,\r\n    selfLearningEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const { RECEIVE_CONFIG } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  }\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      newComs[index] = { entry, entryTime };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      console.log(action.payload);\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime()\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC\r\n} from \"./actions/types\";\r\n\r\n//const APIendPoint = \"http://\" + window.location.hostname + \":80\";\r\nconst APIendPoint = \"http://192.168.1.67:80\";\r\nconsole.log(APIendPoint);\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient(APIendPoint);\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      console.log(message);\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  axios\r\n    .get(APIendPoint + \"/config\")\r\n    .then(result => {\r\n      console.log(\"Got config\");\r\n      store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n    })\r\n    .catch(err => console.log(APIendPoint + \"/config\", err));\r\n\r\n  axios.get(APIendPoint + \"/static\").then(result => {\r\n    console.log(\"Got static\");\r\n    store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n  });\r\n\r\n  function forceInput(index) {\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(APIendPoint + \"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(APIendPoint + \"/comlogu\");\r\n  }\r\n\r\n  return { forceInput, forceOutput, getLog, getUniqueLog };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n"],"sourceRoot":""}