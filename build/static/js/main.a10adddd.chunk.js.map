{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","api","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","options","console","log","option","onClick","splice","changeConfig","onChange","e","concat","target","numeric","event","entries","entry","min","max","step","checked","getColumnWidth","rows","accessor","cellLength","Math","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","onclick","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","window","confirm","reboot","exposeShutdown","shutdown","QS","href","Component","connect","loaded","static","locked","misc","logger","writeToFile","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","i","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","tableCell--notFound","notFound","openModal","table","cells","normal","date","manual","menu","includes","resetOnExe","colorConditions","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","endsWith","individualTolerance","individualToleranceIncrement","individualToleranceLimit","individualColors","textColors","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","rounding","generalTableColumns","Header","toFixed","style","textAlign","val","deleteGeneralSL","Cell","original","individualTableColumns","calibration","backgroundColor","increments","color","deleteIndividualSL","individualEntries","generalEntries","push","react_table_es","data","columns","round","individual","success","matchedTolerance","Logo","src","image","alt","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetValue","FTP","automatic","targets","folder","username","password","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","configList","deleteConfig","loadConfig","downloadConfig","click","versionName","files","version","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","openMenu","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","OPEN_MENU","CLOSE_MENU","RECEIVE_CONFIG_LIST","Date","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","toConsumableArray","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","getState","forEach","document","toggleMenu","newConfig","stringify","_ref","location","reload","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a10adddd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, api, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(\r\n            element,\r\n            config,\r\n            api,\r\n            index,\r\n            name + \"[\" + index + \"]\"\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                api,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n        console.log(options);\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    api.changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                      numeric: true\r\n                    });\r\n                  }}\r\n                  value={option.key}\r\n                />\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                api.changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  api.changeConfig(name, event.target.checked);\r\n                } else {\r\n                  api.changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.api.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"button\" value=\"Import .xls\" onclick={() => {}} />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.closeMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>\r\n\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openUploadModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n            onClick={\r\n              this.props.configLocked\r\n                ? () => !com.average && this.toggleShowHistory(com.index)\r\n                : () => this.openConfigModal(com.index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const { menuOptions } = cell;\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) + 1;\r\n\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"data\"].includes(config.table.cells[index].type)\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type !== \"menu\"\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"text\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config =>\r\n        config.selfLearning.enabled !== \"off\" &&\r\n        !config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    }\r\n  }\r\n};\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.entries[0].toFixed(rounding),\r\n        id: 10,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => {\r\n          const val = row.entries[1];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 2,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => {\r\n          const val = row.entries[2];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 3,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => {\r\n          const val = row.entries[3];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => {\r\n          const val = row.entries[4];\r\n          return val ? val.toFixed(rounding) : \"\";\r\n        },\r\n        id: 5,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.calibration.toFixed(rounding),\r\n        style: { textAlign: \"center\" },\r\n        width: 70,\r\n        id: 12\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[props.original.increments],\r\n                color: textColors[props.original.increments]\r\n              }}\r\n            >\r\n              {props.value}\r\n            </div>\r\n          );\r\n        },\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle\r\n            checked={this.state.showIndividualTable}\r\n            onChange={this.toggleIndividualTable}\r\n          />\r\n          Show individual entries\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n            <ReactTable\r\n              style={{ textAlign: \"center\" }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          {this.state.SLModalIsOpen && this.getSLModalContent()}\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config, individual };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: config => config.logger.resetMode === \"time\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    },\r\n    targets: [1, 2].map(index => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\"\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\"\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\"\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\"\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\"\r\n      }\r\n    }))\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.uploadRef.parentElement.submit();\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.openMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function openMenu() {\r\n    store.dispatch({ type: OPEN_MENU });\r\n  }\r\n\r\n  function closeMenu() {\r\n    store.dispatch({ type: CLOSE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      socket.emit(\"configExists\", name, ({ result, name }) => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(address, value, options) {\r\n    if (options && options.numeric) {\r\n      value = Number(value);\r\n    }\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}