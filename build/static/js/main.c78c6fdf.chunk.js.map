{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/modals/SelfLearningModal.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","api","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","oldName","className","contents","configuration","location","structure","defaultStruct","defaults","onClick","splice","changeConfig","concat","options","keyOptions","option","onChange","e","target","entries","entry","numeric","event","min","max","step","checked","rounding","round","num","digits","factor","Math","pow","getColumnWidth","rows","accessor","cellLength","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","uploadLog","log","window","confirm","deleteLog","downloadAllLogs","deleteAllLogs","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","contentLabel","id","action","method","enctype","accept","logList","downloadLog","ftpTargets","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","getLogList","reboot","exposeShutdown","shutdown","QS","Component","connect","loaded","static","locked","misc","logger","writeToFile","FTP","targets","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","i","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","seconds","manualConfirmation","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","style","backgroundColor","color","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","#3fd35d","yellow","#ffc000","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","individualColors","textColors","SelfLearningModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","extraColumns","selfLearning","column","Header","title","extra","Cell","console","toFixed","dateFormat","textAlign","generalTableColumns","toConsumableArray","deleteGeneralSL","original","individualTableColumns","increments","numUpdatesHistory","deleteIndividualSL","individualEntries","generalEntries","push","resetIndividualSL","react_table_es","data","columns","onClose","individual","tableExtraColumnTitle","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","isUndefined","enabled","off","com0ind","com1ind","endsWith","LogID","startCalibration","totalNumber","numberPercentage","tolerance","startTolerance","important","resetSL","resetSLData","downloadExcel","logID","individualToleranceAbs","individualTolerance","individualCorrectionIncrement","individualCorrectionLimit","excelIndividualColumn","charCodeAt","excelDateColumn","excelExitColumn","uploadExcelTemplate","firstTopFormula","secondTopFormula","topFormula","text","number","generalVisible","calibration","success","matchedTolerance","modals_SelfLearningModal","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","unique","resetMode","time","interval","resetTime","resetInterval","automatic","folder","username","password","configList","deleteConfig","loadConfig","downloadConfig","click","file","files","versionName","version","configExists","then","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","logTableColumns","legend","accessors","uniqueLogEnabled","logEntries","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","fontSize","components_Infobar","components_Logo","openMenu","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","formulaResults","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","OPEN_MENU","CLOSE_MENU","RECEIVE_CONFIG_LIST","RECEIVE_LOG_LIST","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","_action$payload4","newCells","_action$payload5","store","socket","socketIOClient","messageTypes","tableColor","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","Promise","resolve","_ref","getState","forEach","document","toggleMenu","newConfig","stringify","consistent","reload","href","msg","fileList","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"mgBAEA,SAASA,EAAIC,EAAQC,GAEnB,IAAMC,GADND,EAAUA,EAAQE,QAAQ,OAAQ,KACZC,MAAM,QAE5B,GAAqB,IAAjBF,EAAMG,OACR,OAAOL,EAAOE,EAAM,IACf,GAAmB,MAAfD,EAAQ,GAAY,CAC7B,IAAMK,EAAQL,EAAQM,MAAM,cAAc,GAAGC,MAAM,GAAI,GACjDC,EAAaR,EAAQO,MAAMF,EAAMD,OAAS,GAEhD,OAAKI,EAEEV,EAAIC,EAAOU,OAAOJ,IAASG,GAFVT,EAAOU,OAAOJ,IAItC,IAAMG,EAAaR,EAAQO,MAAMN,EAAM,GAAGG,QAC1C,OAAON,EAAIC,EAAOE,EAAM,IAAKO,GAIjC,SAASE,EAAIX,EAAQC,EAASW,GAE5B,IAAMV,GADND,EAAUA,EAAQE,QAAQ,OAAQ,KACZC,MAAM,QAE5B,GAAqB,IAAjBF,EAAMG,OACRL,EAAOE,EAAM,IAAMU,OACd,GAAmB,MAAfX,EAAQ,GAAY,CAC7B,IAAMK,EAAQL,EAAQM,MAAM,cAAc,GAAGC,MAAM,GAAI,GACjDC,EAAaR,EAAQO,MAAMF,EAAMD,OAAS,GAE3CI,EAGHE,EAAIX,EAAOU,OAAOJ,IAASG,EAAYG,GAFvCZ,EAAOU,OAAOJ,IAAUM,MAIrB,CACL,IAAMH,EAAaR,EAAQO,MAAMN,EAAM,GAAGG,QAC1CM,EAAIX,EAAOE,EAAM,IAAKO,EAAYG,IAItC,SAASC,EAASC,EAAOC,EAAQC,EAAKV,GAAkB,IAAXW,EAAWC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAClD,GAA0B,qBAAfJ,EAAMM,MAA8C,kBAAfN,EAAMM,KACpD,OAAIC,MAAMC,QAAQR,GACK,IAAjBA,EAAMT,OAENC,GAAS,GACPiB,EAAAC,EAAAC,cAAA,OAAKR,KAAMA,GACRS,OAAOC,KAAKb,EAAM,IAAIc,IAAI,SAAAC,GAAG,OAC5BhB,EACEC,EAAM,GAAGe,GACTd,EACAC,EACAV,EACAW,EAAO,IAAMX,EAAQ,KAAOuB,MAO/Bf,EAAMc,IAAI,SAACE,EAASxB,GACzB,OAAOO,EACLiB,EACAf,EACAC,EACAV,EACAW,EAAO,IAAMX,EAAQ,OAMzBiB,EAAAC,EAAAC,cAAA,OAAKI,IAAKZ,EAAMA,KAAMA,GACnBS,OAAOC,KAAKb,GACViB,OAAO,SAAAF,GACiBf,EAAMe,GAArBG,WACR,OAEO,IAERJ,IAAI,SAAAC,GAAG,OACNhB,EACEC,EAAMe,GACNd,EACAC,EACAV,EACAW,GAAQA,EAAO,IAAM,IAAMY,MAOvC,IAAIf,EAAMmB,WAAcnB,EAAMmB,UAAUlB,EAAQT,GAEhD,OAAQQ,EAAMM,MACZ,IAAK,QACH,OAAOG,EAAAC,EAAAC,cAAA,MAAII,IAAKf,EAAMG,MAAOH,EAAMG,MAErC,IAAK,WACH,OACEM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACEX,EAAAC,EAAAC,cAAA,KAAGI,IAAKf,EAAMG,MAAOH,EAAMG,MAC3BM,EAAAC,EAAAC,cAAA,YAIN,IAAK,WACH,IAAMU,EAAUlB,EAAKd,QAAQ,SAAU,IACvC,OACEoB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACZvB,EAASC,EAAMuB,SAAUtB,EAAQC,EAAKV,EAAO6B,IAIpD,IAAK,cACH,IAAMA,EAAUlB,EAAKd,QAAQ,SAAU,IACvC,OAAOU,EAASC,EAAMuB,SAAUtB,EAAQC,EAAKV,EAAO6B,GAEtD,IAAK,WACH,OAAOtB,EACLC,EAAMwB,cACNvB,EACAC,EACAV,EACAQ,EAAMyB,UAGV,IAAK,cACH,IAAMF,EAAWtC,EAAIgB,EAAQE,IAAS,GAChCuB,EAAY1B,EAAM0B,UAClBC,EAAgB3B,EAAM4B,SAC5B,OACEnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACGpB,EAAMG,KADT,IAEEM,EAAAC,EAAAC,cAAA,WACCY,EAAST,IAAI,SAACE,EAASxB,GAAV,OACZiB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAf,IACI9B,EAAQ,EACViB,EAAAC,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,IACN6B,QAAS,WACPN,EAASO,OAAOtC,EAAO,GACvBU,EAAI6B,aAAa5B,EAAMoB,MAG1BxB,EACC2B,EACAzB,EACAC,EACAV,EACAW,EAAO,IAAMX,EAAQ,QAI3BiB,EAAAC,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,IACN6B,QAAS,WACP3B,EAAI6B,aAAa5B,EAAMoB,EAASS,OAAOL,QAMjD,IAAK,WACH,IAAMM,EAAUhD,EAAIgB,EAAQE,IAAS,GAE/B+B,EAAalC,EAAMiC,QACzB,OACExB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACGpB,EAAMG,KADT,IAEEM,EAAAC,EAAAC,cAAA,WACCsB,EAAQnB,IAAI,SAACqB,EAAQ3C,GAAT,OACXiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACEX,EAAAC,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,IACN6B,QAAS,WACPI,EAAQH,OAAOtC,EAAO,GACtBU,EAAI6B,aAAa5B,EAAM8B,MAG3BxB,EAAAC,EAAAC,cAAA,SACEL,KAAK,OACL8B,SAAU,SAAAC,GACRnC,EAAI6B,aAAJ,GAAAC,OAAoB7B,EAApB,KAAA6B,OAA4BxC,EAA5B,WAA4C6C,EAAEC,OAAOtC,QAEvDA,MAAOmC,EAAOnC,QAEfkC,EACCzB,EAAAC,EAAAC,cAAA,UACEX,MAAOmC,EAAOpB,IACdqB,SAAU,SAAAC,GACRnC,EAAI6B,aAAJ,GAAAC,OAAoB7B,EAApB,KAAA6B,OAA4BxC,EAA5B,SAA0C6C,EAAEC,OAAOtC,SAGpDY,OAAO2B,QAAQL,GACbF,OAAO,CAAC,CAAC,GAAI,MACblB,IAAI,SAAA0B,GAAK,OACR/B,EAAAC,EAAAC,cAAA,UAAQX,MAAOwC,EAAM,IAAKA,EAAM,OAItC/B,EAAAC,EAAAC,cAAA,SACEL,KAAK,SACL8B,SAAU,SAAAC,GACRnC,EAAI6B,aAAJ,GAAAC,OACK7B,EADL,KAAA6B,OACaxC,EADb,SAEE6C,EAAEC,OAAOtC,MACT,CACEyC,SAAS,KAIfzC,MAAOmC,EAAOpB,MAIlBN,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,IACN6B,QAAS,WACP3B,EAAI6B,aAAa5B,EAAM8B,EAAQD,OAAO,CAAEjB,IAAK,GAAIf,MAAO,SAG5DS,EAAAC,EAAAC,cAAA,YAIN,IAAK,SACH,OACEF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACEX,EAAAC,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAOA,EAAMG,KACbmB,UAAU,wBACVO,QAAS7B,EAAM6B,UAEjBpB,EAAAC,EAAAC,cAAA,YAIN,IAAK,SACH,OACEF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACGpB,EAAMG,KADT,IAEEM,EAAAC,EAAAC,cAAA,UACEX,MAAOf,EAAIgB,EAAQE,GACnBiC,SAAU,SAAAM,GACRxC,EAAI6B,aAAa5B,EAAMuC,EAAMJ,OAAOtC,MAAO,CACzCyC,QAASzC,EAAMyC,YAIlB7B,OAAO2B,QAAQvC,EAAMiC,SAASnB,IAAI,SAAC0B,EAAOhD,GAAR,OACjCiB,EAAAC,EAAAC,cAAA,UAAQI,IAAKvB,EAAOQ,MAAOwC,EAAM,IAC9BA,EAAM,OAIb/B,EAAAC,EAAAC,cAAA,YAIN,QACE,OACEF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACGpB,EAAMG,KADT,IAEEM,EAAAC,EAAAC,cAAA,SACEL,KAAMN,EAAMM,KACZqC,IAAK3C,EAAM2C,IACXC,IAAK5C,EAAM4C,IACXC,KAAM7C,EAAM6C,KACZC,QAAS7D,EAAIgB,EAAQE,GACrBH,MACEA,EAAM+C,SACFC,EAAM/D,EAAIgB,EAAQE,GAAOH,EAAM+C,UAC/B9D,EAAIgB,EAAQE,GAElBiC,SAAU,SAAAM,GACkB,aAAtBA,EAAMJ,OAAOhC,KACfJ,EAAI6B,aAAa5B,EAAMuC,EAAMJ,OAAOQ,SAEpC5C,EAAI6B,aAAa5B,EAAMuC,EAAMJ,OAAOtC,MAAO,CACzCyC,QAAwB,WAAfzC,EAAMM,UAKvBG,EAAAC,EAAAC,cAAA,aAQZ,SAASqC,EAAMC,EAAKC,GAClB,IAAMC,EAASC,KAAKC,IAAI,GAAIH,GAC5B,OAAOE,KAAKJ,MAAMC,EAAME,GAAUA,EAGpC,IAAMG,EAAiB,SAACC,EAAMC,GAC5B,IAGMC,EAAaL,KAAKR,IAALc,MAAAN,KAAIxC,OAAA+C,EAAA,EAAA/C,CAClB2C,EAAKzC,IAAI,SAAA8C,GAAG,OAAK,GAAA5B,OAAG/C,EAAI2E,EAAKJ,KAAe,IAAIjE,WAGrD,OAAO6D,KAAKR,IANK,GAMSQ,KAAKT,IAPd,IAEI,GAKwBc,KAGzCI,EAAa,SAAAC,GACjB,OAAO,IAAIC,KAA4B,OAAtBD,EAAI,OAA0B,iPCzT3CE,sBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAJ,IACjBE,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAoD,GAAAO,KAAAH,KAAMH,KAIRO,iBAAmB,WACZN,EAAKD,MAAMQ,aAEZP,EAAKD,MAAMS,aACbR,EAAKD,MAAM/D,IAAIyE,eAEfT,EAAKD,MAAM/D,IAAI0E,eAXAV,EAenBW,gBAAkB,WAChBX,EAAKY,SAAS,CAAEC,mBAAmB,IACnCb,EAAKD,MAAM/D,IAAI8E,aAjBEd,EAoBnBe,iBAAmB,WACjBf,EAAKY,SAAS,CAAEC,mBAAmB,KArBlBb,EAwBnBgB,aAAe,WACbhB,EAAKY,SAAS,CAAEK,gBAAgB,IAChCjB,EAAKD,MAAM/D,IAAI8E,aA1BEd,EA6BnBkB,cAAgB,WACdlB,EAAKY,SAAS,CAAEK,gBAAgB,KA9BfjB,EAiCnBmB,UAAY,SAACC,EAAK9F,GACZ+F,OAAOC,QAAQ,gCAAkCF,EAAM,MACzDpB,EAAKD,MAAM/D,IAAImF,UAAUC,EAAK9F,IAnCf0E,EAuCnBuB,UAAY,SAAAH,GACNC,OAAOC,QAAQ,gCAAkCF,EAAM,MACzDpB,EAAKD,MAAM/D,IAAIuF,UAAUH,IAzCVpB,EA6CnBwB,gBAAkB,WACZH,OAAOC,QAAQ,6CACjBtB,EAAKD,MAAM/D,IAAIwF,mBA/CAxB,EAmDnByB,cAAgB,WACVJ,OAAOC,QAAQ,2CACjBtB,EAAKD,MAAM/D,IAAIyF,iBAnDjBzB,EAAK0B,MAAQ,CAAEb,mBAAmB,EAAOI,gBAAgB,GAFxCjB,wEAyDV,IAAA2B,EAAAzB,KACDY,EAAYZ,KAAKH,MAAM/D,IAAI8E,UACjC,OACEc,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMb,kBACnBkB,eAAgB7B,KAAKa,iBACrBiB,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,qBAEbL,EAAApF,EAAAC,cAAA,kCACAmF,EAAApF,EAAAC,cAAA,QACEyF,GAAG,aACHC,OAAO,aACPC,OAAO,OACPC,QAAQ,uBAERT,EAAApF,EAAAC,cAAA,SAAOL,KAAK,SAASN,MAAM,gBAC3B8F,EAAApF,EAAAC,cAAA,SAAOL,KAAK,OAAOH,KAAK,aAAaqG,OAAO,WAGhDV,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMT,eACnBc,eAAgB7B,KAAKgB,cACrBc,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,mBAEbL,EAAApF,EAAAC,cAAA,2CACAmF,EAAApF,EAAAC,cAAA,QAAMW,UAAU,WACb8C,KAAKH,MAAMwC,QAAQ3F,IAAI,SAAAwE,GAAG,OACzBQ,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACGkE,EACDQ,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,SACN6B,QAAS,WACPgE,EAAKJ,UAAUH,MAGnBQ,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,WACN6B,QAAS,WACPgE,EAAK5B,MAAM/D,IAAIwG,YAAYpB,MAG9BO,EAAK5B,MAAM0C,WAAW7F,IAAI,SAACwB,EAAQ9C,GAClC,OAAI8C,EAAOnD,QAEP2G,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAK,OAAAgC,OAASxC,EAAQ,GACtBqC,QAAS,WACPgE,EAAKR,UAAUC,EAAK9F,MAIrB,OAETsG,EAAApF,EAAAC,cAAA,cAGJmF,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,SACN6B,QAAS,WACPgE,EAAKF,mBAGTG,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,WACN6B,QAAS,WACPgE,EAAKH,uBAKbI,EAAApF,EAAAC,cAACiG,EAAA,MAAD,CACEC,OAAK,EACLC,kBAAkB,EAClBC,WAAW,YACXC,iBAAiB,kBACjBhB,OAAQ5B,KAAKH,MAAMQ,WACnBwC,cAAe,SAAAC,GAAQ,OACpBA,EAASlB,QAAUH,EAAK5B,MAAM/D,IAAI8E,aAErCmC,MAAO,KAEPrB,EAAApF,EAAAC,cAAA,QAAMW,UAAU,kCACdwE,EAAApF,EAAAC,cAAA,QACEkB,QAAS,WACPmD,IACAa,EAAKrB,qBAHT,mBAOQ,IACRsB,EAAApF,EAAAC,cAACyG,EAAA1G,EAAD,CACEoC,SAAUsB,KAAKH,MAAMS,aACrBtC,SAAU,WACR4C,IACAa,EAAKrB,uBAIVJ,KAAKH,MAAMoD,WAAajD,KAAKH,MAAMqD,cAClCxB,EAAApF,EAAAC,cAAA,QACEW,UAAU,iCACVO,QAAS,WACPgE,EAAK5B,MAAM/D,IAAIqH,aACf1B,EAAKX,eACLF,MALJ,aAWDZ,KAAKH,MAAMqD,cACVxB,EAAApF,EAAAC,cAAA,QACEW,UAAU,iCACVO,QAAS,WACPgE,EAAKhB,kBACLG,MAJJ,gBAUFc,EAAApF,EAAAC,cAAA,QACEW,UAAU,iCACVO,QAAS,WACH0D,OAAOC,QAAQ,qCACjBK,EAAK5B,MAAM/D,IAAIsH,SAEjBxC,MANJ,eAWCZ,KAAKH,MAAMwD,gBACV3B,EAAApF,EAAAC,cAAA,QACEW,UAAU,iCACVO,QAAS,WACH0D,OAAOC,QAAQ,uCACjBK,EAAK5B,MAAM/D,IAAIwH,WACjB1C,MALJ,iBAWFc,EAAApF,EAAAC,cAAA,QAAMW,UAAU,aAAhB,YAAsC8C,KAAKH,MAAM0D,aApNrCC,cAmPPC,kBAxBf,SAAyBjC,GACvB,OAAKA,EAAM3F,OAAO6H,QAAWlC,EAAMmC,OAAOD,OAWnC,CACLpD,aAAckB,EAAM3F,OAAO+H,OAC3BvD,WAAYmB,EAAMqC,KAAKxD,WACvBkD,GAAI/B,EAAMmC,OAAOJ,GACjBN,UAAWzB,EAAM3F,OAAOiI,OAAOC,YAC/Bb,aAAc1B,EAAMmC,OAAOT,aAC3BG,eAAgB7B,EAAMmC,OAAON,eAC7BhB,QAASb,EAAMqC,KAAKxB,QACpBE,WAAYf,EAAM3F,OAAOmI,IAAIC,SAlBtB,CACL3D,cAAc,EACdD,YAAY,EACZkD,GAAI,OACJN,WAAW,EACXC,cAAc,EACdG,gBAAgB,EAChBhB,QAAS,KAeAoB,CAAyB7D,2DClPlCsE,UAAsB,CAC1BC,OAAQ,CACNC,KAAM,CACJ,CACEC,KAAM,CACJtI,KAAM,OACNG,KAAM,SACN2B,QAAS,CACPsG,OAAQ,SACRG,OAAQ,SACRC,KAAM,SAGVC,YAAa,CACXzI,KAAM,aACNG,KAAM,OACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,SAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BI,WAAY,CACV1I,KAAM,OACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BK,SAAU,CACR3I,KAAM,WACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BM,SAAU,CACR5I,KAAM,sBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BO,KAAM,CACJ7I,KAAM,sBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BQ,OAAQ,CACN9I,KAAM,iBACNG,KAAM,SACN2B,QAAS,CACPiH,KAAM,OACNC,KAAM,OACNC,IAAK,MACLC,KAAM,OACNC,MAAO,SAETnI,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9Bc,OAAQ,CACNpJ,KAAM,UACNG,KAAM,WACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9Be,QAAS,CACPrJ,KAAM,WACNG,KAAM,WACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BtI,KAAM,CACJA,KAAM,eACNG,KAAM,QAERiC,QAAS,CACPpC,KAAM,oBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAERJ,QAAS,CACPtC,KAAM,wBACNG,KAAM,YAERmJ,QAAS,CACPtJ,KAAM,eACNG,KAAM,YAER6C,OAAQ,CACNhD,KAAM,SACNG,KAAM,UAER4C,OAAQ,CACN/C,KAAM,kBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER6G,eAAgB,CACdvJ,KAAM,kBACNG,KAAM,YAERqJ,aAAc,CACZxJ,KAAM,sBACNG,KAAM,YAERsJ,QAAS,CACPzJ,KAAM,qBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAERgH,OAAQ,CACN1J,KAAM,SACNG,KAAM,OACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,OAE9BqB,QAAS,CACP3J,KAAM,SACNG,KAAM,OACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOsI,OAAOC,KAAKhJ,GAAOiJ,YAOhCsB,cACJ,SAAAA,EAAY9F,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA2F,IACjB7F,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAmJ,GAAAxF,KAAAH,KAAMH,KAQR+F,gBAAkB,SAAAxK,GAChB0E,EAAKY,SAAS,CAAEmF,mBAAmB,EAAMC,SAAU1K,KAVlC0E,EAanBiG,iBAAmB,WACjBjG,EAAKY,SAAS,CAAEmF,mBAAmB,KAdlB/F,EAiBnBkG,kBAAoB,SAAA5K,GAClB0E,EAAKY,SAAS,CACZuF,YAAanG,EAAK0B,MAAMyE,YAAYvJ,IAAI,SAACE,EAASsJ,GAAV,OACtCA,IAAM9K,GAASwB,EAAUA,OAlB7BkD,EAAK0B,MAAQ,CACXqE,mBAAmB,EACnBI,YAAapG,EAAMuE,KAAK1H,IAAI,SAAAE,GAAO,OAAI,IACvCkJ,UAAW,GALIhG,wEAyBV,IAAA2B,EAAAzB,KACDoE,EAAOpE,KAAKH,MAAMuE,KACrB1H,IAAI,SAACyJ,EAAK/K,GAAN,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,CAAmBpB,SAAU+K,KACjCtJ,OAAO,SAAAsJ,GAAG,OAAIA,EAAIpK,OAAS0F,EAAK5B,MAAMS,eAEzC,OACEoB,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMqE,kBACnBhE,eAAgB7B,KAAK+F,iBACrBjE,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,8BAEZ/B,KAAKwB,MAAMqE,mBACVnE,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAAA,kCAA0ByD,KAAKwB,MAAMsE,UACpCnK,mBACCuI,EACAlE,KAAKH,MAAMhE,OACXmE,KAAKH,MAAM/D,IACXkE,KAAKwB,MAAMsE,YAKlB1B,EAAK1H,IAAI,SAAAyJ,GAAG,OACXzE,EAAApF,EAAAC,cAAA,OACEI,IAAKwJ,EAAI/K,MACT8B,UAAWmJ,IAAW,aAAc,CAClCC,mBAAoC,IAAhBlC,EAAKjJ,UAG3BuG,EAAApF,EAAAC,cAAA,OACEW,UAAU,oBACVO,QAAS,WACFgE,EAAK5B,MAAMS,cAKX6F,EAAId,SAAWc,EAAIhI,QAAU,GAChCsD,EAAKuE,kBAAkBG,EAAI/K,OAL3BqG,EAAKmE,gBAAgBO,EAAI/K,SAU7BsG,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,KACEoF,EAAApF,EAAAC,cAAA,WAAM4J,EAAIpK,OAEZ2F,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,GACnB9E,EAAApF,EAAAC,cAAA,WAAM4J,EAAId,SAAJ,WAAAzH,OAA0BuI,EAAIhI,aAI1CuD,EAAApF,EAAAC,cAAA,OACEW,UAAWmJ,IAAW,sBAAuB,CAC3CI,gCAA8C,SAAbN,EAAI9B,QAGtC5C,EAAKD,MAAMyE,YAAYE,EAAI/K,QAAU+K,EAAIO,QACxChF,EAAApF,EAAAC,cAAA,OAAKW,UAAU,gCACZiJ,EAAIO,QACFpL,MAAM,EAAGmG,EAAK5B,MAAMhE,OAAOsI,OAAOC,KAAK+B,EAAI/K,OAAO+C,SAClDzB,IAAI,SAAAE,GAAO,OACV8E,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,WAAMK,EAAQ+J,YACdjF,EAAApF,EAAAC,cAAA,WAAMK,EAAQwB,WAKtBsD,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,IACnB9E,EAAApF,EAAAC,cAAA,WAAM4J,EAAI/H,qBArGRoF,aA8HPC,kBAbf,SAAyBjC,GAMvB,MAAO,CACL4C,KANW5C,EAAM3F,OAAOsI,OAAOC,KAAK1H,IAAI,SAACyJ,EAAK/K,GAAN,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,GACrC2J,EACA3E,EAAMoF,SAASxC,KAAKhJ,MAKvBkF,aAAckB,EAAM3F,OAAO+H,OAC3B/H,OAAQ2F,EAAM3F,SAIH4H,CAAyBkC,UCtQxCkB,IAAMC,cAAc,SAEpB,IAAM5C,EAAsB,CAC1B6C,OAAQ,CACNC,MAAO,CACL,CACEjL,KAAM,CACJA,KAAM,iBACNG,KAAM,QAER+K,QAAS,CACPlL,KAAM,qBACNG,KAAM,QAERgL,QAAS,CACPnL,KAAM,kBACNG,KAAM,YAERiL,QAAS,CACPpL,KAAM,qBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER2I,mBAAoB,CAClBrL,KAAM,+BACNG,KAAM,gBAOVmL,cACJ,SAAAA,EAAYxH,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAqH,IACjBvH,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA6K,GAAAlH,KAAAH,KAAMH,KAIR+F,gBAAkB,SAAAxK,GAChB0E,EAAKY,SAAS,CAAEmF,mBAAmB,EAAMyB,gBAAiBlM,KANzC0E,EASnBiG,iBAAmB,WACjBjG,EAAKY,SAAS,CAAEmF,mBAAmB,KARnC/F,EAAK0B,MAAQ,CAAEqE,mBAAmB,EAAOyB,iBAAkB,GAF1CxH,wEAaV,IAAA2B,EAAAzB,KACP,OACE0B,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMqE,kBACnBhE,eAAgB7B,KAAK+F,iBACrBjE,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,8BAEZ/B,KAAKwB,MAAMqE,mBACVnE,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAAA,sCAA8ByD,KAAKwB,MAAM8F,gBAAkB,GAC1D3L,mBACCuI,EACAlE,KAAKH,MAAMhE,OACXmE,KAAKH,MAAM/D,IACXkE,KAAKwB,MAAM8F,mBAKnB5F,EAAApF,EAAAC,cAAA,OAAKW,UAAU,cACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,qBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,KACEoF,EAAApF,EAAAC,cAAA,yBAILyD,KAAKH,MAAM0H,QACT7K,IAAI,SAAC8K,EAAMpM,GAAP,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,GAAuBgL,EAAvB,CAA6BpM,YACjCyB,OAAO,SAAC2K,EAAMpM,GACb,OACEqG,EAAK5B,MAAM4H,aAAarM,IACV,KAAdoM,EAAKzL,OACJ0F,EAAK5B,MAAMS,eAGf5D,IAAI,SAAA8K,GACH,IAAIE,EAAY,sCAWhB,OAVIF,EAAKG,WAAUD,GAAa,UAE5BF,EAAKhG,MACPkG,GAAa,KACJF,EAAKI,SAAWJ,EAAKG,SAC9BD,GAAa,UAEbA,GAAa,MAIbhG,EAAApF,EAAAC,cAAA,OACEI,IAAK6K,EAAKpM,MACV8B,UAAU,yBACVO,QACEgE,EAAK5B,MAAMS,aACP,kBAAMmB,EAAK5B,MAAM/D,IAAI+L,YAAYL,EAAKpM,QACtC,kBAAMqG,EAAKmE,gBAAgB4B,EAAKpM,SAGtCsG,EAAApF,EAAAC,cAAA,OAAKW,UAAW,+BAAiCwK,GAC/ChG,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,MACnB9E,EAAApF,EAAAC,cAAA,WAAMiL,EAAKzL,qBA9EVyH,aAgHVC,kBArBf,SAAyBjC,GAavB,MAAO,CACL+F,QAbc/F,EAAMoF,SAASW,QAAQ7K,IAAI,SAACqK,EAAQ3L,GAAT,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,GACtCuK,EADsC,CAEzChL,KAAMyF,EAAM3F,OAAOkL,OAAOC,MAAM5L,GAAOW,SAYvCuE,aATmBkB,EAAM3F,OAAO+H,OAUhC/H,OATa2F,EAAM3F,OAUnB4L,aARmBjG,EAAM3F,OAAOkL,OAAOC,MAAMtK,IAC7C,SAAA8K,GAAI,MAAqB,KAAjBA,EAAKP,YAWFxD,CAAyB4D,UCjJxCR,IAAMC,cAAc,SAEpB,IAAM5C,EAAsB,CAC1B4D,MAAO,CACLd,MAAO,CACL,CACEjL,KAAM,CACJA,KAAM,eACNG,KAAM,QAER+K,QAAS,CACPlL,KAAM,oBACNG,KAAM,SACN2B,QAAS,CACPkK,GAAI,GACJC,IAAK,UACLC,MAAO,gBACPC,MAAO,WACPC,QAAS,UACT7E,SAAU,WACV8E,QAAS,gBAGbC,WAAY,CACVtM,KAAM,sBACNG,KAAM,SACN2B,QAAS,CACPyK,KAAM,QACNC,KAAM,SAERxL,UAAW,SAAClB,EAAQT,GAAT,MAC6B,YAAtCS,EAAOiM,MAAMd,MAAM5L,GAAO6L,UAE9BuB,aAAc,CACZzM,KAAM,uBACNG,KAAM,OACNa,UAAW,SAAClB,EAAQT,GAAT,MAC6B,YAAtCS,EAAOiM,MAAMd,MAAM5L,GAAO6L,UAE9BwB,OAAQ,CACN1M,KAAM,gBACNG,KAAM,YAERwM,OAAQ,CACN3M,KAAM,gBACNG,KAAM,SACNmC,SAAS,EACTR,QAAS,CACP8K,KAAM,OACNC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,oBAGT7D,QAAS,CACPzJ,KAAM,wBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER6K,cAAe,CACbvN,KAAM,qBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER2I,mBAAoB,CAClBrL,KAAM,+BACNG,KAAM,gBAOVqN,cACJ,SAAAA,EAAY1J,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAuJ,IACjBzJ,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA+M,GAAApJ,KAAAH,KAAMH,KAIR+F,gBAAkB,SAAAxK,GAChB0E,EAAKY,SAAS,CAAEmF,mBAAmB,EAAMyB,gBAAiBlM,KANzC0E,EASnBiG,iBAAmB,WACjBjG,EAAKY,SAAS,CAAEmF,mBAAmB,KARnC/F,EAAK0B,MAAQ,CAAEqE,mBAAmB,EAAOyB,iBAAkB,GAF1CxH,wEAaV,IAAA2B,EAAAzB,KACP,OACE0B,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMqE,kBACnBhE,eAAgB7B,KAAK+F,iBACrBjE,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,6BAEZ/B,KAAKwB,MAAMqE,mBACVnE,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAAA,qCAA6ByD,KAAKwB,MAAM8F,gBAAkB,GACzD3L,mBACCuI,EACAlE,KAAKH,MAAMhE,OACXmE,KAAKH,MAAM/D,IACXkE,KAAKwB,MAAM8F,mBAKnB5F,EAAApF,EAAAC,cAAA,OAAKW,UAAU,wBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,qBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,KACEoF,EAAApF,EAAAC,cAAA,wBAILyD,KAAKH,MAAM2J,OACT9M,IAAI,SAAC8K,EAAMpM,GAAP,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,GAAuBgL,EAAvB,CAA6BpM,YACjCyB,OAAO,SAAC2K,EAAMpM,GACb,OACEqG,EAAK5B,MAAM4H,aAAarM,IACV,KAAdoM,EAAKzL,OACJ0F,EAAK5B,MAAMS,eAGf5D,IAAI,SAAA8K,GACH,IAAIE,EAAY,qCAKhB,OAJIF,EAAKG,WAAUD,GAAa,UAEhCA,GAAaF,EAAKhG,MAAQ,KAAO,MAG/BE,EAAApF,EAAAC,cAAA,OACEI,IAAK6K,EAAKpM,MACV8B,UAAU,yBACVO,QACEgE,EAAK5B,MAAMS,aACP,kBAAMmB,EAAK5B,MAAM/D,IAAI2N,WAAWjC,EAAKpM,QACrC,kBAAMqG,EAAKmE,gBAAgB4B,EAAKpM,SAGtCsG,EAAApF,EAAAC,cAAA,OAAKW,UAAW,+BAAiCwK,GAC/ChG,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,MACnB9E,EAAApF,EAAAC,cAAA,WAAMiL,EAAKzL,qBAxEXyH,aA0GTC,kBArBf,SAAyBjC,GAavB,MAAO,CACLgI,OAbahI,EAAMoF,SAAS4C,OAAO9M,IAAI,SAACoL,EAAO1M,GAAR,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,GACpCsL,EADoC,CAEvC/L,KAAMyF,EAAM3F,OAAOiM,MAAMd,MAAM5L,GAAOW,SAYtCuE,aATmBkB,EAAM3F,OAAO+H,OAUhC/H,OATa2F,EAAM3F,OAUnB4L,aARmBjG,EAAM3F,OAAOiM,MAAMd,MAAMtK,IAC5C,SAAA8K,GAAI,MAAqB,KAAjBA,EAAKP,YAWFxD,CAAyB8F,GChEzBG,UA5HG,SAAA7J,GAAS,IAErB8J,EADIvO,EAAgByE,EAAhBzE,MAAOwO,EAAS/J,EAAT+J,KAEf,OAAQA,EAAK1N,MACX,IAAK,SACHyN,EACEjI,EAAApF,EAAAC,cAAA,SACEL,KAAM2D,EAAM+J,KAAKvL,QAAU,SAAW,OACtCnB,UAAW2M,IACT,4BACA,CAAEC,mCAAoCF,EAAKvL,SAC3C,CAAE0L,qCAAsCH,EAAKvL,UAE/CL,SAAU,SAAAC,GAAC,OAAI4B,EAAMmK,eAAe5O,EAAO6C,EAAEC,OAAOtC,QACpDA,MAAOgO,EAAKhO,QAGZiE,EAAM+J,KAAKvL,UAQbsL,EACEjI,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,UAAQkB,QATM,WAChBoC,EAAMmK,eAAe5O,EAAOI,OAAOoO,EAAKhO,OAAS,KAQ/C,KACC+N,EACDjI,EAAApF,EAAAC,cAAA,UAAQkB,QARM,WAChBoC,EAAMmK,eAAe5O,EAAOI,OAAOoO,EAAKhO,OAAS,KAO/C,OAIN,MAEF,IAAK,OACH,IAAMqO,EAAcL,EAAKK,aAAe,GAExCN,EACEjI,EAAApF,EAAAC,cAAA,UACEW,UAAW2M,IACT,4BACA,CAAEC,mCAAoCF,EAAKvL,SAC3C,CAAE0L,qCAAsCH,EAAKvL,UAE/CL,SAAU,SAAAC,GAAC,OAAI4B,EAAMmK,eAAe5O,EAAO6C,EAAEC,OAAOtC,QACpDA,MAAOgO,EAAKhO,OAEXqO,EAAYvN,IAAI,SAAAqB,GAAM,OACrB2D,EAAApF,EAAAC,cAAA,UAAQX,MAAOmC,EAAOpB,KAAMoB,EAAOnC,UAKrCgO,EAAKvL,UAoBPsL,EACEjI,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,UAAQkB,QArBM,WAChB,IAAIyM,EACFD,EAAYE,UAAU,SAAApM,GAAM,OAAIA,EAAOpB,MAAQnB,OAAOoO,EAAKhO,SAC3D,EAEEsO,EAAe,IAAGA,EAAeD,EAAY9O,OAAS,GAE1D0E,EAAMmK,eAAe5O,EAAO6O,EAAYC,GAAcvN,OAcpD,KACCgN,EACDjI,EAAApF,EAAAC,cAAA,UAAQkB,QAdM,WAChB,IAAIyM,EACFD,EAAYE,UAAU,SAAApM,GAAM,OAAIA,EAAOpB,MAAQnB,OAAOoO,EAAKhO,SAC3D,EACmB,IAAjBsO,GAAsBA,IAAiBD,EAAY9O,SACrD+O,EAAe,GAEjBrK,EAAMmK,eAAe5O,EAAO6O,EAAYC,GAAcvN,OAOpD,OAIN,MAEF,IAAK,OACH,IAAKiN,EAAKhO,OAAwB,MAAfgO,EAAKhO,MAAe,CACrC+N,EAAU,GACV,MAEF,IAAMS,EAAO3K,qBAAWmK,EAAKhO,OAE7B+N,EAAO,GAAA/L,OAAMwM,EAAKC,UAAX,KAAAzM,OAAwBwM,EAAKE,WAClC,EADK,KAAA1M,OACAwM,EAAKG,eACZ,MAEF,QACEZ,EAAUC,EAAKhO,MAKnB,OACE8F,EAAApF,EAAAC,cAAA,OACEW,UAAW2M,IAAW,YAAa,CACjCW,sBAAuB3K,EAAM4K,YAG/B/I,EAAApF,EAAAC,cAAA,OAAKW,UAAU,mBAAmBO,QAASoC,EAAM6K,WAC/ChJ,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,KACEoF,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UAAU0M,EAAK7N,QAGlC2F,EAAApF,EAAAC,cAAA,OACEW,UAAU,qBACVyN,MAAO,CAAEC,iBAAkB/K,EAAM4K,UAAYb,EAAKiB,QAElDnJ,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,IACnB9E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UAAUyM,eCrHnC9C,IAAMC,cAAc,SAEpB,IAAM5C,EAAsB,CAC1B4G,MAAO,CACLC,MAAO,CACL,CACEhP,KAAM,CACJA,KAAM,eACNG,KAAM,QAERA,KAAM,CACJH,KAAM,kBACNG,KAAM,SACN2B,QAAS,CACPmN,OAAQ,SACRZ,KAAM,OACNa,OAAQ,QACRC,KAAM,OACN5G,OAAQ,WAGZG,WAAY,CACV1I,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MAC0B,WAAnCS,EAAOiP,MAAMC,MAAM3P,GAAOc,OAE9BmC,QAAS,CACPtC,KAAM,0BACNG,KAAM,WACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,SAAnCS,EAAOiP,MAAMC,MAAM3P,GAAOc,OAE9B+K,QAAS,CACPlL,KAAM,yBACNG,KAAM,OACNa,UAAW,SAAClB,EAAQT,GAAT,MACT,CAAC,SAAU,QAAQ+P,SAAStP,EAAOiP,MAAMC,MAAM3P,GAAOc,QACrDL,EAAOiP,MAAMC,MAAM3P,GAAOqJ,aAE/BwF,YAAa,CACXlO,KAAM,8BACNG,KAAM,WACNa,UAAW,SAAClB,EAAQT,GAAT,MAC0B,SAAnCS,EAAOiP,MAAMC,MAAM3P,GAAOc,OAE9B4C,OAAQ,CACN/C,KAAM,mBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MACT,CAAC,SAAU,UAAU+P,SAAStP,EAAOiP,MAAMC,MAAM3P,GAAOc,QAE5DkP,WAAY,CACVrP,KAAM,4BACNG,KAAM,YAERmP,gBAAiB,CACftP,KAAM,6BACNG,KAAM,WACN2B,QAAS,CACPyN,UAAW,QACXC,OAAQ,SACRC,UAAW,eAQjBC,cACJ,SAAAA,EAAY5L,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAyL,IACjB3L,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAiP,GAAAtL,KAAAH,KAAMH,KAIR+F,gBAAkB,SAAAxK,GAChB0E,EAAKY,SAAS,CAAEmF,mBAAmB,EAAM6F,gBAAiBtQ,KANzC0E,EASnBiG,iBAAmB,WACjBjG,EAAKY,SAAS,CAAEmF,mBAAmB,KARnC/F,EAAK0B,MAAQ,CAAEqE,mBAAmB,EAAO6F,iBAAkB,GAF1C5L,wEAaV,IAAA2B,EAAAzB,KACD+K,EAAQ/K,KAAKH,MAAMkL,MACtBrO,IAAI,SAACkN,EAAMxO,GAAP,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,CACHpB,SACGwO,EACAnI,EAAK5B,MAAM8L,WAAWvQ,MAE1ByB,OAAO,SAAA+M,GAAI,OAAKnI,EAAK5B,MAAMS,cAAgBsJ,EAAK3C,SAAW2C,EAAK7N,OAEnE,OACE2F,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMqE,kBACnBhE,eAAgB7B,KAAK+F,iBACrBjE,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,6BAEZ/B,KAAKwB,MAAMqE,mBACVnE,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAAA,mCACyB,IACtBqP,OAAOC,aACN,GAAK7M,KAAK8M,MAAM9L,KAAKwB,MAAMkK,gBAAkB,IAE7C1L,KAAKwB,MAAMkK,gBAAkB,EAAK,GAErC/P,mBACCuI,EACAlE,KAAKH,MAAMhE,OACXmE,KAAKH,MAAM/D,IACXkE,KAAKwB,MAAMkK,mBAKnBhK,EAAApF,EAAAC,cAAA,OAAKW,UAAS,4BAAAU,OAA8BmN,EAAM5P,SAC/C4P,EAAMrO,IAAI,SAAAkN,GAAI,OACblI,EAAApF,EAAAC,cAACwP,EAAD,CACEpP,IAAKiN,EAAKxO,MACVwO,KAAMA,EACNxO,MAAOwO,EAAKxO,MACZqP,SAAUhJ,EAAK5B,MAAM4K,SACrBT,eAAgBvI,EAAK5B,MAAM/D,IAAIkQ,YAC/BtB,UACEjJ,EAAK5B,MAAMS,aACPmB,EAAK5B,MAAMoM,QACX,kBAAMxK,EAAKmE,gBAAgBgE,EAAKxO,qBA7DhCoI,aAsFLC,kBAff,SAAyBjC,GAMvB,MAAO,CACLuJ,MANYvJ,EAAMoF,SAASmE,MAAMrO,IAAI,SAACkN,EAAMxO,GAAP,OAAAoB,OAAA4J,EAAA,EAAA5J,CAAA,GAClCoN,EADkC,CAErC7N,KAAMyF,EAAM3F,OAAOiP,MAAMC,MAAM3P,GAAOW,SAKtCuE,aAAckB,EAAM3F,OAAO+H,OAC3B/H,OAAQ2F,EAAM3F,OACd8P,WAAYnK,EAAM3F,OAAOiP,MAAMC,MAC/BN,SAAUjJ,EAAMoF,SAASsF,gBAIdzI,CAAyBgI,4BC/JlCU,EAAmB,CAAC,GAAI,QAAS,SAAU,SAAU,OACrDC,EAAa,CAAC,QAAS,QAAS,QAAS,QAAS,SAElDC,cACJ,SAAAA,EAAYxM,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAqM,IACjBvM,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA6P,GAAAlM,KAAAH,KAAMH,KAMRyM,sBAAwB,WACtBxM,EAAKY,SAAS,CACZ6L,qBAAsBzM,EAAK0B,MAAM+K,uBATlBzM,EAanB0M,kBAAoB,WAClB,IAAMC,EAAU3M,EAAKD,MAAMhE,OAAOsI,OAAOC,KAAK,EAAItE,EAAKD,MAAMiG,UAAU/J,KACjE2Q,EAAY5M,EAAKD,MAAMhE,OAAOsI,OAAOC,KAAKtE,EAAKD,MAAMiG,UAAU/J,KAC/D4C,EAAWmB,EAAKD,MAAMhE,OAAOsI,OAAOC,KAAKtE,EAAKD,MAAMiG,UAAUhH,OAE9D6N,EAAe7M,EAAKD,MAAMhE,OAAO+Q,aAAaD,aAAajQ,IAC/D,SAACmQ,EAAQzR,GAAT,MAAoB,CAClB0R,OAAQD,EAAOE,MACf3N,SAAU,SAAAI,GAAG,OAAIA,EAAIwN,MAAM5R,IAC3B6R,KAAM,SAAApN,GAEJ,OADAqN,QAAQhM,IAAIrB,GACJgN,EAAO3Q,MACb,IAAK,OACH,OAAO0P,OAAO/L,EAAMjE,OAAON,OAAOuR,EAAO/N,QAC3C,IAAK,SACH,OAAOtD,OAAOqE,EAAMjE,OAAOuR,QAAQN,EAAO/N,QAC5C,IAAK,OACH,OAAOsO,IAAW3N,qBAAWjE,OAAOqE,EAAMjE,QAAS,cAEvDiE,EAAMjE,MAAMuR,QAAQxO,IAEtBgM,MAAO,CACL0C,UAAW,UAEbtK,MAAO/D,KAAKR,IAAI,GAAI,GAAKqO,EAAOE,MAAM5R,QACtC6G,GAAI5G,EAAQ,MAIVkS,EAAsB,CAC1B,CACER,OAAQJ,EACRtN,SAAU,SAAAI,GAAG,OAAIA,EAAIrB,QAAQ,IAC7B8O,KAAM,SAAApN,GAAK,OAAIA,EAAMjE,MAAMuR,QAAQxO,IACnCqD,GAAI,GACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIrB,QAAQ,IAAM,IACnC8O,KAAM,SAAApN,GAAK,OAAKA,EAAMjE,MAAQiE,EAAMjE,MAAMuR,QAAQxO,GAAY,IAC9DqD,GAAI,EACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIrB,QAAQ,IAAM,IACnC8O,KAAM,SAAApN,GAAK,OAAKA,EAAMjE,MAAQiE,EAAMjE,MAAMuR,QAAQxO,GAAY,IAC9DqD,GAAI,EACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIrB,QAAQ,IAAM,IACnC8O,KAAM,SAAApN,GAAK,OAAKA,EAAMjE,MAAQiE,EAAMjE,MAAMuR,QAAQxO,GAAY,IAC9DqD,GAAI,EACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIrB,QAAQ,IAAM,IACnC8O,KAAM,SAAApN,GAAK,OAAKA,EAAMjE,MAAQiE,EAAMjE,MAAMuR,QAAQxO,GAAY,IAC9DqD,GAAI,EACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQL,EACRrN,SAAU,MACVuL,MAAO,CACL0C,UAAW,UAEbtK,MAAO,MAzDiBnF,OAAApB,OAAA+Q,EAAA,EAAA/Q,CA2DvBmQ,GA3DuB,CA4D1B,CACEG,OACEpL,EAAApF,EAAAC,cAAA,UACEkB,QAAS,WAEL0D,OAAOC,QAAP,yDAIAtB,EAAKD,MAAM/D,IAAI0R,oBAInB9L,EAAApF,EAAAC,cAAA,sBAGJ0Q,KAAM,SAAApN,GACJ,OACE6B,EAAApF,EAAAC,cAAA,UACEkB,QAAS,WAEL0D,OAAOC,QAAP,uDAAAxD,OAEIiC,EAAM4N,SAAS9Q,IAFnB,OAMAmD,EAAKD,MAAM/D,IAAI0R,gBAAgB3N,EAAM4N,SAAS9Q,OATpD,WAiBJqF,GAAI,EACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,MAETrG,IAAI,SAAAmQ,GAAM,OAAArQ,OAAA4J,EAAA,EAAA5J,CAAA,GACPqQ,EADO,CAEVC,OAAQpL,EAAApF,EAAAC,cAAA,aAAKsQ,EAAOC,OAAZ,SAGJY,EAAyB,CAC7B,CACEZ,OAAQJ,EACRtN,SAAU,cACVuL,MAAO,CACL0C,UAAW,UAEbtK,MAAO,GACPkK,KAAM,SAAApN,GAAK,OAAIA,EAAMjE,MAAMuR,QAAQxO,IACnCqD,GAAI,IAEN,CACE8K,OAAQL,EACRrN,SAAU,MACVuL,MAAO,CACL0C,UAAW,UAEbtK,MAAO,MAjBoBnF,OAAApB,OAAA+Q,EAAA,EAAA/Q,CAmB1BmQ,GAnB0B,CAoB7B,CACEG,OAAQ,MACR1N,SAAU,YACV6N,KAAM,SAAApN,GACJ,OACE6B,EAAApF,EAAAC,cAAA,OACEoO,MAAO,CACLC,gBACEuB,EAAiBnN,KAAKT,IAAI,EAAGsB,EAAM4N,SAASE,aAC9C9C,MAAOuB,EAAWpN,KAAKT,IAAI,EAAGsB,EAAM4N,SAASE,eAG9C9N,EAAMjE,MAAMuR,QAAQ,GAAI,MAI/BxC,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQ,MACR1N,SAAU,aACVuL,MAAO,CACL0C,UAAW,UAEbtK,MAAO,IAET,CACE+J,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIoO,kBAAkB,IAAM,IAC7CjD,MAAO,CACL0C,UAAW,UAEbtK,MAAO,GACPf,GAAI,GAEN,CACE8K,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIoO,kBAAkB,IAAM,IAC7CjD,MAAO,CACL0C,UAAW,UAEbtK,MAAO,GACPf,GAAI,GAEN,CACE8K,OAAQ,KACR1N,SAAU,SAAAI,GAAG,OAAIA,EAAIoO,kBAAkB,IAAM,IAC7CjD,MAAO,CACL0C,UAAW,UAEbtK,MAAO,GACPf,GAAI,GAEN,CACE8K,OACEpL,EAAApF,EAAAC,cAAA,UACEkB,QAAS,WAEL0D,OAAOC,QAAP,4DAIAtB,EAAKD,MAAM/D,IAAI+R,uBAInBnM,EAAApF,EAAAC,cAAA,qBAAgB,KAGpB0Q,KAAM,SAAApN,GACJ,OACE6B,EAAApF,EAAAC,cAAA,UACEkB,QAAS,WAEL0D,OAAOC,QAAP,iDAAAxD,OAEIiC,EAAM4N,SAAS9Q,IAFnB,OAMAmD,EAAKD,MAAM/D,IAAI+R,mBAAmBhO,EAAM4N,SAAS9Q,OAIpD,IAbH,SAcS,MAIbqF,GAAI,EACJ2I,MAAO,CACL0C,UAAW,UAEbtK,MAAO,MAETrG,IAAI,SAAAmQ,GAAM,OAAArQ,OAAA4J,EAAA,EAAA5J,CAAA,GACPqQ,EADO,CAEVC,OACEpL,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,aAAKsQ,EAAOC,OAAZ,KAAyB,SAKzBgB,EAAoB,GACpBC,EAAiB,GAEvB,IAAK,IAAIpR,KAAOmD,EAAKD,MAAMkO,eACzBA,EAAeC,KAAfxR,OAAA4J,EAAA,EAAA5J,CAAA,CACEG,OACGmD,EAAKD,MAAMkO,eAAepR,KAGjC,IAAK,IAAIA,KAAOmD,EAAKD,MAAMiO,kBACzBA,EAAkBE,KAAlBxR,OAAA4J,EAAA,EAAA5J,CAAA,CACEG,OACGmD,EAAKD,MAAMiO,kBAAkBnR,KAIpC,OACE+E,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAACyG,EAAA1G,EAAD,CACEoC,QAASoB,EAAK0B,MAAM+K,oBACpBvO,SAAU8B,EAAKwM,wBACd,IACFxM,EAAK0B,MAAM+K,oBAAsB,gBAAkB,gBAAiB,KAC/D,IACR7K,EAAApF,EAAAC,cAAA,QAAMW,UAAU,gCACdwE,EAAApF,EAAAC,cAAA,UACEkB,QAAS,WAEL0D,OAAOC,QACL,4EAGFtB,EAAKD,MAAM/D,IAAImS,sBAGnBvM,EAAApF,EAAAC,cAAA,oBAAe,KACP,KACJ,IACPuD,EAAK0B,MAAM+K,oBACV7K,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,8BAAf,eAA8D,IAC9DwE,EAAApF,EAAAC,cAAC2R,EAAA,EAAD,CACEC,KAAML,EACNM,QAASV,IACR,KAGLhM,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,8BAAf,eAA8D,IAC9DwE,EAAApF,EAAAC,cAAC2R,EAAA,EAAD,CACEvD,MAAO,CACL0C,UAAW,UAEbc,KAAMJ,EACNK,QAASd,IACR,KAEJ,MA3UPxN,EAAK0B,MAAQ,CACX+K,qBAAqB,GAHNzM,wEAmVjB,OACE4B,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKH,MAAM+B,OACnBC,eAAgB7B,KAAKH,MAAMwO,QAC3BvM,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,sBAEZ/B,KAAKH,MAAM+B,QAAU5B,KAAKwM,oBAAqB,YA5VxBhJ,aAiXjBC,kBAff,SAAyBjC,GACvB,IAAMlB,EAAekB,EAAM3F,OAAO+H,OAC5B/H,EAAS2F,EAAM3F,OACfyS,EAAa9M,EAAMoF,SAASgG,aAAa0B,WACzCC,EAAwB/M,EAAM3F,OAAO+Q,aAAa2B,sBAExD,OAAO/R,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EAAMoF,SAASgG,aADpB,CAEEtM,eACAzE,SACAyS,aACAC,2BAIW9K,CAAyB4I,2BChXxCxF,IAAMC,cAAc,aAEd0H,cACJ,SAAAA,EAAY3O,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAwO,IACjB1O,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAgS,GAAArO,KAAAH,KAAMH,KAQR4O,YAAc,WACZ3O,EAAKY,SAAS,CAAEgO,eAAe,KAVd5O,EAanB6O,aAAe,WACb7O,EAAKY,SAAS,CAAEgO,eAAe,KAdd5O,EAiBnB8F,gBAAkB,WAChB9F,EAAKY,SAAS,CAAEmF,mBAAmB,KAlBlB/F,EAqBnBiG,iBAAmB,WACjBjG,EAAKY,SAAS,CAAEmF,mBAAmB,KApBnC/F,EAAK0B,MAAQ,CACXkN,eAAe,EACf7I,mBAAmB,EACnB0G,qBAAqB,GALNzM,wEAyBV,IAAA2B,EAAAzB,KACHrB,EAAW,EACViQ,sBAAY5O,KAAKH,MAAMiG,YAC1BnH,EAAWqB,KAAKH,MAAMhE,OAAOsI,OAAOC,KAAKpE,KAAKH,MAAMiG,UAAUhH,QAEhE,IAAMoF,EAAsB,CAC1B0I,aAAc,CACZiC,QAAS,CACP9S,KAAM,eACNG,KAAM,SACN2B,QAAS,CACPiR,IAAK,MACLxG,KAAM,QACNC,KAAM,QACNwG,QAAS,mBACTC,QAAS,qBAGbhE,OAAQ,CACN9O,KAAM,cACNa,UAAW,SAAAlB,GAAM,OACdA,EAAO+Q,aAAaiC,QAAQI,SAAS,QACN,QAAhCpT,EAAO+Q,aAAaiC,SACtB1R,SAAU,CACR+R,MAAO,CACLnT,KAAM,QACNG,KAAM,WACNmB,SAAU,eACVD,cAAe,CACbrB,KAAM,QACNG,KAAM,SAGViT,iBAAkB,CAChBpT,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACNE,YAEFyQ,YAAa,CACXrT,KAAM,eACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER4Q,iBAAkB,CAChBtT,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER6Q,UAAW,CACTvT,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER8Q,eAAgB,CACdxT,KAAM,oCACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,KAIZ6P,WAAY,CACVpS,KAAM,cACNa,UAAW,SAAAlB,GAAM,OAAIA,EAAO+Q,aAAaiC,QAAQI,SAAS,QAC1D9R,SAAU,CACRqS,UAAW,CACTtT,KAAM,WACNiB,SAAU,CACRsS,QAAS,CACP1T,KAAM,2BACNG,KAAM,SACNuB,QAAS,WACPgE,EAAK5B,MAAM/D,IAAI4T,gBAGnBC,cAAe,CACb5T,KAAM,sBACNG,KAAM,SACNuB,QAAS,WACPgE,EAAK5B,MAAM/D,IAAI6T,kBAGnBC,MAAO,CACL1T,KAAM,WACNmB,SAAU,eACVD,cAAe,CACbrB,KAAM,QACNG,KAAM,SAGViT,iBAAkB,CAChBpT,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACNE,YAEFyQ,YAAa,CACXrT,KAAM,eACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,KAIZ4Q,iBAAkB,CAChBtT,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAER6Q,UAAW,CACTvT,KAAM,cACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,GAERoR,uBAAwB,CACtB9T,KAAM,uBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAAlB,GAAM,OAAIA,EAAO+Q,aAAaiC,QAAQI,SAAS,SAE5Da,oBAAqB,CACnB/T,KAAM,yBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAAlB,GAAM,OAAIA,EAAO+Q,aAAaiC,QAAQI,SAAS,SAE5Dc,8BAA+B,CAC7BhU,KAAM,eACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAAlB,GAAM,OAAIA,EAAO+Q,aAAaiC,QAAQI,SAAS,SAE5De,0BAA2B,CACzBjU,KAAM,2BACNG,KAAM,SACNqC,IAAK,EACLC,IAAK,EACLC,KAAM,EACN1B,UAAW,SAAAlB,GAAM,OAAIA,EAAO+Q,aAAaiC,QAAQI,SAAS,SAE5DgB,sBAAuB,CACrB/T,KAAM,WACNmB,SAAU,yBACVD,cAAe,CACbrB,KAAM,yBACNG,KAAM,SACNmC,SAAS,EACTR,QAASrB,OAAA+Q,EAAA,EAAA/Q,CAAIL,MAAM,IAAIM,QAAQC,IAAI,SAAAwJ,GAAC,OAClC0F,OAAOC,aAAa,IAAIqE,WAAW,GAAKhK,OAI9CiK,gBAAiB,CACfjU,KAAM,WACNmB,SAAU,mBACVD,cAAe,CACbrB,KAAM,sBACNG,KAAM,SACNmC,SAAS,EACTR,QAASrB,OAAA+Q,EAAA,EAAA/Q,CAAIL,MAAM,IAAIM,QAAQC,IAAI,SAAAwJ,GAAC,OAClC0F,OAAOC,aAAa,IAAIqE,WAAW,GAAKhK,OAI9CkK,gBAAiB,CACflU,KAAM,WACNmB,SAAU,mBACVD,cAAe,CACbrB,KAAM,sBACNG,KAAM,SACNmC,SAAS,EACTR,QAASrB,OAAA+Q,EAAA,EAAA/Q,CAAIL,MAAM,IAAIM,QAAQC,IAAI,SAAAwJ,GAAC,OAClC0F,OAAOC,aAAa,IAAIqE,WAAW,GAAKhK,OAI9CmK,oBAAqB,CACnBtU,KAAM,wBACNG,KAAM,UAER6Q,MAAO,CACLhR,KAAM,4BACNG,KAAM,SAERoU,gBAAiB,CACfvU,KAAM,iBACNG,KAAM,QAERqU,iBAAkB,CAChBxU,KAAM,iBACNG,KAAM,QAERyQ,aAAc,CACZ5Q,KAAM,qBACNG,KAAM,cACNoB,UAAW,CACTyP,MAAO,CACLhR,KAAM,QACNG,KAAM,QAERsU,WAAY,CACVzU,KAAM,cACNG,KAAM,QAER+K,QAAS,CACPlL,KAAM,UACNG,KAAM,QAERA,KAAM,CACJH,KAAM,kBACNG,KAAM,SACN2B,QAAS,CACP4S,KAAM,UACNC,OAAQ,UACRtG,KAAM,SAGVtL,OAAQ,CACN/C,KAAM,SACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAClB,EAAQT,GAAT,MACwC,SAAjDS,EAAO+Q,aAAaD,aAAavR,GAAOc,OAE5CyU,eAAgB,CACd5U,KAAM,kBACNG,KAAM,aAGVsB,SAAU,CACRuP,MAAO,GACPyD,WAAY,GACZvJ,QAAS,GACT/K,KAAM,OACN4C,OAAQ,QAcdiM,EAAQ,CACZ,iBACC/K,KAAKH,MAAM+Q,aAAe,GAAGzD,QAC5BnN,KAAKH,MAAMhE,OAAOsI,OAAOC,KAAKpE,KAAKH,MAAMiG,UAAY,GAAGhH,SACrD,EACLE,KAAKJ,MAAoC,KAA7BoB,KAAKH,MAAMyP,WAAa,IAAa,GAAK,KAYxD,OATKtP,KAAKH,MAAMyO,YAActO,KAAKH,MAAMgR,SACvC9F,EAAMiD,KACJhP,KAAKJ,MAC8D,KAAhEoB,KAAKH,MAAMyP,WAAa,EAAItP,KAAKH,MAAMiR,kBAAoB,IAE5D,GACA,KAIJpP,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMqE,kBACnBhE,eAAgB7B,KAAK+F,iBACrBjE,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,oCAEZ/B,KAAKwB,MAAMqE,mBACVnE,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAAA,4CACCZ,mBAASuI,EAAqBlE,KAAKH,MAAMhE,OAAQmE,KAAKH,MAAM/D,OAInE4F,EAAApF,EAAAC,cAACwU,EAAD,CACEnP,OAAQ5B,KAAKwB,MAAMkN,cACnBL,QAASrO,KAAK2O,aACd7S,IAAKkE,KAAKH,MAAM/D,MAGlB4F,EAAApF,EAAAC,cAAA,OACEW,UAAWmJ,IACT,eA/CW,CACjB,2BACA,wBACA,yBA6CiBrG,KAAKH,MAAMgR,SAAW,IAEnCpT,QACEuC,KAAKH,MAAMS,aACPN,KAAKH,MAAMyO,WACTtO,KAAKyO,YACL,KACFzO,KAAK4F,iBAGVmF,EAAMrO,IAAI,SAACkN,EAAMxO,GAAP,OACTsG,EAAApF,EAAAC,cAAA,OAAKI,IAAKvB,EAAO8B,UAAW,sBAC1BwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACbwE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,KACnB9E,EAAApF,EAAAC,cAAA,WAAMqN,iBAtVGpG,aA+WZC,kBAff,SAAyBjC,GACvB,IAAMlB,EAAekB,EAAM3F,OAAO+H,OAC5B/H,EAAS2F,EAAM3F,OACfyS,EAAa9M,EAAMoF,SAASgG,aAAa0B,WACzCC,EAAwB/M,EAAM3F,OAAO+Q,aAAa2B,sBAExD,OAAO/R,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EAAMoF,SAASgG,aADpB,CAEEtM,eACAzE,SACAyS,aACAC,2BAIW9K,CAAyB+K,GCnXzBwC,UARF,SAAAnR,GACX,OACE6B,EAAApF,EAAAC,cAAA,OAAKW,UAAU,OAAOO,QAASoC,EAAMpC,SACnCiE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,SAAS+T,IAAKpR,EAAMqR,MAAOC,IAAKtR,EAAMsR,qDCI3DtK,IAAMC,cAAc,aAEdsK,eACJ,SAAAA,EAAYvR,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAoR,IACjBtR,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA4U,GAAAjR,KAAAH,KAAMH,KAKR+F,gBAAkB,WAChB9F,EAAKY,SAAS,CAAEmF,mBAAmB,KAPlB/F,EAUnBiG,iBAAmB,WACjBjG,EAAKY,SAAS,CAAEmF,mBAAmB,KAXlB/F,EAcnBuR,cAAgB,WACdvR,EAAKY,SAAS,CAAE4Q,iBAAiB,KAfhBxR,EAkBnByR,eAAiB,WACfzR,EAAKY,SAAS,CAAE4Q,iBAAiB,KAjBjCxR,EAAK0R,UAAYC,IAAMC,YACvB5R,EAAK0B,MAAQ,CAAEqE,mBAAmB,EAAOyL,iBAAiB,GAHzCxR,wEAsBV,IAAA2B,EAAAzB,KACHkE,EAAsB,CACxBC,OAAQ,CACN4I,MAAO,CACLhR,KAAM,SACNG,KAAM,SAERyV,aAAc,CACZ5V,KAAM,gBACNG,KAAM,SACN2B,QAAS,CAAEiR,IAAK,MAAO8C,GAAI,KAAMtJ,KAAM,QAASC,KAAM,YAmH5D,OA9GIvI,KAAKH,MAAMqD,eACbgB,EAAmB1H,OAAA4J,EAAA,EAAA5J,CAAA,GACd0H,EADc,CAEjB4G,MAAO,CACLiC,MAAO,CACLhR,KAAM,QACNG,KAAM,SAER2V,QAAS,CACP9V,KAAM,UACNG,KAAM,SACN2B,QAAS,CAAC,QAAS,UAErBiU,QAAS,CAAE/V,KAAM,oBAAqBG,KAAM,YAC5C6V,aAAc,CAAEhW,KAAM,qBAAsBG,KAAM,YAClD8V,aAAc,CACZjW,KAAM,sBACNG,KAAM,SACNmC,SAAS,EACTR,QAASrB,OAAA+Q,EAAA,EAAA/Q,CAAIL,MAAM,IAAIM,QAAQC,IAAI,SAAAwJ,GAAC,OAClC0F,OAAOC,aAAa,IAAIqE,WAAW,GAAKhK,UAO9ClG,KAAKH,MAAMqD,eACbgB,EAAmB1H,OAAA4J,EAAA,EAAA5J,CAAA,GACd0H,EADc,CAEjBJ,OAAQ,CACNiJ,MAAO,CACLhR,KAAM,SACNG,KAAM,SAER6H,YAAa,CACXhI,KAAM,oBACNG,KAAM,YAER0T,MAAO,CACL7T,KAAM,QACNG,KAAM,QAER+V,OAAQ,CACNlW,KAAM,kBACNG,KAAM,SACN2B,QAAS,CAAEiR,IAAK,MAAOxG,KAAM,QAASC,KAAM,UAE9C2J,UAAW,CACTnW,KAAM,aACNG,KAAM,SACN2B,QAAS,CACPiR,IAAK,MACLqD,KAAM,cACNC,SAAU,kBAGdC,UAAW,CACTtW,KAAM,aACNG,KAAM,OACNa,UAAW,SAAAlB,GAAM,MAAgC,SAA5BA,EAAOiI,OAAOoO,YAErCI,cAAe,CACbvW,KAAM,iBACNG,KAAM,SACNqC,IAAK,EACLE,KAAM,EACN1B,UAAW,SAAAlB,GAAM,MAAgC,aAA5BA,EAAOiI,OAAOoO,gBAMvClS,KAAKH,MAAMqD,eACbgB,EAAmB1H,OAAA4J,EAAA,EAAA5J,CAAA,GACd0H,EADc,CAEjBF,IAAK,CACH+I,MAAO,CACLhR,KAAM,MACNG,KAAM,SAERqW,UAAW,CACTxW,KAAM,kCACNG,KAAM,YAER+H,QAAS,CAAC,EAAG,GAAGvH,IAAI,SAAAtB,GAAK,MAAK,CAC5B2R,MAAO,CACLhR,KAAM,UAAYX,EAClBc,KAAM,YAERnB,QAAS,CACPgB,KAAM,UACNG,KAAM,QAERsW,OAAQ,CACNzW,KAAM,SACNG,KAAM,QAERuW,SAAU,CACR1W,KAAM,WACNG,KAAM,QAERwW,SAAU,CACR3W,KAAM,WACNG,KAAM,eAOdwF,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACE0E,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAM8P,gBACnBzP,eAAgB7B,KAAKuR,eACrBzP,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,mCAEbL,EAAApF,EAAAC,cAAA,0CACAmF,EAAApF,EAAAC,cAAA,YACGyD,KAAKH,MAAM8S,WAAWjW,IAAI,SAAAb,GACzB,OACE6F,EAAApF,EAAAC,cAAAmF,EAAApF,EAAAU,SAAA,KACGnB,EACD6F,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,SACN6B,QAAS,kBAAMgE,EAAK5B,MAAM/D,IAAI8W,aAAa/W,MAE7C6F,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,OACN6B,QAAS,kBAAMgE,EAAK5B,MAAM/D,IAAI+W,WAAWhX,MAE3C6F,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,WACN6B,QAAS,kBAAMgE,EAAK5B,MAAM/D,IAAIgX,eAAejX,MAE/C6F,EAAApF,EAAAC,cAAA,cAINmF,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,SACN6B,QAAS,kBAAMgE,EAAK+P,UAAUuB,WAEhCrR,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,eACN6B,QAAS,WACPgE,EAAK5B,MAAM/D,IAAI+W,WAAW,qBAIhCnR,EAAApF,EAAAC,cAAA,QACEyF,GAAG,aACHC,OAAO,eACPC,OAAO,OACPC,QAAQ,sBACRnE,SAAU,SAAAM,GACR,IAAM0U,EAAO1U,EAAMJ,OAAO+U,MAAM,GAE1BC,EAAcF,EAAKjX,KAAKV,MAAM,mBAC/B6X,EAIgBA,EAAY,GAAG5X,MAAM,GAAI,GAAGJ,MAAM,KAAK,KAEhCuG,EAAK5B,MAAMhE,OAAOsX,QAAQjY,MACpD,KACA,GAOFuG,EAAK5B,MAAM/D,IAAIsX,aAAaJ,EAAKjX,MAAMsX,KAAK,SAAAzL,GAC1CsF,QAAQhM,IAAI0G,GAEVA,IACCzG,OAAOC,QAAQ,sCAIlBK,EAAK+P,UAAU8B,cAAcC,WAZ7BC,MAAM,wDAVNA,MAAM,uCA0BV9R,EAAApF,EAAAC,cAAA,SACEoO,MAAO,CAAE8I,QAAS,QAClBvX,KAAK,OACLH,KAAK,eACLqG,OAAO,QACPsR,IAAK,SAAA5L,GACHrG,EAAK+P,UAAY1J,OAKzBpG,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMqE,kBACnBhE,eAAgB7B,KAAK+F,iBACrBjE,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,+BAEZ/B,KAAKwB,MAAMqE,mBACVnE,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAAA,mCACAmF,EAAApF,EAAAC,cAAA,OAAKW,UAAU,yBACbwE,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,cACN6B,QAAS,WACP,IAAM1B,EAAO4X,OACX,iDACA,UAEE5X,GAAM0F,EAAK5B,MAAM/D,IAAI0E,WAAWzE,MAGxC2F,EAAApF,EAAAC,cAAA,SACEL,KAAK,SACLN,MAAM,cACN6B,QAAS,WACPgE,EAAK5B,MAAM/D,IAAI8X,gBACfnS,EAAK4P,gBACL5P,EAAKsE,uBAIVpK,mBAASuI,EAAqBlE,KAAKH,MAAMhE,OAAQmE,KAAKH,MAAM/D,OAKnE4F,EAAApF,EAAAC,cAAA,OACEW,UAAU,UACVO,QAASuC,KAAKH,MAAMS,aAAe,KAAON,KAAK4F,iBAE/ClE,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,IACnB9E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,iBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UAAU8C,KAAKH,MAAM9D,QAGxC2F,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,IACnB9E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,iBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UAAU8C,KAAKH,MAAMgU,MAGxCnS,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,IACnB9E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,iBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACZ4W,KAAO9T,KAAKH,MAAMsS,MAAM4B,OAAO,eAItCrS,EAAApF,EAAAC,cAACgK,EAAAjK,EAAD,CAASkK,WAAY,IACnB9E,EAAApF,EAAAC,cAAA,OAAKW,UAAU,iBACbwE,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACZ4W,KAAO9T,KAAKH,MAAMsS,MAAM4B,OAAO,0BA/S1BvQ,aA+UPC,mBAtBf,SAAyBjC,GACvB,IAAMzF,EAAOyF,EAAMmC,OAAO5H,KACpB8X,EAAKrS,EAAMqC,KAAKgQ,GAChB1B,EAAO3Q,EAAMqC,KAAKsO,KAElB7R,EAAekB,EAAM3F,OAAO+H,OAC5B/H,EAAS2F,EAAM3F,OACfqH,EAAe1B,EAAMmC,OAAOT,aAIlC,MAAO,CACLnH,OACA8X,KACA1B,OACA7R,eACAzE,SACA8W,WARiBnR,EAAMqC,KAAK8O,WAS5BzP,iBAIWO,CAAyB2N,kBCtUxCvK,IAAMC,cAAc,aAEdkN,eACJ,SAAAA,EAAYnU,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAgU,IACjBlU,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAwX,GAAA7T,KAAAH,KAAMH,KAkBRiB,aAAe,WACbhB,EAAKY,SAAS,CACZK,gBAAgB,EAChBkT,eAAgBC,YAAYpU,EAAKqU,iBAAkB,OAErDrU,EAAKqU,oBAxBYrU,EA2BnBqU,iBAAmB,SAAAlW,GACjB,IAAMgU,EAAShU,EAAIA,EAAEC,OAAOQ,QAAUoB,EAAK0B,MAAM4S,gBAC7BnC,EAChBnS,EAAKD,MAAM/D,IAAIuY,aACfvU,EAAKD,MAAM/D,IAAIwY,UAELjB,KAAK,SAAAzL,GACjB9H,EAAKY,SAAS,CACZ6T,gBAAiB3M,EAAOuG,KAAKqG,OAC1B9X,IAAI,SAACX,EAAMX,GAAP,MAAkB,CACrB0R,OAAQ,kBAAMpL,EAAApF,EAAAC,cAAA,SAAIR,IAClBqD,SAAUwI,EAAOuG,KAAKsG,UAAUrZ,GAChC2H,MAAO7D,yBACL0I,EAAOuG,KAAKhQ,QACZyJ,EAAOuG,KAAKsG,UAAUrZ,IAExBuP,MAAO,CAAE0C,UAAW,UACpBJ,KAAM,SAAApN,GACJ,MAA2B,kBAAhBA,EAAMjE,MACRiE,EAAMjE,MAAMuR,QAAQvF,EAAOuG,KAAKrP,OAAO1D,IAEzCyE,EAAMjE,OAEfG,UAEDc,OAAO,SAACgQ,EAAQzR,GAAT,OAAmBA,GAAS,IACnCyB,OACC,SAAAgQ,GAAM,OAAI/M,EAAKD,MAAM6U,kBAAoC,OAAhB7H,EAAO9Q,OAEpD4Y,WAAY/M,EAAOuG,KAAKhQ,QACxBiW,eAAgBnC,OAzDHnS,EA8DnBkB,cAAgB,WACd4T,cAAc9U,EAAK0B,MAAMyS,gBACzBnU,EAAKY,SAAS,CAAEK,gBAAgB,KA7DhClB,EAAM/D,IAAI+Y,UAAUxB,KAAK,SAAAzL,GACnBA,GACF9H,EAAKY,SAAS,CAAEoU,KAAMlN,MAI1B9H,EAAK0B,MAAQ,CACXT,gBAAgB,EAChBqT,gBAAgB,EAChBO,WAAY,GACZJ,gBAAiB,GACjBO,KAAMC,IACNd,eAAgB,MAfDnU,wEAoEjB,OAAKE,KAAKH,MAAM6D,OAKdhC,EAAApF,EAAAC,cAAA,OAAKyF,GAAG,aACNN,EAAApF,EAAAC,cAAA,OACEW,UAAWmJ,IACT,OACA,CAAE2O,kBAAmBhV,KAAKH,MAAMoV,YAChC,CAAEC,iBAAkBlV,KAAKH,MAAMsV,WAC/B,CAAEC,mBAAoBpV,KAAKH,MAAMwV,eAGnC3T,EAAApF,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,OAAQ5B,KAAKwB,MAAMT,eACnBc,eAAgB7B,KAAKgB,cACrBc,iBAAiB,eACjB5E,UAAU,eACV6E,aAAa,aAEZ/B,KAAKH,MAAM6U,kBACVhT,EAAApF,EAAAC,cAAA,YACEmF,EAAApF,EAAAC,cAACyG,EAAA1G,EAAD,CACEoC,QAASsB,KAAKwB,MAAM4S,eACpBpW,SAAUgC,KAAKmU,mBACd,IAJL,4BAQFzS,EAAApF,EAAAC,cAAA,OAAKW,UAAU,kBACbwE,EAAApF,EAAAC,cAAA,WACEmF,EAAApF,EAAAC,cAAA,OAAKW,UAAU,yBACbwE,EAAApF,EAAAC,cAAA,SACGyD,KAAKwB,MAAM4S,eAAiB,aAAe,eAGhD1S,EAAApF,EAAAC,cAAC2R,EAAA,EAAD,CACEvD,MAAO,CAAE2K,SAAU,IACnBnH,KAAMnO,KAAKwB,MAAMmT,WACjBvG,QAASpO,KAAKwB,MAAM+S,qBAK5B7S,EAAApF,EAAAC,cAAA,OAAKW,UAAU,QACbwE,EAAApF,EAAAC,cAACgZ,GAAD,CAASzZ,IAAKkE,KAAKH,MAAM/D,OAG3B4F,EAAApF,EAAAC,cAAA,OAAKW,UAAU,QACbwE,EAAApF,EAAAC,cAACiZ,EAAD,CACEtE,MAAOlR,KAAKwB,MAAMsT,KAClB3D,IAAI,OACJ1T,QAASuC,KAAKH,MAAM/D,IAAI2Z,YAI5B/T,EAAApF,EAAAC,cAAA,OACEW,UAAWmJ,IAAW,OAAQ,CAC5BqP,wBAAyB1V,KAAKH,MAAM8V,oBAGrC3V,KAAKH,MAAM8V,kBACVjU,EAAApF,EAAAC,cAACqZ,EAAD,CAAc9Z,IAAKkE,KAAKH,MAAM/D,MAEhC4F,EAAApF,EAAAC,cAACsZ,EAAD,CAAS/Z,IAAKkE,KAAKH,MAAM/D,OAG1BkE,KAAKH,MAAMwV,aACV3T,EAAApF,EAAAC,cAAA,OAAKW,UAAU,WACZ8C,KAAKH,MAAMwV,aAAe3T,EAAApF,EAAAC,cAACuZ,EAAD,CAAYha,IAAKkE,KAAKH,MAAM/D,MAAS,KAGnEkE,KAAKH,MAAMoV,YACVvT,EAAApF,EAAAC,cAAA,OAAKW,UAAU,UACZ8C,KAAKH,MAAMoV,YAAcvT,EAAApF,EAAAC,cAACwZ,EAAD,CAAWja,IAAKkE,KAAKH,MAAM/D,OAGxDkE,KAAKH,MAAMsV,WACVzT,EAAApF,EAAAC,cAAA,OAAKW,UAAU,SACbwE,EAAApF,EAAAC,cAACyZ,EAAD,CAAOla,IAAKkE,KAAKH,MAAM/D,IAAKmQ,QAASjM,KAAKc,kBA/E3CY,EAAApF,EAAAC,cAAA,OAAKW,UAAU,iBAAf,kBAtEMsG,aA2MJC,mBA7Cf,SAAyBjC,GACvB,IAAMlB,EAAekB,EAAM3F,OAAO+H,OAElC,OAAKpC,EAAM3F,OAAO6H,QAAWlC,EAAMmC,OAAOD,OA+BnC,CACLA,QAAQ,EACRyR,UA5BA3T,EAAMmC,OAAOT,gBACX5C,GACAkB,EAAM3F,OAAOiP,MAAMC,MAAMkL,OAAO,SAACC,EAAKC,GACpC,OAAOD,GAAOC,EAAIpa,OACjB,IAyBLkZ,WAtBAzT,EAAMmC,OAAOT,gBACX5C,GACAkB,EAAM3F,OAAOiM,MAAMd,MAAMiP,OAAO,SAACC,EAAKC,GACpC,OAAOD,GAAOC,EAAIpa,OACjB,IAmBLsZ,YAhBA7T,EAAMmC,OAAOT,gBACX5C,GACAkB,EAAM3F,OAAOkL,OAAOC,MAAMiP,OAAO,SAACC,EAAKC,GACrC,OAAOD,GAAOC,EAAIpa,OACjB,IAaL4Z,iBAVAnU,EAAMmC,OAAOyS,eAAexJ,gBAC1BtM,GAAgBkB,EAAMoF,SAASgG,aAAaiC,SAU9CvO,eACAoU,iBATsD,QAA/BlT,EAAM3F,OAAOiI,OAAOmO,QA5BpC,CAAEvO,QAAQ,IAyCND,CAAyBuQ,ICnNzBqC,oLATX,OACE3U,EAAApF,EAAAC,cAAA,OAAKyF,GAAG,mBACNN,EAAApF,EAAAC,cAAC+Z,EAAD,CAASxa,IAAKkE,KAAKH,MAAM/D,MACzB4F,EAAApF,EAAAC,cAACga,GAAD,CAAMza,IAAKkE,KAAKH,MAAM/D,cALZ0H,gBCCdgT,EAAQ,GAJVC,qBACAC,oBACAC,kBACAC,oBAGMnb,GAAQ+a,EAAQ,IAAhB/a,IAEFob,GAAe,CAAEnT,QAAQ,EAAOE,QAAQ,EAAMkT,YAAY,GCTxDC,GAAmBP,EAAQ,GAA3BO,eAEFF,GAAe,CAAEnT,QAAQ,GCFzBsT,GAAaR,EAAQ,OAUvBA,EAAQ,GAPVS,uBACAC,wBACAC,uBACAC,uBACAC,uBACAC,yBACAC,wBAGIV,GAAe,CACnBzS,KAAM,GACNmD,QAAS,GACTiC,OAAQ,GACRuB,MAAO,GACP6B,aAAc,CACZiC,SAAS,EACT5H,QAAS,GACTuQ,eAAgB,IAElBtL,eAAe,MCdbsK,EAAQ,GAPViB,iBACAC,mBACAC,kBACAC,gBACAC,iBACAC,0BACAC,uBAGIlB,GAAe,CACnBhD,GAAI,GACJ1B,MAAM,IAAIxS,MAAOqY,UACjB3X,YAAY,EACZsS,WAAY,GACZtQ,QAAS,ICTI4V,eAAgB,CAC7Bpc,OJIa,WAAuC,IAA9B2F,EAA8BxF,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAtB6a,GAAc5U,EAAQjG,UAAAb,OAAA,EAAAa,UAAA,QAAAC,EACpD,OAAQgG,EAAO/F,MACb,KAAKua,GACH,OAAOja,OAAA4J,EAAA,EAAA5J,CAAA,GAAKgF,EAAZ,CAAmBkC,QAAQ,EAAMoT,YAAY,GAAS7U,EAAOiW,SAE/D,KAAKxB,GACH,OAAOla,OAAA4J,EAAA,EAAA5J,CAAA,GAAKgF,EAAZ,CAAmBoC,QAAQ,EAAOkT,YAAY,IAEhD,KAAKH,GACH,OAAOna,OAAA4J,EAAA,EAAA5J,CAAA,GAAKgF,EAAZ,CAAmBoC,QAAQ,IAE7B,KAAKgT,GACH,GAAIpV,EAAMoC,OAAQ,OAAOpC,EADP,IAAA2W,EAGSlW,EAAOiW,QAA1Bnd,EAHUod,EAGVpd,QAASa,EAHCuc,EAGDvc,MAIjB,OAFAH,GAAI+F,EAAOzG,EAASa,GAEbY,OAAA4J,EAAA,EAAA5J,CAAA,GAAKgF,EAAZ,CAAmBsV,YAAY,IAEjC,QACE,OAAOtV,IIxBXmC,OHJa,WAAuC,IAA9BnC,EAA8BxF,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAtB6a,GAAc5U,EAAQjG,UAAAb,OAAA,EAAAa,UAAA,QAAAC,EACpD,OAAQgG,EAAO/F,MACb,KAAK6a,GACH,OAAOva,OAAA4J,EAAA,EAAA5J,CAAA,CAAEkH,QAAQ,GAASzB,EAAOiW,SAEnC,QACE,OAAO1W,IGDXoF,SFgBa,WAA2C,IAAlCwR,EAAkCpc,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAtB6a,GAAc5U,EAAQjG,UAAAb,OAAA,EAAAa,UAAA,QAAAC,EACxD,OAAQgG,EAAO/F,MACb,KAAK+a,GAAkB,IAAAkB,EACclW,EAAOiW,QAAlC9c,EADa+c,EACb/c,MAAOoG,EADM2W,EACN3W,MAAOmG,EADDwQ,EACCxQ,SAEhB0Q,EAAYlc,MAAMmc,KAAKF,EAAU5O,QAGvC,OAFA6O,EAAUjd,GAAS,CAAEoG,QAAOmG,YAErBnL,OAAA4J,EAAA,EAAA5J,CAAA,GAAK4b,EAAZ,CAAuB5O,OAAQ6O,IAEjC,KAAKnB,GAAmB,IAAAqB,EACqBtW,EAAOiW,QAA1C9c,EADcmd,EACdnd,MAAOoG,EADO+W,EACP/W,MAAOoG,EADA2Q,EACA3Q,OAAQD,EADR4Q,EACQ5Q,SAExB6Q,EAAarc,MAAMmc,KAAKF,EAAU7Q,SAGxC,OAFAiR,EAAWpd,GAAS,CAAEoG,QAAOoG,SAAQD,YAE9BnL,OAAA4J,EAAA,EAAA5J,CAAA,GAAK4b,EAAZ,CAAuB7Q,QAASiR,IAElC,KAAKrB,GAAkB,IAIjBsB,EAJiBC,EACezW,EAAOiW,QAAnC9c,EADasd,EACbtd,MAAOgD,EADMsa,EACNta,MAAOua,EADDD,EACCC,UAEhBC,EAAUzc,MAAMmc,KAAKF,EAAUhU,MAuBrC,OArBKgU,EAAUhU,KAAKhJ,KAAQgd,EAAUhU,KAAKhJ,GAAS,CAAEsL,QAAS,KAK7D+R,EAHGra,EAGO,CACR,CACEA,QACAua,YACAhS,WAAYqQ,GAAW,IAAIrX,KAAKgZ,GAAY,cAJtC/a,OAAApB,OAAA+Q,EAAA,EAAA/Q,CAML4b,EAAUhU,KAAKhJ,GAAOsL,UARd0R,EAAUhU,KAAKhJ,GAAOsL,QAYrCkS,EAAQxd,GAAS,CACfgD,QACAua,YACAjS,QAAS+R,GAGJjc,OAAA4J,EAAA,EAAA5J,CAAA,GAAK4b,EAAZ,CAAuBhU,KAAMwU,IAE/B,KAAKxB,GAAkB,IAAAyB,EACY5W,EAAOiW,QAAhC9c,EADayd,EACbzd,MAAOQ,EADMid,EACNjd,MAAOqP,EADD4N,EACC5N,OAEhB6N,EAAW3c,MAAMmc,KAAKF,EAAUrN,OAGtC,OAFA+N,EAAS1d,GAAToB,OAAA4J,EAAA,EAAA5J,CAAA,GAAuBsc,EAAS1d,GAAhC,CAAwCQ,QAAOqP,WAExCzO,OAAA4J,EAAA,EAAA5J,CAAA,GAAK4b,EAAZ,CAAuBrN,MAAO+N,IAEhC,KAAKzB,GAAkB,IAAA0B,EACI9W,EAAOiW,QAAxB9c,EADa2d,EACb3d,MAAOyP,EADMkO,EACNlO,MAETiO,EAAW3c,MAAMmc,KAAKF,EAAUrN,OAGtC,OAFA+N,EAAS1d,GAAToB,OAAA4J,EAAA,EAAA5J,CAAA,GAAuBsc,EAAS1d,GAAhC,CAAwCyP,UAEjCrO,OAAA4J,EAAA,EAAA5J,CAAA,GAAK4b,EAAZ,CAAuBrN,MAAO+N,IAEhC,KAAKxB,GACH,OAAO9a,OAAA4J,EAAA,EAAA5J,CAAA,GACF4b,EADL,CAEExL,aAAapQ,OAAA4J,EAAA,EAAA5J,CAAA,CAAGqS,SAAS,GAAS5M,EAAOiW,WAG7C,KAAKX,GACH,OAAO/a,OAAA4J,EAAA,EAAA5J,CAAA,GACF4b,EADL,CAEElM,cAAejK,EAAOiW,UAG1B,QACE,OAAOE,IE1FXvU,KDQa,WAAkC,IAAjCrC,EAAiCxF,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAzB6a,GAAc5U,EAAWjG,UAAAb,OAAA,EAAAa,UAAA,QAAAC,EAC/C,OAAQgG,EAAO/F,MACb,KAAKub,GACH,OAAOjb,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EADL,CAEEqS,GAAI5R,EAAOiW,UAGf,KAAKR,GACH,OAAOlb,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EADL,CAEE2Q,KAAMlQ,EAAOiW,UAGjB,KAAKP,GACH,OAAOnb,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EADL,CAEEnB,YAAamB,EAAMnB,aAGvB,KAAKuX,GACH,OAAOpb,OAAA4J,EAAA,EAAA5J,CAAA,GAAKgF,EAAZ,CAAmBnB,YAAY,IAEjC,KAAKwX,GACH,OAAOrb,OAAA4J,EAAA,EAAA5J,CAAA,GAAKgF,EAAZ,CAAmBnB,YAAY,IAEjC,KAAKyX,GACH,OAAOtb,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EADL,CAEEmR,WAAY1Q,EAAOiW,UAGvB,KAAKH,GACH,OAAOvb,OAAA4J,EAAA,EAAA5J,CAAA,GACFgF,EADL,CAEEa,QAASJ,EAAOiW,UAGpB,QACE,OAAO1W,mFE+QE1F,OA/Sf,SAAakd,GACX,IAAMC,EAASC,OAETC,EAAe,CACnBrR,MAAOmP,oBACPlQ,OAAQmQ,qBACRpM,MAAOsM,oBACPgC,WAAY/B,oBACZjZ,MAAO+Y,oBACPvK,aAAc0K,sBACdzD,GAAI4D,cACJtF,KAAMuF,gBACN2B,SAAU9B,sBAZM+B,EAAA,SAeTC,GACPN,EAAOrH,GAAG2H,EAAS,SAAArB,GACjBc,EAAMQ,SAAS,CAAEtd,KAAMid,EAAaI,GAAUrB,eAFlD,IAAK,IAAIqB,KAAWJ,EAAcG,EAAzBC,GAeT,SAAS1G,EAAW9W,GACdA,EACFkd,EAAOQ,KAAK,aAAc1d,EAAM,SAAAF,GAC9Bmd,EAAMQ,SAAS,CAAEtd,KAAMua,kBAAgByB,QAASwB,KAAKC,MAAM9d,OAG7D+d,KACG/e,IAAI,WACJwY,KAAK,SAAAzL,GACJsF,QAAQhM,IAAI,cACZ8X,EAAMQ,SAAS,CAAEtd,KAAMua,kBAAgByB,QAAStQ,EAAOuG,SAExD0L,MAAM,SAAAC,GAAG,OAAI5M,QAAQhM,IAAI,UAAW4Y,KA2D3C,SAAS1W,IACPwW,KAAM/e,IAAI,YACVkf,WAAW,WACTlH,KACC,KAzGa,SAAAmH,IAAA,OAAAA,EAAAxd,OAAAyd,GAAA,EAAAzd,CAAA0d,GAAA5d,EAAA2I,KAgHlB,SAAAkV,IAAA,IAAArF,EAAA,OAAAoF,GAAA5d,EAAA8d,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMzF,GAAO,EADbuF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUX,KAAM/e,IAAI,SAHpB,OAIIia,EAAO,QAJX,cAAAuF,EAAAC,KAAA,EAAAD,EAAAG,OAAA,SAMW1F,GANX,wBAAAuF,EAAAI,SAAAN,EAAAna,KAAA,gBAhHkBV,MAAAU,KAAAhE,WAsLlB,SAAS4X,IACPqF,EAAOQ,KAAK,gBAAiB,KAAM,SAAAiB,GACjC1B,EAAMQ,SAAS,CAAEtd,KAAM4b,uBAAqBI,QAASwC,MA2BzD,SAASvX,IACP8V,EAAOQ,KAAK,aAAc,KAAM,SAAAiB,GAC9B1B,EAAMQ,SAAS,CAAEtd,KAAM6b,oBAAkBG,QAASwC,MA8BtD,SAAStH,EAAarX,GACpB,OAAO,IAAI4e,QAAQ,SAAAC,GACjB3B,EAAOQ,KAAK,eAAgB1d,EAAM,SAAA8e,GAAA,IAAGjT,EAAHiT,EAAGjT,OAAH,OAAgBgT,EAAQhT,OAwB9D,OAxPAqR,EAAOrH,GAAG,cAAe,WACvBoH,EAAM8B,WAAWlU,SAASxC,KAAK2W,QAAQ,SAAC5U,EAAK/K,GAAN,OACrC4d,EAAMQ,SAAS,CACbtd,KAAMib,oBACNe,QAAS,CAAE9Z,MAAO,GAAIua,WAAW,IAAIhZ,MAAOqY,UAAW5c,eAiP7DyX,IA3NE+G,KAAM/e,IAAI,WAAWwY,KAAK,SAAAzL,GACxBoR,EAAMQ,SAAS,CAAEtd,KAAM6a,kBAAgBmB,QAAStQ,EAAOuG,OACvD6M,SAASjO,MAAQnF,EAAOuG,KAAKpS,OA4N1B,CACL0N,WAzNF,SAAoBrO,GAClB,IAAMoG,EAAQwX,EAAM8B,WACdtT,EAAIhL,OAAA4J,EAAA,EAAA5J,CAAA,GACLgF,EAAM3F,OAAOiM,MAAMd,MAAM5L,GACzBoG,EAAMoF,SAAS4C,OAAOpO,IAGAoM,EAAKJ,qBAAuBI,EAAKG,WAIzDxG,OAAOC,QAAP,4CAAAxD,OAA2D4J,EAAKzL,KAAhE,OAIHkd,EAAOQ,KAAK,aAAcre,IA2M1ByM,YAxMF,SAAqBzM,GACnB,IAAMoG,EAAQwX,EAAM8B,WACdtT,EAAIhL,OAAA4J,EAAA,EAAA5J,CAAA,GACLgF,EAAM3F,OAAOkL,OAAOC,MAAM5L,GAC1BoG,EAAMoF,SAASW,QAAQnM,IAGDoM,EAAKJ,qBAAuBI,EAAKG,WAIzDxG,OAAOC,QAAP,4CAAAxD,OAA2D4J,EAAKzL,KAAhE,OAIHkd,EAAOQ,KAAK,cAAere,IA0L3B4Q,YAvLF,SAAqB5Q,EAAOQ,GAC1Bqd,EAAOQ,KAAK,SAAU,CAAEre,QAAOQ,WAuL/B0Y,OApLF,WACE,OAAOsF,KAAM/e,IAAI,YAoLjBwZ,aAjLF,WACE,OAAOuF,KAAM/e,IAAI,aAiLjBuI,SACAE,SAxKF,WACEsW,KAAM/e,IAAI,cAwKVga,QArRgB,kBAAAmF,EAAA1a,MAAAU,KAAAhE,YAsRhBif,WA5JF,WACEjC,EAAMQ,SAAS,CAAEtd,KAAMyb,kBA4JvBlC,SAzJF,WACEuD,EAAMQ,SAAS,CAAEtd,KAAM0b,gBAyJvBhX,UAtJF,WACEoY,EAAMQ,SAAS,CAAEtd,KAAM2b,iBAsJvBtX,aAnJF,WACEyY,EAAMQ,SAAS,CAAEtd,KAAMwa,oBAmJvBlW,WAhJF,SAAoBzE,GAClB,IAAMmf,EAAYxB,KAAKC,MAAMD,KAAKyB,UAAUnC,EAAM8B,WAAWjf,gBACtDqf,EAAUxX,cACVwX,EAAUtX,cACVsX,EAAUpE,WAEb/a,EACFqX,EAAarX,GAAMsX,KAAK,SAAAzL,GAEnBA,IACDzG,OAAOC,QAAQ,mDAEf6X,EAAOQ,KAAK,aAAc,CAAE1d,KAAMA,EAAMF,OAAQqf,MAMlDlC,EAAM8B,WAAWjf,OAAOib,WAC1BmC,EAAOQ,KAAK,yBAA0ByB,EAAW,SAAAE,IAE5CA,GACCja,OAAOC,QAAQ,wCACjBD,OAAOC,QAAQ,iDAEf6X,EAAOQ,KAAK,WAAYyB,GACxBlC,EAAMQ,SAAS,CAAEtd,KAAMya,iBACvBvT,KAEAjC,OAAO9D,SAASge,WAIpBrC,EAAMQ,SAAS,CAAEtd,KAAMya,kBAgHzBhZ,aA5GF,SAAsB5C,EAASa,EAAOiC,GAChCA,GAAWA,EAAQQ,UACrBzC,EAAQJ,OAAOI,IAEjBod,EAAMQ,SAAS,CAAEtd,KAAM0a,iBAAesB,QAAS,CAAEnd,UAASa,YAyG1DiX,aACAe,gBACAhB,aAlGF,SAAsB7W,GAChBoF,OAAOC,QAAQ,gCAAkCrF,EAAO,OAC1Dkd,EAAOQ,KAAK,eAAgB1d,GAC5B6X,MAgGFd,eA5FF,SAAwB/W,GACtBoF,OAAO9D,SAASie,KAAO,wBAA0Bvf,GA4FjDyR,gBAzFF,SAAyB7Q,GACvBsc,EAAOQ,KAAK,kBAAmB9c,IAyF/BkR,mBAtFF,SAA4BlR,GAC1Bsc,EAAOQ,KAAK,qBAAsB9c,IAsFlCwG,aACAlC,UA1EF,SAAmBlF,EAAMX,GACvB6d,EAAOQ,KAAK,YAAa,CAAE1d,OAAMX,SAAS,SAAAmgB,GAAG,OAAIpa,OAAOqS,MAAM+H,MA0E9Dla,UAtDF,SAAmBtF,GACjBkd,EAAOQ,KAAK,YAAa1d,GACzBoH,KAqDAb,YAxEF,SAAqBvG,GACnBoF,OAAO9D,SAASie,KAAO,qBAAuBvf,GAwE9CuF,gBArEF,WACEH,OAAO9D,SAASie,KACd,0BAA4BtC,EAAM8B,WAAWjX,KAAKxB,SAoEpDd,cAjEF,WAEE,IADA,IAAMia,EAAWxC,EAAM8B,WAAWjX,KAAKxB,QAC9B6D,EAAI,EAAGA,EAAIsV,EAASrgB,OAAQ+K,IACnC+S,EAAOQ,KAAK,YAAa+B,EAAStV,IAEpC/C,KA6DAiQ,eACAnF,kBA1FF,WACEgL,EAAOQ,KAAK,sBA0FZ9J,cAjDF,WACExO,OAAO9D,SAASie,KAAO,kBAiDvB5L,YA9CF,WAEIvO,OAAOC,QACL,sEAKAD,OAAOC,QAAQ,gDACjB6X,EAAOQ,KAAK,mBCnREgC,QACW,cAA7Bta,OAAO9D,SAASqe,UAEe,UAA7Bva,OAAO9D,SAASqe,UAEhBva,OAAO9D,SAASqe,SAASrgB,MACvB,sECPA2d,GAAQ2C,YACZC,GACAza,OAAO0a,8BAAgC1a,OAAO0a,gCAGhDC,IAASC,OACPra,EAAApF,EAAAC,cAACyf,EAAA,EAAD,CAAUhD,MAAOA,IACftX,EAAApF,EAAAC,cAAC0f,GAAD,CAAKngB,IAAKA,GAAIkd,OAEhBgC,SAASkB,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhJ,KAAK,SAAAiJ,GACjCA,EAAaC,gCEhGnBC,EAAOC,QA/BP,SAA4BC,GAC1B,IAAM9U,EAAS,GAIf,OAHA8U,EAAM3B,QAAQ,SAAA4B,GACZ/U,EAAO+U,GAAQA,IAEV/U,EA0BQgV,CAvBG,CAClB,eACA,aACA,cACA,YACA,aACA,iBACA,iBACA,mBACA,oBACA,mBACA,mBACA,mBACA,qBACA,gBACA,cACA,gBACA,oBACA,eACA,sBACA,yCC5BFJ,EAAAC,QAAiBI,EAAAC,EAAuB","file":"static/js/main.c78c6fdf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, api, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(\r\n            element,\r\n            config,\r\n            api,\r\n            index,\r\n            name + \"[\" + index + \"]\"\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                api,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"emphasis\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return (\r\n          <div className=\"configuration--emphasis\">\r\n            {makeForm(value.contents, config, api, index, oldName)}\r\n          </div>\r\n        );\r\n      }\r\n      case \"conditional\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return makeForm(value.contents, config, api, index, oldName);\r\n      }\r\n      case \"external\": {\r\n        return makeForm(\r\n          value.configuration,\r\n          config,\r\n          api,\r\n          index,\r\n          value.location\r\n        );\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const structure = value.structure;\r\n        const defaultStruct = value.defaults;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"configuration--struct\">\r\n                #{index + 3}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    contents.splice(index, 1);\r\n                    api.changeConfig(name, contents);\r\n                  }}\r\n                />\r\n                {makeForm(\r\n                  structure,\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"]\"\r\n                )}\r\n              </div>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    api.changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      api.changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      api.changeConfig(\r\n                        `${name}[${index}].key`,\r\n                        e.target.value,\r\n                        {\r\n                          numeric: true\r\n                        }\r\n                      );\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"button\": {\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"button\"\r\n              value={value.name}\r\n              className=\"configuration--button\"\r\n              onClick={value.onClick}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                api.changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={\r\n                value.rounding\r\n                  ? round(get(config, name), value.rounding)\r\n                  : get(config, name)\r\n              }\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  api.changeConfig(name, event.target.checked);\r\n                } else {\r\n                  api.changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${get(row, accessor)}` || \"\").length)\r\n  );\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.api.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.api.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.api.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.api.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.api.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"submit\" value=\"Import .xls\" />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.api.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.closeMenu()\r\n          }\r\n          width={450}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>{\" \"}\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.api.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openUploadModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: []\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\"\r\n          }\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.input.ports[index].formula === \"command\"\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.input.ports[index].formula === \"command\"\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) -\r\n            1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) +\r\n            1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() +\r\n        1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div\r\n        className=\"tableCell--content\"\r\n        style={{ backgroundColor: !props.notFound && cell.color }}\r\n      >\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\"\r\n          }\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"reader\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type !== \"date\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type) &&\r\n            !config.table.cells[index].readerPort\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            [\"normal\", \"reader\"].includes(config.table.cells[index].type)\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport { daysToDate } from \"../../helpers\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showIndividualTable: true\r\n    };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({\r\n      showIndividualTable: !this.state.showIndividualTable\r\n    });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const extraColumns = this.props.config.selfLearning.extraColumns.map(\r\n      (column, index) => ({\r\n        Header: column.title,\r\n        accessor: row => row.extra[index],\r\n        Cell: props => {\r\n          console.log(props);\r\n          switch (column.type) {\r\n            case \"text\":\r\n              return String(props.value).slice(-column.digits);\r\n            case \"number\":\r\n              return Number(props.value).toFixed(column.digits);\r\n            case \"date\":\r\n              return dateFormat(daysToDate(Number(props.value)), \"dd-mm-yyyy\");\r\n          }\r\n          props.value.toFixed(rounding);\r\n        },\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: Math.max(70, 11 * column.title.length),\r\n        id: index + 20\r\n      })\r\n    );\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.entries[0],\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 10,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        id: 2,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        id: 3,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        id: 4,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(rounding) : \"\"),\r\n        id: 5,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 200\r\n      },\r\n      ...extraColumns,\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      }\r\n    ].map(column => ({\r\n      ...column,\r\n      Header: <b> {column.Header} </b>\r\n    }));\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: \"calibration\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 12\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 200\r\n      },\r\n      ...extraColumns,\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor:\r\n                  individualColors[Math.min(4, props.original.increments)],\r\n                color: textColors[Math.min(4, props.original.increments)]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 50,\r\n        id: 1\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 50,\r\n        id: 2\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 50,\r\n        id: 3\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>{\" \"}\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Delete{\" \"}\r\n            </button>\r\n          );\r\n        },\r\n        id: 4,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        width: 70\r\n      }\r\n    ].map(column => ({\r\n      ...column,\r\n      Header: (\r\n        <>\r\n          <b> {column.Header} </b>{\" \"}\r\n        </>\r\n      )\r\n    }));\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({\r\n        key,\r\n        ...this.props.generalEntries[key]\r\n      });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({\r\n        key,\r\n        ...this.props.individualEntries[key]\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle\r\n            checked={this.state.showIndividualTable}\r\n            onChange={this.toggleIndividualTable}\r\n          />{\" \"}\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}{\" \"}\r\n        </span>{\" \"}\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  \"Are you sure you want to reset the data of the individual selfLearning?\"\r\n                )\r\n              )\r\n                this.props.api.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b> Reset </b>{\" \"}\r\n          </button>{\" \"}\r\n        </span>{\" \"}\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN - list </div>{\" \"}\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n            />{\" \"}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL - list </div>{\" \"}\r\n            <ReactTable\r\n              style={{\r\n                textAlign: \"center\"\r\n              }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />{\" \"}\r\n          </>\r\n        )}{\" \"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}{\" \"}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearningModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex))\r\n      rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        normal: {\r\n          type: \"conditional\",\r\n          condition: config =>\r\n            !config.selfLearning.enabled.endsWith(\"ind\") &&\r\n            config.selfLearning.enabled !== \"off\",\r\n          contents: {\r\n            LogID: {\r\n              name: \"LogID\",\r\n              type: \"external\",\r\n              location: \"logger.logID\",\r\n              configuration: {\r\n                name: \"LogID\",\r\n                type: \"text\"\r\n              }\r\n            },\r\n            startCalibration: {\r\n              name: \"Calibration\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              rounding\r\n            },\r\n            totalNumber: {\r\n              name: \"Total number\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            startTolerance: {\r\n              name: \"Extra tolerance during learning %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            }\r\n          }\r\n        },\r\n        individual: {\r\n          type: \"conditional\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\"),\r\n          contents: {\r\n            important: {\r\n              type: \"emphasis\",\r\n              contents: {\r\n                resetSL: {\r\n                  name: \"Reset Self Learning Data\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.api.resetSLData();\r\n                  }\r\n                },\r\n                downloadExcel: {\r\n                  name: \"Download Excel file\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.api.downloadExcel();\r\n                  }\r\n                },\r\n                logID: {\r\n                  type: \"external\",\r\n                  location: \"logger.logID\",\r\n                  configuration: {\r\n                    name: \"LogID\",\r\n                    type: \"text\"\r\n                  }\r\n                },\r\n                startCalibration: {\r\n                  name: \"Calibration\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  rounding\r\n                },\r\n                totalNumber: {\r\n                  name: \"Total number\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                }\r\n              }\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            individualToleranceAbs: {\r\n              name: \"Individual tolerance\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualTolerance: {\r\n              name: \"Individual tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionIncrement: {\r\n              name: \"Correction %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionLimit: {\r\n              name: \"Correction limit (max 9)\",\r\n              type: \"number\",\r\n              min: 0,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            excelIndividualColumn: {\r\n              type: \"external\",\r\n              location: \"table.individualColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Com Ind\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i =>\r\n                  String.fromCharCode(\"A\".charCodeAt(0) + i)\r\n                )\r\n              }\r\n            },\r\n            excelDateColumn: {\r\n              type: \"external\",\r\n              location: \"table.dateColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Date\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i =>\r\n                  String.fromCharCode(\"A\".charCodeAt(0) + i)\r\n                )\r\n              }\r\n            },\r\n            excelExitColumn: {\r\n              type: \"external\",\r\n              location: \"table.exitColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Exit\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i =>\r\n                  String.fromCharCode(\"A\".charCodeAt(0) + i)\r\n                )\r\n              }\r\n            },\r\n            uploadExcelTemplate: {\r\n              name: \"Upload Excel Template\",\r\n              type: \"button\"\r\n            },\r\n            title: {\r\n              name: \"List column configuration\",\r\n              type: \"title\"\r\n            },\r\n            firstTopFormula: {\r\n              name: \"#1 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            secondTopFormula: {\r\n              name: \"#2 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            extraColumns: {\r\n              name: \"Additional columns\",\r\n              type: \"structArray\",\r\n              structure: {\r\n                title: {\r\n                  name: \"Title\",\r\n                  type: \"text\"\r\n                },\r\n                topFormula: {\r\n                  name: \"Top formula\",\r\n                  type: \"text\"\r\n                },\r\n                formula: {\r\n                  name: \"Formula\",\r\n                  type: \"text\"\r\n                },\r\n                type: {\r\n                  name: \"Type of content\",\r\n                  type: \"select\",\r\n                  options: {\r\n                    text: \"Non-num\",\r\n                    number: \"Numeric\",\r\n                    date: \"Date\"\r\n                  }\r\n                },\r\n                digits: {\r\n                  name: \"Digits\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  condition: (config, index) =>\r\n                    config.selfLearning.extraColumns[index].type !== \"date\"\r\n                },\r\n                generalVisible: {\r\n                  name: \"Show in SL list\",\r\n                  type: \"checkbox\"\r\n                }\r\n              },\r\n              defaults: {\r\n                title: \"\",\r\n                topFormula: \"\",\r\n                formula: \"\",\r\n                type: \"text\",\r\n                digits: 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onClose={this.closeSLModal}\r\n          api={this.props.api}\r\n        />\r\n\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\"\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\"\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"]\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            numeric: true,\r\n            options: [...Array(26).keys()].map(i =>\r\n              String.fromCharCode(\"A\".charCodeAt(0) + i)\r\n            )\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\"\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\"\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\"\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\"\r\n            }\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: config => config.logger.resetMode === \"time\"\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: config => config.logger.resetMode === \"interval\"\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\"\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\"\r\n          },\r\n          targets: [1, 2].map(index => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\"\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\"\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\"\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\"\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\"\r\n            }\r\n          }))\r\n        }\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.props.api.configExists(file.name).then(result => {\r\n                console.log(result);\r\n                if (\r\n                  result &&\r\n                  !window.confirm(\"Config already exists. Overwrite?\")\r\n                )\r\n                  return;\r\n\r\n                this.uploadRef.parentElement.submit();\r\n              });\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: result.data.accessors[index],\r\n            width: getColumnWidth(\r\n              result.data.entries,\r\n              result.data.accessors[index]\r\n            ),\r\n            style: { textAlign: \"center\" },\r\n            Cell: props => {\r\n              if (typeof props.value === \"number\") {\r\n                return props.value.toFixed(result.data.digits[index]);\r\n              }\r\n              return props.value;\r\n            },\r\n            name\r\n          }))\r\n          .filter((column, index) => index >= 2)\r\n          .filter(\r\n            column => this.props.uniqueLogEnabled || column.name !== \"TU\"\r\n          ),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />{\" \"}\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  <b>\r\n                    {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                  </b>\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 14 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.openMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: []\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    tableColor: TABLE_CELL_COLOR,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    const state = store.getState();\r\n    const port = {\r\n      ...state.config.input.ports[index],\r\n      ...state.internal.inputs[index]\r\n    };\r\n\r\n    const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n    if (\r\n      askForConfirmation &&\r\n      !window.confirm(`Are you sure you want to manually change ${port.name}?`)\r\n    )\r\n      return;\r\n\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    const state = store.getState();\r\n    const port = {\r\n      ...state.config.output.ports[index],\r\n      ...state.internal.outputs[index]\r\n    };\r\n\r\n    const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n    if (\r\n      askForConfirmation &&\r\n      !window.confirm(`Are you sure you want to manually change ${port.name}?`)\r\n    )\r\n      return;\r\n\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function openMenu() {\r\n    store.dispatch({ type: OPEN_MENU });\r\n  }\r\n\r\n  function closeMenu() {\r\n    store.dispatch({ type: CLOSE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      configExists(name).then(result => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      socket.emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n        if (\r\n          (consistent ||\r\n            window.confirm(\"This will reset the log, continue?\")) &&\r\n          window.confirm(\"Are you sure you want to save these changes?\")\r\n        ) {\r\n          socket.emit(\"settings\", newConfig);\r\n          store.dispatch({ type: CONFIG_LOCK });\r\n          reboot();\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      });\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(address, value, options) {\r\n    if (options && options.numeric) {\r\n      value = Number(value);\r\n    }\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  function resetIndividualSL() {\r\n    socket.emit(\"resetIndividualSL\");\r\n  }\r\n\r\n  function getLogList() {\r\n    socket.emit(\"getLogList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function uploadLog(name, index) {\r\n    socket.emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n  }\r\n\r\n  function downloadLog(name) {\r\n    window.location.href = \"/downloadLog?file=\" + name;\r\n  }\r\n\r\n  function downloadAllLogs() {\r\n    window.location.href =\r\n      \"/downloadLog?multiFile=\" + store.getState().misc.logList;\r\n  }\r\n\r\n  function deleteAllLogs() {\r\n    const fileList = store.getState().misc.logList;\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      socket.emit(\"deleteLog\", fileList[i]);\r\n    }\r\n    getLogList();\r\n  }\r\n\r\n  function deleteLog(name) {\r\n    socket.emit(\"deleteLog\", name);\r\n    getLogList();\r\n  }\r\n\r\n  function configExists(name) {\r\n    return new Promise(resolve => {\r\n      socket.emit(\"configExists\", name, ({ result }) => resolve(result));\r\n    });\r\n  }\r\n\r\n  function downloadExcel() {\r\n    window.location.href = \"/downloadExcel\";\r\n  }\r\n\r\n  function resetSLData() {\r\n    if (\r\n      window.confirm(\r\n        \"This will clear the Excel file. Do you want to download it first?\"\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n    if (window.confirm(\"Are you sure you want to clear all SL data?\")) {\r\n      socket.emit(\"deleteSLData\");\r\n    }\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL,\r\n    getLogList,\r\n    uploadLog,\r\n    deleteLog,\r\n    downloadLog,\r\n    downloadAllLogs,\r\n    deleteAllLogs,\r\n    configExists,\r\n    resetIndividualSL,\r\n    downloadExcel,\r\n    resetSLData\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}