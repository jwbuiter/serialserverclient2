{"version":3,"sources":["components/Sidebar.js","components/ComElement.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","e","target","checked","api","unlockConfig","saveConfig","state","_this2","react_default","a","createElement","BurgerMenu","customBurgerIcon","pageWrapId","outerContainerId","isOpen","isMenuOpen","className","component_default","onChange","href","onClick","window","confirm","reboot","shutdown","QS","Component","connect","misc","static","ComElement","ReactFitText_default","name","compressor","average","concat","entries","entry","OutputList","outputs","filter","port","index","portsEnabled","map","indicator","isForced","result","key","clickFunction","configLocked","config","locked","output","ports","formula","InputList","inputs","input","TableCell","content","type","manualFunction","value","Fragment","Number","menuOptions","option","description","newMenuIndex","findIndex","length","openModal","Modal","setAppElement","Table","openConfigModal","setState","configModalIsOpen","configCellIndex","closeConfigModal","formChanged","event","property","isNaN","console","log","filteredCells","cells","cell","lib_default","onRequestClose","overlayClassName","contentLabel","min","step","components_TableCell","manual","tableManual","openLog","generalTableColumns","Header","accessor","row","id","style","textAlign","width","Cell","individualColors","textColors","individualTableColumns","backgroundColor","original","increments","color","SelfLearning","modalIsOpen","closeModal","individualEntries","generalEntries","push","objectSpread","react_table_es","data","columns","success","individual","calibration","tolerance","toFixed","matchedTolerance","internal","selfLearning","Logo","src","image","alt","Infobar","ip","moment","time","format","getColumnWidth","rows","cellLength","Math","max","apply","toConsumableArray","Main","openLogModal","logModalIsOpen","reloadLogEntries","logModalUnique","unique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","getLogo","logo","MBDC","loaded","showTable","reduce","acc","cur","showInputs","showOutputs","showPorts","classNames","main--noports","main--notable","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","toggleMenu","selfLearningEnabled","components_SelfLearning","coms","com","components_ComElement","components_OutputList","forceOutput","components_InputList","forceInput","components_Table","serial","table","enabled","logger","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","Date","getTime","combineReducers","arguments","undefined","action","payload","fullState","_action$payload","newInputs","Array","from","_action$payload2","newOutputs","_action$payload3","entryTime","newComs","_action$payload4","newCells","APIendPoint","location","hostname","store","socket","socketIOClient","messageTypes","_loop","message","on","dispatch","_getLogo","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","abrupt","stop","catch","err","emit","getState","changeConfig","changes","Boolean","match","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d587180e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  toggleConfigLock = e => {\r\n    if (e.target.checked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        customBurgerIcon={false}\r\n        pageWrapId=\"page-wrap\"\r\n        outerContainerId=\"outer-container\"\r\n        isOpen={this.props.isMenuOpen}\r\n      >\r\n        <span className=\"menu-item\">\r\n          Unlock settings <Toggle onChange={this.toggleConfigLock} />\r\n        </span>\r\n        <a\r\n          className=\"menu-item\"\r\n          href=\"/\"\r\n          onClick={() => {\r\n            if (window.confirm(\"Are you sure you want to reboot?\"))\r\n              this.props.api.reboot();\r\n          }}\r\n        >\r\n          Reboot unit\r\n        </a>\r\n        <span className=\"menu-item\">Upload data</span>\r\n        <a\r\n          className=\"menu-item\"\r\n          href=\"/\"\r\n          onClick={() => {\r\n            if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n              this.props.api.shutdown();\r\n          }}\r\n        >\r\n          Shutdown unit\r\n        </a>\r\n        <span className=\"menu-item\" />\r\n        <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst ComElement = props => {\r\n  return (\r\n    <div className=\"comElement\">\r\n      <div className=\"comElement--title\">\r\n        <div className=\"center\">\r\n          <FitText>\r\n            <div>{props.name}</div>\r\n          </FitText>\r\n          <FitText compressor={2}>\r\n            <div>{props.average && `Average ${props.entries}`}</div>\r\n          </FitText>\r\n        </div>\r\n      </div>\r\n      <div className=\"comElement--content\">\r\n        <FitText>\r\n          <div className=\"center\">{props.entry}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComElement;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../styles/outputList.scss\";\r\n\r\nclass OutputList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttonList\">\r\n        <div className=\"buttonList--title\">\r\n          <div className=\"center\">Outputs</div>\r\n        </div>\r\n        {this.props.outputs\r\n          .filter((port, index) => {\r\n            return this.props.portsEnabled[index] || port.name !== \"\";\r\n          })\r\n          .map((port, index) => {\r\n            let indicator = \"buttonList--list--indicator--output\";\r\n            if (port.isForced) indicator += \"Forced\";\r\n\r\n            if (port.state) {\r\n              indicator += \"On\";\r\n            } else if (port.result && !port.isForced) {\r\n              indicator += \"Execute\";\r\n            } else {\r\n              indicator += \"Off\";\r\n            }\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"buttonList--list--item\"\r\n                onClick={() => this.props.clickFunction(index)}\r\n              >\r\n                <div className=\"center-vertical\"> {port.name}</div>\r\n                <div className={\"buttonList--list--indicator \" + indicator} />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    configLocked,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../styles/inputList.scss\";\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"buttonList inputList\">\r\n        <div className=\"buttonList--title\">\r\n          <div className=\"center\">Inputs</div>\r\n        </div>\r\n        {this.props.inputs\r\n          .filter((port, index) => {\r\n            return this.props.portsEnabled[index] || port.name !== \"\";\r\n          })\r\n          .map((port, index) => {\r\n            let indicator = \"buttonList--list--indicator--input\";\r\n            if (port.isForced) indicator += \"Forced\";\r\n\r\n            indicator += port.state ? \"On\" : \"Off\";\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"buttonList--list--item\"\r\n                onClick={() => this.props.clickFunction(index)}\r\n              >\r\n                <div className=\"center-vertical\"> {port.name}</div>\r\n                <div className={\"buttonList--list--indicator \" + indicator} />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    configLocked,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index } = props;\r\n\r\n  let content;\r\n  switch (props.type) {\r\n    case \"manualText\": {\r\n      content = (\r\n        <input\r\n          type=\"text\"\r\n          className=\"tableCell--content--input tableCell--content--input--text\"\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    }\r\n    case \"manualNumeric\": {\r\n      const decrement = () => {\r\n        props.manualFunction(index, Number(props.value) - 1);\r\n      };\r\n      const increment = () => {\r\n        props.manualFunction(index, Number(props.value) + 1);\r\n      };\r\n\r\n      content = (\r\n        <>\r\n          <button onClick={decrement}>-</button>\r\n          <input\r\n            type=\"number\"\r\n            className=\"tableCell--content--input tableCell--content--input--numeric\"\r\n            onChange={e => props.manualFunction(index, e.target.value)}\r\n            value={props.value}\r\n          />\r\n          <button onClick={increment}>+</button>\r\n        </>\r\n      );\r\n      break;\r\n    }\r\n    case \"menuText\": {\r\n      content = (\r\n        <select\r\n          className=\"tableCell--content--input tableCell--content--input--text\"\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={props.value}\r\n        >\r\n          {props.menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    }\r\n    case \"menuNumeric\": {\r\n      const decrement = () => {\r\n        let newMenuIndex =\r\n          props.menuOptions.findIndex(option => option.value === props.value) -\r\n          1;\r\n\r\n        if (newMenuIndex < 0) newMenuIndex = 0;\r\n\r\n        props.manualFunction(index, props.menuOptions[newMenuIndex].value);\r\n      };\r\n      const increment = () => {\r\n        let newMenuIndex =\r\n          props.menuOptions.findIndex(option => option.value === props.value) +\r\n          1;\r\n\r\n        if (newMenuIndex === 0 || newMenuIndex === props.menuOptions.length)\r\n          newMenuIndex = props.menuOptions.length - 1;\r\n\r\n        props.manualFunction(index, props.menuOptions[newMenuIndex].value);\r\n      };\r\n\r\n      content = (\r\n        <>\r\n          <button onClick={decrement}>-</button>\r\n          <select\r\n            className=\"tableCell--content--input tableCell--content--input--numeric\"\r\n            onChange={e => props.manualFunction(index, e.target.value)}\r\n            value={props.value}\r\n          >\r\n            {props.menuOptions.map(option => (\r\n              <option value={option.value}>{option.description}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={increment}>+</button>\r\n        </>\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      content = props.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableCell\">\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{props.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.4}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\n\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  formChanged = event => {\r\n    const property = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (!isNaN(Number(event.target.value))) {\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    console.log({ property, value });\r\n  };\r\n\r\n  render() {\r\n    const filteredCells = this.props.cells.filter((cell, index) => {\r\n      return index < 10;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          <form onChange={this.formChanged}>\r\n            <h2>Configuration for whole table</h2>\r\n            Trigger:\r\n            <select name={`table.trigger`}>\r\n              <option value={0}>Com 0</option>\r\n              <option value={1}>Com 1</option>\r\n            </select>\r\n            <br />\r\n            Use imported file:\r\n            <input type=\"checkbox\" name={`table.useFile`} />\r\n            <br />\r\n            Wait for other com:\r\n            <input type=\"checkbox\" name={`table.waitForOther`} />\r\n            <br />\r\n            Column to search in:\r\n            <input type=\"number\" min=\"0\" step=\"1\" name={`table.searchColumn`} />\r\n            <br />\r\n            <h2>Configuration for cell {this.state.configCellIndex}</h2>\r\n            Type of content:\r\n            <select name={`table.cells[${this.state.configCellIndex}].type`}>\r\n              <option value=\"\">Normal</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"manual\">Manual</option>\r\n              <option value=\"menu\">Selectable</option>\r\n            </select>\r\n            <br />\r\n            Name of cell:\r\n            <input\r\n              type=\"text\"\r\n              name={`table.cells[${this.state.configCellIndex}].name`}\r\n            />\r\n            <br />\r\n            Formula for cell value:\r\n            <input\r\n              type=\"text\"\r\n              name={`table.cells[${this.state.configCellIndex}].formula`}\r\n            />\r\n            <br />\r\n            Formula for cell Color:\r\n            <input\r\n              type=\"text\"\r\n              name={`table.cells[${this.state.configCellIndex}].colorFormula`}\r\n            />\r\n            <select name={`table.cells[${this.state.configCellIndex}].type`}>\r\n              <option value=\"\">Green</option>\r\n              <option value=\"date\">Yellow</option>\r\n              <option value=\"manual\">Orange</option>\r\n              <option value=\"menu\">Red</option>\r\n            </select>\r\n            <br />\r\n            Treat value as a number:\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`table.cells[${this.state.configCellIndex}].numeric`}\r\n            />\r\n            <br />\r\n            Number of digits:\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"1\"\r\n              name={`table.cells[${this.state.configCellIndex}].digits`}\r\n            />\r\n            <br />\r\n            Reset value after execute:\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`table.cells[${this.state.configCellIndex}].numeric`}\r\n            />\r\n            <br />\r\n          </form>\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${filteredCells.length}`}>\r\n          {filteredCells.map((cell, index) => (\r\n            <TableCell\r\n              key={index}\r\n              name={cell.name}\r\n              value={cell.value}\r\n              index={index}\r\n              type={cell.manual ? \"menuNumeric\" : \"text\"}\r\n              menuOptions={[\r\n                { value: 1, description: \"smeeeeeeeeeeeall\" },\r\n                { value: 3, description: \"big\" }\r\n              ]}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    configLocked: state.config.locked\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      console.log(props);\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { modalIsOpen: false };\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({ modalIsOpen: true });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--title--inProgress\",\r\n      \"selfLearning--title--success\",\r\n      \"selfLearning--title--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      console.log(this.props.individualEntries[key]);\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <div>SL: Ind COM0</div>\r\n          <div className=\"selfLearning--modal\">\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <div className=\"selfLearning\" onClick={this.openModal}>\r\n          <div\r\n            className={\"selfLearning--title \" + indicators[this.props.success]}\r\n          >\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Self Learning</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          <div className=\"selfLearning--content\">\r\n            {this.props.individual ? (\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>\r\n                    {this.props.calibration} ±{\" \"}\r\n                    {(this.props.tolerance * 100).toFixed(1)} %\r\n                  </div>\r\n                </FitText>\r\n              </div>\r\n            ) : (\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>\r\n                    {this.props.calibration} ±{\" \"}\r\n                    {(this.props.matchedTolerance * 100).toFixed(1)} %\r\n                  </div>\r\n                </FitText>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return { ...state.internal.selfLearning };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"infobar\">\r\n        <FitText>\r\n          <div className=\"infobar--item\">\r\n            <div className=\"center\">{this.props.name}</div>\r\n          </div>\r\n        </FitText>\r\n        <FitText>\r\n          <div className=\"infobar--item\">\r\n            <div className=\"center\">{this.props.ip}</div>\r\n          </div>\r\n        </FitText>\r\n        <FitText>\r\n          <div className=\"infobar--item\">\r\n            <div className=\"center\">\r\n              {moment(this.props.time).format(\"HH:mm:ss\")}\r\n            </div>\r\n          </div>\r\n        </FitText>\r\n        <FitText>\r\n          <div className=\"infobar--item\">\r\n            <div className=\"center\">\r\n              {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n            </div>\r\n          </div>\r\n        </FitText>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    name: state.static.name,\r\n    ip: state.misc.ip,\r\n    time: state.misc.time\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComElement from \"./ComElement\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.reloadLogEntries({ target: { checked: this.state.logModalUnique } });\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e.target.checked;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend.map((name, index) => ({\r\n          Header: () => <b>{name}</b>,\r\n          accessor: index + \"\",\r\n          width: getColumnWidth(result.data.entries, index + \"\"),\r\n          style: { textAlign: \"center\" }\r\n        })),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div>Loading</div>;\r\n    }\r\n\r\n    const showTable = this.props.cells.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n    const showInputs = this.props.outputs.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n    const showOutputs = this.props.outputs.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n    const showPorts = showInputs || showOutputs;\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        .\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noports\": !showPorts },\r\n            { \"main--notable\": !showTable }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <Infobar />\r\n          <div className=\"logos\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n            {this.props.selfLearningEnabled && <SelfLearning />}\r\n          </div>\r\n          <div className=\"coms\">\r\n            {this.props.coms.map((com, index) => {\r\n              return (\r\n                <ComElement\r\n                  key={index}\r\n                  name={com.name}\r\n                  entry={com.entry}\r\n                  time={com.time}\r\n                  average={com.average}\r\n                  entries={com.entries}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {showPorts && (\r\n            <div className=\"ports\">\r\n              {showOutputs && (\r\n                <OutputList\r\n                  outputs={this.props.outputs}\r\n                  clickFunction={this.props.api.forceOutput}\r\n                />\r\n              )}\r\n              {showInputs && (\r\n                <InputList\r\n                  inputs={this.props.inputs}\r\n                  clickFunction={this.props.api.forceInput}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n          {showTable && (\r\n            <div className=\"table\">\r\n              <Table\r\n                api={this.props.api}\r\n                cells={this.props.cells}\r\n                openLog={this.openLogModal}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  const selfLearningEnabled = state.internal.selfLearning.enabled;\r\n\r\n  const configLocked = state.config.locked;\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    coms,\r\n    inputs,\r\n    outputs,\r\n    cells,\r\n    selfLearningEnabled,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      return { ...state, hasChanged: true, ...state };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  }\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      newComs[index] = { entry, entryTime };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      console.log(action.payload);\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME, TOGGLE_MENU } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC\r\n} from \"./actions/types\";\r\n\r\nconst APIendPoint = \"http://\" + window.location.hostname + \":80\";\r\n//const APIendPoint = \"http://192.168.1.67:80\";\r\nconsole.log(APIendPoint);\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient(APIendPoint);\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  axios\r\n    .get(APIendPoint + \"/config\")\r\n    .then(result => {\r\n      console.log(\"Got config\");\r\n      store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n    })\r\n    .catch(err => console.log(APIendPoint + \"/config\", err));\r\n\r\n  axios.get(APIendPoint + \"/static\").then(result => {\r\n    console.log(\"Got static\");\r\n    store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n  });\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(APIendPoint + \"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(APIendPoint + \"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(APIendPoint + \"/restart\");\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(APIendPoint + \"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(APIendPoint + \"/logo\");\r\n      logo = APIendPoint + \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig() {\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        //save config\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        //reload page after some seconds\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(changes) {\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: changes });\r\n  }\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}