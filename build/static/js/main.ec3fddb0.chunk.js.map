{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/modals/SelfLearningModal.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","api","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Object","keys","map","key","element","filter","conditions","condition","Fragment","contents","defaultStruct","structure","defaults","className","onClick","changeConfig","concat","options","keyOptions","option","splice","onChange","e","target","console","log","entries","entry","numeric","event","min","max","step","checked","rounding","round","num","digits","factor","Math","pow","getColumnWidth","rows","accessor","cellLength","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","daysToDate","days","Date","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","closeMenu","closeUploadModal","openLogModal","logModalIsOpen","closeLogModal","uploadLog","window","confirm","deleteLog","downloadAllLogs","deleteAllLogs","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","contentLabel","id","action","method","enctype","accept","logList","downloadLog","ftpTargets","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","component_default","writeLogs","exposeUpload","getLogList","reboot","exposeShutdown","shutdown","QS","Component","connect","loaded","static","locked","misc","logger","writeToFile","FTP","targets","configurationValues","serial","coms","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","i","com","objectSpread","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","seconds","manualConfirmation","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","manualFunction","menuOptions","newMenuIndex","findIndex","date","getDate","getMonth","getFullYear","tableCell--notFound","notFound","openModal","style","backgroundColor","color","table","cells","normal","manual","menu","includes","resetOnExe","colorConditions","#3fd35d","yellow","#ffc000","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","individualColors","textColors","SelfLearningModal","toggleIndividualTable","showIndividualTable","getSLModalContent","keyName","valueName","generalTableColumns","Header","Cell","toFixed","textAlign","tableExtraColumnTitle","deleteGeneralSL","original","column","individualTableColumns","increments","numUpdatesHistory","deleteIndividualSL","individualEntries","generalEntries","push","resetIndividualSL","react_table_es","data","columns","onClose","individual","selfLearning","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","isUndefined","enabled","off","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","endsWith","individualToleranceAbs","individualTolerance","individualCorrectionIncrement","individualCorrectionLimit","tableExtraColumn","calibration","success","matchedTolerance","modals_SelfLearningModal","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","toConsumableArray","charCodeAt","logID","unique","resetMode","time","interval","resetTime","resetInterval","automatic","folder","username","password","configList","deleteConfig","loadConfig","downloadConfig","click","file","files","versionName","version","configExists","then","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","logTableColumns","legend","accessors","uniqueLogEnabled","logEntries","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","fontSize","components_Infobar","components_Logo","openMenu","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","formulaResults","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","OPEN_MENU","CLOSE_MENU","RECEIVE_CONFIG_LIST","RECEIVE_LOG_LIST","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","_action$payload4","newCells","_action$payload5","store","socket","socketIOClient","messageTypes","tableColor","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","Promise","resolve","_ref","getState","forEach","document","toggleMenu","newConfig","stringify","consistent","location","reload","href","msg","fileList","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ec3fddb0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, api, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  api,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(\r\n            element,\r\n            config,\r\n            api,\r\n            index,\r\n            name + \"[\" + index + \"]\"\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                api,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const stucture = value.structure;\r\n        const defaultStruct = value.defaults;\r\n\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"test\">a</div>\r\n            ))}\r\n            <br />\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    api.changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    api.changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      console.log(`${name}[${index}].key`, e.target.value);\r\n                      api.changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      api.changeConfig(\r\n                        `${name}[${index}].key`,\r\n                        e.target.value,\r\n                        {\r\n                          numeric: true\r\n                        }\r\n                      );\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                api.changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                api.changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={\r\n                value.rounding\r\n                  ? round(get(config, name), value.rounding)\r\n                  : get(config, name)\r\n              }\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  api.changeConfig(name, event.target.checked);\r\n                } else {\r\n                  api.changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${get(row, accessor)}` || \"\").length)\r\n  );\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false, logModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.api.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.api.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.api.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.api.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.api.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.api.closeMenu;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"submit\" value=\"Import .xls\" />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.api.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.closeMenu()\r\n          }\r\n          width={450}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            <span\r\n              onClick={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            >\r\n              Unlock settings\r\n            </span>{\" \"}\r\n            <Toggle\r\n              checked={!this.props.configLocked}\r\n              onChange={() => {\r\n                closeMenu();\r\n                this.toggleConfigLock();\r\n              }}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.api.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.openUploadModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: []\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\"\r\n          }\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.input.ports[index].formula === \"command\"\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.input.ports[index].formula === \"command\"\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) -\r\n            1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.key === Number(cell.value)) +\r\n            1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() +\r\n        1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div\r\n        className=\"tableCell--content\"\r\n        style={{ backgroundColor: !props.notFound && cell.color }}\r\n      >\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\"\r\n          }\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"reader\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type !== \"date\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type) &&\r\n            !config.table.cells[index].readerPort\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) =>\r\n            config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            [\"normal\", \"reader\"].includes(config.table.cells[index].type)\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.props.api,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showIndividualTable: true };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  getSLModalContent = () => {\r\n    const keyName = this.props.config.serial.coms[1 - this.props.comIndex].name;\r\n    const valueName = this.props.config.serial.coms[this.props.comIndex].name;\r\n    const rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: row => row.entries[0],\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 10,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 2,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 3,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 5,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: this.props.tableExtraColumnTitle,\r\n        accessor: \"extra\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b>Delete</b>\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ].map(column => ({ ...column, Header: <b>{column.Header}</b> }));\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: valueName,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(rounding),\r\n        id: 12\r\n      },\r\n      {\r\n        Header: keyName,\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: this.props.tableExtraColumnTitle,\r\n        accessor: \"extra\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor:\r\n                  individualColors[Math.min(4, props.original.increments)],\r\n                color: textColors[Math.min(4, props.original.increments)]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}\r\n            </div>\r\n          );\r\n        },\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50,\r\n        id: 1\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50,\r\n        id: 2\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50,\r\n        id: 3\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            <b>Delete</b>\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ].map(column => ({\r\n      ...column,\r\n      Header: (\r\n        <>\r\n          <b>{column.Header}</b>\r\n        </>\r\n      )\r\n    }));\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, ...this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle\r\n            checked={this.state.showIndividualTable}\r\n            onChange={this.toggleIndividualTable}\r\n          />\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}\r\n        </span>\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  \"Are you sure you want to reset the data of the individual selfLearning?\"\r\n                )\r\n              )\r\n                this.props.api.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b>Reset</b>\r\n          </button>\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n            <ReactTable\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n            <ReactTable\r\n              style={{ textAlign: \"center\" }}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearningModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex))\r\n      rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        number: {\r\n          name: \"Number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled !== \"off\"\r\n        },\r\n        startCalibration: {\r\n          name: \"Calibration\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          rounding,\r\n          condition: config => config.selfLearning.enabled !== \"off\"\r\n        },\r\n        tolerance: {\r\n          name: \"Tolerance %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled !== \"off\"\r\n        },\r\n        startTolerance: {\r\n          name: \"Extra tolerance during learning %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config =>\r\n            config.selfLearning.enabled !== \"off\" &&\r\n            !config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualToleranceAbs: {\r\n          name: \"Individual tolerance\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualTolerance: {\r\n          name: \"Individual tolerance %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualCorrectionIncrement: {\r\n          name: \"Correction %\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        individualCorrectionLimit: {\r\n          name: \"Correction limit (max 9)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          max: 9,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        tableExtraColumnTitle: {\r\n          name: \"Extra column title\",\r\n          type: \"text\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        },\r\n        tableExtraColumn: {\r\n          name: \"Extra column number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onClose={this.closeSLModal}\r\n          api={this.props.api}\r\n        />\r\n\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\"\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\"\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"]\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            options: [...Array(26).keys()].map(i =>\r\n              String.fromCharCode(\"A\".charCodeAt(0) + i)\r\n            )\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\"\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\"\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\"\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\"\r\n            }\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: config => config.logger.resetMode === \"time\"\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: config => config.logger.resetMode === \"interval\"\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\"\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\"\r\n          },\r\n          targets: [1, 2].map(index => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\"\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\"\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\"\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\"\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\"\r\n            }\r\n          }))\r\n        }\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.props.api.configExists(file.name).then(result => {\r\n                console.log(result);\r\n                if (\r\n                  result &&\r\n                  !window.confirm(\"Config already exists. Overwrite?\")\r\n                )\r\n                  return;\r\n\r\n                this.uploadRef.parentElement.submit();\r\n              });\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config, this.props.api)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: result.data.accessors[index],\r\n            width: getColumnWidth(\r\n              result.data.entries,\r\n              result.data.accessors[index]\r\n            ),\r\n            style: { textAlign: \"center\" },\r\n            Cell: props => {\r\n              if (typeof props.value === \"number\") {\r\n                return props.value.toFixed(result.data.digits[index]);\r\n              }\r\n              return props.value;\r\n            },\r\n            name\r\n          }))\r\n          .filter((column, index) => index >= 2)\r\n          .filter(\r\n            column => this.props.uniqueLogEnabled || column.name !== \"TU\"\r\n          ),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />{\" \"}\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  <b>\r\n                    {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                  </b>\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 14 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.openMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.input.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.output.ports.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: []\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    tableColor: TABLE_CELL_COLOR,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    const state = store.getState();\r\n    const port = {\r\n      ...state.config.input.ports[index],\r\n      ...state.internal.inputs[index]\r\n    };\r\n\r\n    const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n    if (\r\n      askForConfirmation &&\r\n      !window.confirm(`Are you sure you want to manually change ${port.name}?`)\r\n    )\r\n      return;\r\n\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    const state = store.getState();\r\n    const port = {\r\n      ...state.config.output.ports[index],\r\n      ...state.internal.outputs[index]\r\n    };\r\n\r\n    const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n    if (\r\n      askForConfirmation &&\r\n      !window.confirm(`Are you sure you want to manually change ${port.name}?`)\r\n    )\r\n      return;\r\n\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function openMenu() {\r\n    store.dispatch({ type: OPEN_MENU });\r\n  }\r\n\r\n  function closeMenu() {\r\n    store.dispatch({ type: CLOSE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      configExists(name).then(result => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      socket.emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n        if (\r\n          (consistent ||\r\n            window.confirm(\"This will reset the log, continue?\")) &&\r\n          window.confirm(\"Are you sure you want to save these changes?\")\r\n        ) {\r\n          socket.emit(\"settings\", newConfig);\r\n          store.dispatch({ type: CONFIG_LOCK });\r\n          reboot();\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      });\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(address, value, options) {\r\n    if (options && options.numeric) {\r\n      value = Number(value);\r\n    }\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  function resetIndividualSL() {\r\n    socket.emit(\"resetIndividualSL\");\r\n  }\r\n\r\n  function getLogList() {\r\n    socket.emit(\"getLogList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function uploadLog(name, index) {\r\n    socket.emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n  }\r\n\r\n  function downloadLog(name) {\r\n    window.location.href = \"/downloadLog?file=\" + name;\r\n  }\r\n\r\n  function downloadAllLogs() {\r\n    window.location.href =\r\n      \"/downloadLog?multiFile=\" + store.getState().misc.logList;\r\n  }\r\n\r\n  function deleteAllLogs() {\r\n    const fileList = store.getState().misc.logList;\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      socket.emit(\"deleteLog\", fileList[i]);\r\n    }\r\n    getLogList();\r\n  }\r\n\r\n  function deleteLog(name) {\r\n    socket.emit(\"deleteLog\", name);\r\n    getLogList();\r\n  }\r\n\r\n  function configExists(name) {\r\n    return new Promise(resolve => {\r\n      socket.emit(\"configExists\", name, ({ result }) => resolve(result));\r\n    });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    openMenu,\r\n    closeMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL,\r\n    getLogList,\r\n    uploadLog,\r\n    deleteLog,\r\n    downloadLog,\r\n    downloadAllLogs,\r\n    deleteAllLogs,\r\n    configExists,\r\n    resetIndividualSL\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}