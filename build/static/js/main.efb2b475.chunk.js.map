{"version":3,"sources":["actions/excelActions.js","actions/logActions.js","actions/menuActions.js","actions/configActions.js","actions/internalActions.js","actions/selfLearningActions.js","components/Sidebar.js","components/modals/LogModal.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/util/ReactTableWrapper.js","components/modals/SelfLearningModal.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","actions/messageTypes.js","actions/socketApi.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg","helpers.js"],"names":["downloadExcel","window","location","href","uploadExcel","input","document","createElement","type","accept","onchange","event","data","FormData","append","target","files","axios","post","then","alert","catch","click","uploadExcelTemplate","getLogList","dispatch","getState","emit","list","RECEIVE_LOG_LIST","payload","openMenu","OPEN_MENU","reboot","get","setTimeout","loadConfig","changeConfig","address","value","options","numeric","Number","CONFIG_CHANGE","getConfigList","RECEIVE_CONFIG_LIST","name","config","RECEIVE_CONFIG","JSON","parse","result","console","log","err","configExists","Promise","resolve","saveConfig","newConfig","stringify","loaded","locked","hasChanged","confirm","consistent","CONFIG_LOCK","reload","setDateTime","date","resetSLData","success","ftpTargetsValues","logger","resetTime","condition","resetMode","resetInterval","min","step","FTP","targets","map","index","title","folder","username","password","Sidebar","props","toggleConfigLock","isMenuOpen","configLocked","unlockConfig","openLogModal","setState","logModalIsOpen","closeMenu","closeLogModal","openDateTimeModal","dateTimeModalIsOpen","closeDateTimeModal","openNewCycleModal","newCycleModalIsOpen","closeNewCycleModal","openPasswordPrompt","passwordPromptIsOpen","closePasswordPrompt","openFtpTargetsModal","ftpTargetsModalIsOpen","closeFtpTargetsModal","uploadLog","deleteLog","downloadAllLogs","deleteAllLogs","handleQSClicked","state","qsClickedTimes","handlePasswordSubmitted","e","preventDefault","confirmPassword","correct","newDate","moment","time","format","this","rounding","isUndefined","comIndex","serial","coms","digits","newCycleValues","selfLearning","onClick","resetSL","logID","configuration","startCalibration","totalNumber","isOpen","onRequestClose","overlayClassName","className","contentLabel","logList","downloadLog","ftpTargets","onSubmit","onChange","makeForm","right","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","newState","width","exposeSettings","checked","selfLearningEnabled","endsWith","writeLogs","exposeUpload","exposeShutdown","shutdown","QS","Component","connect","static","misc","writeToFile","enabled","fileList","i","length","CONFIG_UNLOCK","toggleMenu","TOGGLE_MENU","CLOSE_MENU","msg","callback","LogModal","changeFilterType","filterType","filterTypes","id","filter","entry","full","uniqueLogEnabled","push","TU","activityCounter","TA","currentFilter","find","loggerState","entries","accessors","legend","visible","columns","Header","accessor","getColumnWidth","style","textAlign","Cell","toFixed","_","column","filteredEntries","onClose","fontSize","unique","internal","configurationValues","mode","reader","test","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","alwaysPositive","timeoutReset","timeout","prefix","postfix","autoCommandEnabled","autoCommandMin","autoCommandMax","autoCommandTime","autoCommandText","ComList","openConfigModal","configModalIsOpen","closeConfigModal","toggleShowHistory","showHistory","element","com","key","classNames","compressor","history","slice","timeString","Modal","setAppElement","output","ports","hardwareOutput","formula","execute","seconds","manualConfirmation","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","forceOutput","hardwareInput","exe","exebl","reset","teach","restart","command","commandCom","com0","com1","commandValue","invert","follow","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","message","manualFunction","menuOptions","option","newMenuIndex","findIndex","daysToDate","getDate","getMonth","getFullYear","notFound","openModal","backgroundColor","color","table","cells","showInLog","normal","manual","menu","includes","resetOnExe","colorConditions","yellow","Table","configCellIndex","cellConfig","String","fromCharCode","Math","floor","tableManual","openLog","tableNotFound","ReactTableWrapper","Headers","ref","forwardRef","individualColors","textColors","sum","reduce","acc","cur","SelfLearningModal","toggleIndividualTable","showIndividualTable","UNTable","React","createRef","SLTable","comConfigs","extraColumnConfigs","extraColumns","keyName","valueName","valueRounding","firstTopDigits","secondTopDigits","individualEntries","generalEntries","individualColumnHeaders","headerRoundings","formattedHeaders","header","row","extra","dateFormat","max","generalVisible","generalTableColumns","deleteGeneralSL","original","activity","activityHistory","individualTableColumns","showTolerance","incrementIndex","increments","numUpdates","numUpdatesHistory","exitOptions","deleteIndividualSL","tableStyle","marginRight","cols","tableRef","sheetName","splice","col","current","getResolvedState","sortedData","Object","values","newRow","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","Date","writeFile","resetIndividualSL","getSLModalContent","individual","tableExtraColumnTitle","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","off","com0ind","com1ind","contents","LogID","numberPercentage","tolerance","startTolerance","important","individualToleranceAbs","individualTolerance","individualToleranceShift","individualCorrectionIncrement","individualCorrectionLimit","individualAverageNumber","excelIndividualColumn","Array","keys","charCodeAt","excelDateColumn","excelExitColumn","firstTopFormula","secondTopFormula","structure","topFormula","text","number","defaults","calibration","round","matchedTolerance","Logo","src","image","alt","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","csvSeparator","interval","automatic","configList","deleteConfig","downloadConfig","uploadConfig","version","prompt","ip","currentVersion","file","versionName","match","split","Main","reloadInterval","setInterval","getLog","clearInterval","loadStatic","a","async","logo","getLogo","logModalFilterType","logEntries","logTableColumns","MBDC","showInputs","showTable","showOutputs","showSelfLearning","some","enabledModules","RECEIVE_STATIC","LOGGER_STATE","App","require","set","initialState","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","TABLE_CELL_COLOR","SELFLEARNING_STATE","TABLE_FOUND_STATE","SERIAL_CLEAR","formulaResults","RECEIVE_IP","RECEIVE_TIME","getTime","combineReducers","action","fullState","newInputs","from","newOutputs","newHistory","entryTime","newComs","newCells","tableColor","notfound","clearSerial","socket","io","Boolean","hostname","middleware","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducer","messageTypes","init","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","object","parts","replace","newAddress","newValue","isArray","conditions","oldName","defaultStruct","concat","keyOptions","undefined","num","pow","rows","cellLength","days"],"mappings":"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","file":"static/js/main.efb2b475.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const downloadExcel = () => {\r\n  window.location.href = \"/downloadExcel\";\r\n};\r\n\r\nexport const uploadExcel = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"excelFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importExcel\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel file.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel file.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const uploadExcelTemplate = () => {\r\n  const uploadFunction = event => {\r\n    const data = new FormData();\r\n    data.append(\"templateFile\", event.target.files[0]);\r\n    axios\r\n      .post(\"/importTemplate\", data)\r\n      .then(() => window.alert(\"Successfully imported Excel template.\"))\r\n      .catch(() => window.alert(\"Error uploading Excel template.\"));\r\n  };\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".xls\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n","import axios from \"axios\";\r\nimport { RECEIVE_LOG_LIST, LOGGER_STATE } from \"./types\";\r\n\r\nexport const downloadLog = name => {\r\n  window.location.href = \"/downloadLog?file=\" + name;\r\n};\r\n\r\nexport const downloadAllLogs = () => (dispatch, getState) => {\r\n  window.location.href = \"/downloadLog?multiFile=\" + getState().misc.logList;\r\n};\r\n\r\nexport const getLogList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getLogList\", null, list => {\r\n    dispatch({ type: RECEIVE_LOG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const uploadLog = (name, index) => (dispatch, getState, { emit }) => {\r\n  emit(\"uploadLog\", { name, index }, msg => window.alert(msg));\r\n};\r\n\r\nexport const deleteAllLogs = () => (dispatch, getState, { emit }) => {\r\n  const fileList = getState().misc.logList;\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    emit(\"deleteLog\", fileList[i]);\r\n  }\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const deleteLog = name => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteLog\", name);\r\n  dispatch(getLogList());\r\n};\r\n\r\nexport const getLog = () => dispatch => {\r\n  axios.get(\"/comlog\").then(result => {\r\n    dispatch({ type: LOGGER_STATE, payload: result.data });\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { TOGGLE_MENU, OPEN_MENU, CLOSE_MENU, CONFIG_UNLOCK } from \"./types\";\r\n\r\nimport { loadConfig } from \"./configActions\";\r\n\r\nexport const toggleMenu = () => dispatch => {\r\n  dispatch({ type: TOGGLE_MENU });\r\n};\r\n\r\nexport const openMenu = () => dispatch => {\r\n  dispatch({ type: OPEN_MENU });\r\n};\r\n\r\nexport const closeMenu = () => dispatch => {\r\n  dispatch({ type: CLOSE_MENU });\r\n};\r\n\r\nexport const unlockConfig = () => dispatch => {\r\n  dispatch({ type: CONFIG_UNLOCK });\r\n};\r\n\r\nexport const reboot = () => dispatch => {\r\n  axios.get(\"/restart\");\r\n  setTimeout(() => {\r\n    dispatch(loadConfig());\r\n  }, 5000);\r\n};\r\n\r\nexport const shutdown = () => {\r\n  axios.get(\"/shutdown\");\r\n};\r\n\r\nexport const getLogo = async () => {\r\n  let logo = false;\r\n  try {\r\n    await axios.get(\"/logo\");\r\n    logo = \"/logo\";\r\n  } finally {\r\n    return logo;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { RECEIVE_CONFIG_LIST, CONFIG_CHANGE, RECEIVE_CONFIG, RECEIVE_STATIC, CONFIG_LOCK } from \"./types\";\r\nimport { reboot } from \"./menuActions\";\r\n\r\nexport const downloadConfig = name => {\r\n  window.location.href = \"/downloadConfig?file=\" + name;\r\n};\r\n\r\nexport const changeConfig = (address, value, options) => dispatch => {\r\n  if (options && options.numeric) {\r\n    value = Number(value);\r\n  }\r\n  dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n};\r\n\r\nexport const getConfigList = () => (dispatch, getState, { emit }) => {\r\n  emit(\"getConfigList\", null, list => {\r\n    dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n  });\r\n};\r\n\r\nexport const deleteConfig = name => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n    emit(\"deleteConfig\", name);\r\n    dispatch(getConfigList());\r\n  }\r\n};\r\n\r\nexport const loadConfig = name => (dispatch, getState, { emit }) => {\r\n  if (name) {\r\n    emit(\"loadConfig\", name, config => {\r\n      dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n    });\r\n  } else {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n};\r\n\r\nexport const loadStatic = () => dispatch => {\r\n  axios.get(\"/static\").then(result => {\r\n    dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n    document.title = result.data.name;\r\n  });\r\n};\r\n\r\nexport const configExists = name => (dispatch, getState, { emit }) => {\r\n  return new Promise(resolve => {\r\n    emit(\"configExists\", name, ({ result }) => resolve(result));\r\n  });\r\n};\r\n\r\nexport const saveConfig = name => (dispatch, getState, { emit }) => {\r\n  const newConfig = JSON.parse(JSON.stringify(getState().config));\r\n  delete newConfig.loaded;\r\n  delete newConfig.locked;\r\n  delete newConfig.hasChanged;\r\n\r\n  if (name) {\r\n    dispatch(configExists(name)).then(result => {\r\n      if (!result || window.confirm(\"File already exists, do you want to overwrite?\")) {\r\n        emit(\"saveConfig\", { name: name, config: newConfig });\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (getState().config.hasChanged) {\r\n    emit(\"checkConfigConsistency\", newConfig, consistent => {\r\n      if (\r\n        (consistent || window.confirm(\"This will reset the log, continue?\")) &&\r\n        window.confirm(\"Are you sure you want to save these changes?\")\r\n      ) {\r\n        emit(\"settings\", newConfig);\r\n        dispatch({ type: CONFIG_LOCK });\r\n        dispatch(reboot());\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    dispatch({ type: CONFIG_LOCK });\r\n  }\r\n};\r\n\r\nexport const uploadConfig = currentVersion => dispatch => {\r\n  const uploadFunction = event => {\r\n    const file = event.target.files[0];\r\n\r\n    const versionName = file.name.match(/V[0-9.]+\\.json$/);\r\n    if (!versionName) {\r\n      alert(\"Config does not have a valid name\");\r\n      return;\r\n    }\r\n    const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n    const currentMayorVersion = currentVersion.split(\".\")[0];\r\n\r\n    if (mayorVersion !== currentMayorVersion) {\r\n      alert(\"Version of new config does not match the current one\");\r\n      return;\r\n    }\r\n\r\n    dispatch(configExists(file.name)).then(result => {\r\n      if (result && !window.confirm(\"Config already exists. Overwrite?\")) return;\r\n\r\n      const data = new FormData();\r\n      data.append(\"configFile\", file);\r\n      axios\r\n        .post(\"/uploadConfig\", data)\r\n        .then(() => {\r\n          window.alert(\"Successfully uploaded new config.\");\r\n          dispatch(getConfigList());\r\n        })\r\n        .catch(() => window.alert(\"Error uploading new config.\"));\r\n    });\r\n  };\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \".json\";\r\n  input.onchange = uploadFunction;\r\n  input.click();\r\n};\r\n\r\nexport const confirmPassword = (password, callback) => (dispatch, getState, { emit }) => {\r\n  emit(\"confirmPassword\", password, callback);\r\n};\r\n","export const forceInput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.input.ports[index],\r\n    ...state.internal.inputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceInput\", index);\r\n};\r\n\r\nexport const forceOutput = index => (dispatch, getState, { emit }) => {\r\n  const state = getState();\r\n  const port = {\r\n    ...state.config.output.ports[index],\r\n    ...state.internal.outputs[index]\r\n  };\r\n\r\n  const askForConfirmation = port.manualConfirmation && !port.isForced;\r\n\r\n  if (askForConfirmation && !window.confirm(`Are you sure you want to manually change ${port.name}?`)) return;\r\n\r\n  emit(\"forceOutput\", index);\r\n};\r\n\r\nexport const tableManual = (index, value) => (dispatch, getState, { emit }) => {\r\n  emit(\"manual\", { index, value });\r\n};\r\n\r\nexport const setDateTime = date => (dispatch, getState, { emit }) => {\r\n  emit(\"setDateTime\", date);\r\n};\r\n","export const deleteGeneralSL = key => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteGeneralSL\", key);\r\n};\r\n\r\nexport const deleteIndividualSL = (key, message) => (dispatch, getState, { emit }) => {\r\n  emit(\"deleteIndividualSL\", { key, message }, totalNumber =>\r\n    window.alert(`Total SL number has been lowered from ${totalNumber + 1} to ${totalNumber}`)\r\n  );\r\n};\r\n\r\nexport const resetIndividualSL = () => (dispatch, getState, { emit }) => {\r\n  emit(\"resetIndividualSL\");\r\n};\r\n\r\nexport const resetSLData = () => (dispatch, getState, { emit }) => {\r\n  if (window.confirm(\"This will clear the Excel file. Do you want to download it first?\")) {\r\n    return;\r\n  }\r\n  if (window.confirm(\"Are you sure you want to clear all SL data?\")) {\r\n    emit(\"deleteSLData\", {}, success => {\r\n      if (success) {\r\n        window.alert(\"Successfully started new cycle\");\r\n      }\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\nimport moment from \"moment\";\r\n\r\nimport { downloadExcel, uploadExcel } from \"../actions/excelActions\";\r\nimport { downloadAllLogs, downloadLog, deleteLog, deleteAllLogs, getLogList, uploadLog } from \"../actions/logActions\";\r\nimport { saveConfig, changeConfig, confirmPassword } from \"../actions/configActions\";\r\nimport { unlockConfig, toggleMenu, openMenu, closeMenu, reboot, shutdown } from \"../actions/menuActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { isUndefined } from \"util\";\r\nimport \"../styles/sidebar.scss\";\r\n\r\nconst ftpTargetsValues = {\r\n  logger: {\r\n    resetTime: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: config => config.logger.resetMode === \"time\"\r\n    },\r\n    resetInterval: {\r\n      name: \"Interval (min)\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.logger.resetMode === \"interval\"\r\n    }\r\n  },\r\n  FTP: {\r\n    targets: [1, 2].map(index => ({\r\n      title: {\r\n        name: \"Target \" + index,\r\n        type: \"subtitle\"\r\n      },\r\n      address: {\r\n        name: \"Address\",\r\n        type: \"text\"\r\n      },\r\n      folder: {\r\n        name: \"Folder\",\r\n        type: \"text\"\r\n      },\r\n      username: {\r\n        name: \"Username\",\r\n        type: \"text\"\r\n      },\r\n      password: {\r\n        name: \"Password\",\r\n        type: \"text\"\r\n      }\r\n    }))\r\n  }\r\n};\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      dateTimeModalIsOpen: false,\r\n      newCycleModalIsOpen: false,\r\n      passwordPromptIsOpen: false,\r\n      password: \"\",\r\n      ftpTargetsModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\"),\r\n      qsClickedTimes: 0\r\n    };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (!this.props.isMenuOpen) return;\r\n\r\n    if (this.props.configLocked) {\r\n      this.props.unlockConfig();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  openDateTimeModal = () => {\r\n    this.setState({ dateTimeModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeDateTimeModal = () => {\r\n    this.setState({ dateTimeModalIsOpen: false });\r\n  };\r\n\r\n  openNewCycleModal = () => {\r\n    this.props.unlockConfig();\r\n    this.setState({ newCycleModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeNewCycleModal = () => {\r\n    this.props.saveConfig();\r\n    this.setState({ newCycleModalIsOpen: false });\r\n  };\r\n\r\n  openPasswordPrompt = () => {\r\n    this.setState({ passwordPromptIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closePasswordPrompt = () => {\r\n    this.setState({ passwordPromptIsOpen: false });\r\n  };\r\n\r\n  openFtpTargetsModal = () => {\r\n    this.props.unlockConfig();\r\n    this.setState({ ftpTargetsModalIsOpen: true });\r\n    this.props.closeMenu();\r\n  };\r\n\r\n  closeFtpTargetsModal = () => {\r\n    this.props.saveConfig();\r\n    this.setState({ ftpTargetsModalIsOpen: false });\r\n  };\r\n\r\n  uploadLog = (log, index) => {\r\n    if (window.confirm(\"Do you really want to upload \" + log + \"?\")) {\r\n      this.props.uploadLog(log, index);\r\n    }\r\n  };\r\n\r\n  deleteLog = log => {\r\n    if (window.confirm(\"Do you really want to delete \" + log + \"?\")) {\r\n      this.props.deleteLog(log);\r\n    }\r\n  };\r\n\r\n  downloadAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to download all logs?\")) {\r\n      this.props.downloadAllLogs();\r\n    }\r\n  };\r\n\r\n  deleteAllLogs = () => {\r\n    if (window.confirm(\"Do you really want to delete all logs?\")) {\r\n      this.props.deleteAllLogs();\r\n    }\r\n  };\r\n\r\n  handleQSClicked = () => {\r\n    if (this.state.qsClickedTimes < 5) {\r\n      this.setState({ qsClickedTimes: this.state.qsClickedTimes + 1 });\r\n      return;\r\n    }\r\n\r\n    if (this.props.configLocked) {\r\n      this.openPasswordPrompt();\r\n    } else {\r\n      this.props.saveConfig();\r\n    }\r\n  };\r\n\r\n  handlePasswordSubmitted = e => {\r\n    e.preventDefault();\r\n    this.props.confirmPassword(this.state.password, correct => {\r\n      if (correct) {\r\n        this.props.unlockConfig();\r\n      } else {\r\n        window.alert(\"Password incorrect\");\r\n      }\r\n    });\r\n    this.closePasswordPrompt();\r\n  };\r\n\r\n  render() {\r\n    const closeMenu = this.props.closeMenu;\r\n\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const newCycleValues = {\r\n      selfLearning: {\r\n        downloadExcel: {\r\n          name: \"Download Excel file\",\r\n          type: \"button\",\r\n          onClick: () => {\r\n            this.props.downloadExcel();\r\n          }\r\n        },\r\n        resetSL: {\r\n          name: \"Reset Self Learning Data\",\r\n          type: \"button\",\r\n          onClick: () => {\r\n            this.props.resetSLData();\r\n          }\r\n        },\r\n        logID: {\r\n          type: \"external\",\r\n          location: \"logger.logID\",\r\n          configuration: {\r\n            name: \"LogID\",\r\n            type: \"text\"\r\n          }\r\n        },\r\n        startCalibration: {\r\n          name: \"Calibration\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          rounding\r\n        },\r\n        totalNumber: {\r\n          name: \"Total number\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.logModalIsOpen}\r\n          onRequestClose={this.closeLogModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Log files Modal\"\r\n        >\r\n          <h2>Upload and download log files</h2>\r\n          <form className=\"logForm\">\r\n            {this.props.logList.map(log => (\r\n              <>\r\n                {log}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={() => {\r\n                    this.deleteLog(log);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Download\"\r\n                  onClick={() => {\r\n                    this.props.downloadLog(log);\r\n                  }}\r\n                />\r\n                {this.props.ftpTargets.map((target, index) => {\r\n                  if (target.address)\r\n                    return (\r\n                      <input\r\n                        type=\"button\"\r\n                        value={`FTP ${index + 1}`}\r\n                        onClick={() => {\r\n                          this.uploadLog(log, index);\r\n                        }}\r\n                      />\r\n                    );\r\n                  return null;\r\n                })}\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Delete\"\r\n              onClick={() => {\r\n                this.deleteAllLogs();\r\n              }}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Download\"\r\n              onClick={() => {\r\n                this.downloadAllLogs();\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.dateTimeModalIsOpen}\r\n          onRequestClose={this.closeDateTimeModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent dateTime\"\r\n          contentLabel=\"Date Time Modal\"\r\n        >\r\n          <h3>Date and Time</h3>\r\n          <br />\r\n          <form\r\n            onSubmit={event => {\r\n              event.preventDefault();\r\n              this.props.setDateTime(this.state.newDate);\r\n            }}\r\n          >\r\n            Change internal time:\r\n            <input type=\"submit\" value=\"Save\" />\r\n            <input\r\n              type=\"datetime-local\"\r\n              name=\"newDate\"\r\n              value={this.state.newDate}\r\n              onChange={event => this.setState({ newDate: event.target.value })}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.newCycleModalIsOpen}\r\n          onRequestClose={this.closeNewCycleModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"New SL Cycle Modal\"\r\n        >\r\n          <form>\r\n            <h2>Start new cycle</h2>\r\n            {this.state.newCycleModalIsOpen && makeForm(newCycleValues, this.props.config, this.props.changeConfig)}\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.passwordPromptIsOpen}\r\n          onRequestClose={this.closePasswordPrompt}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Config Password Prompt\"\r\n        >\r\n          <form onSubmit={this.handlePasswordSubmitted}>\r\n            <h2>Enter password</h2>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n            <br />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.ftpTargetsModalIsOpen}\r\n          onRequestClose={this.closeFtpTargetsModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"FTP Targets Modal\"\r\n        >\r\n          <form>\r\n            <h2>FTP Targets</h2>\r\n            {this.state.ftpTargetsModalIsOpen && makeForm(ftpTargetsValues, this.props.config, this.props.changeConfig)}\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState => !newState.isOpen && closeMenu()}\r\n          width={450}\r\n        >\r\n          {this.props.exposeSettings && (\r\n            <span className=\"menu-item menu-item--clickable\">\r\n              <span\r\n                onClick={() => {\r\n                  closeMenu();\r\n                  this.toggleConfigLock();\r\n                }}\r\n              >\r\n                Unlock settings\r\n              </span>{\" \"}\r\n              <Toggle\r\n                checked={!this.props.configLocked}\r\n                onChange={() => {\r\n                  closeMenu();\r\n                  this.toggleConfigLock();\r\n                }}\r\n              />\r\n            </span>\r\n          )}\r\n          {this.props.selfLearningEnabled.endsWith(\"ind\") && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openNewCycleModal}>\r\n              Start new cycle\r\n            </span>\r\n          )}\r\n          {this.props.writeLogs && this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.getLogList();\r\n                this.openLogModal();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                this.props.downloadExcel();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Download Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={uploadExcel}>\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span className=\"menu-item menu-item--clickable\" onClick={this.openFtpTargetsModal}>\r\n              FTP Targets\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.reboot();\r\n              }\r\n              closeMenu();\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\")) this.props.shutdown();\r\n                closeMenu();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item menu-item--clickable\" onClick={this.openDateTimeModal}>\r\n            Set date and time\r\n          </span>\r\n          <span className=\"menu-item\" onClick={this.handleQSClicked}>\r\n            QS code: {this.props.QS}\r\n          </span>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false,\r\n      logList: [],\r\n      selfLearningEnabled: \"\"\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown,\r\n    exposeSettings: state.static.exposeSettings,\r\n    logList: state.misc.logList,\r\n    ftpTargets: state.config.FTP.targets,\r\n    selfLearningEnabled: state.config.selfLearning.enabled,\r\n    time: state.misc.time\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  downloadExcel,\r\n  downloadAllLogs,\r\n  deleteLog,\r\n  deleteAllLogs,\r\n  downloadLog,\r\n  getLogList,\r\n  unlockConfig,\r\n  toggleMenu,\r\n  openMenu,\r\n  closeMenu,\r\n  saveConfig,\r\n  reboot,\r\n  shutdown,\r\n  uploadLog,\r\n  setDateTime,\r\n  changeConfig,\r\n  resetSLData,\r\n  confirmPassword\r\n})(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport { getColumnWidth } from \"../../helpers\";\r\n\r\nclass LogModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: \"full\"\r\n    };\r\n  }\r\n\r\n  changeFilterType = event => {\r\n    this.setState({ filterType: event.target.value });\r\n  };\r\n\r\n  filterTypes = [\r\n    {\r\n      id: \"full\",\r\n      name: \"Show only complete\",\r\n      title: \"Complete Log\",\r\n      filter: entry => entry.full\r\n    }\r\n  ];\r\n\r\n  componentWillMount() {\r\n    if (this.props.uniqueLogEnabled) {\r\n      this.filterTypes.push({\r\n        id: \"unique\",\r\n        name: \"Show only unique\",\r\n        title: \"Unique Log\",\r\n        filter: entry => entry.TU\r\n      });\r\n    }\r\n\r\n    if (this.props.activityCounter) {\r\n      this.filterTypes.push({\r\n        id: \"activity\",\r\n        name: \"Show only activity\",\r\n        title: \"Activity Log\",\r\n        filter: entry => entry.TA\r\n      });\r\n    }\r\n    this.filterTypes.push({\r\n      id: \"none\",\r\n      name: \"Show all\",\r\n      title: \"Normal Log\",\r\n      filter: entry => true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const currentFilter = this.filterTypes.find(filter => filter.id === this.state.filterType);\r\n\r\n    const { entries, accessors, legend, digits, visible } = this.props.loggerState;\r\n    const columns = legend\r\n      .map((name, index) => ({\r\n        Header: () => <b>{name}</b>,\r\n        accessor: accessors[index],\r\n        width: getColumnWidth(entries, accessors[index]),\r\n        style: { textAlign: \"center\" },\r\n        Cell: props => {\r\n          if (typeof props.value === \"number\") {\r\n            return props.value.toFixed(digits[index]);\r\n          }\r\n          return props.value;\r\n        },\r\n        name\r\n      }))\r\n      .filter((_, index) => visible[index])\r\n      .filter(column => this.props.uniqueLogEnabled || column.name !== \"TU\")\r\n      .filter(column => this.props.activityCounter || column.name !== \"TA\");\r\n\r\n    const filteredEntries = entries.filter(currentFilter.filter);\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"Log Modal\"\r\n      >\r\n        {this.filterTypes.length > 1 && (\r\n          <span>\r\n            <select value={this.state.filterType} onChange={this.changeFilterType}>\r\n              {this.filterTypes.map(filter => (\r\n                <option value={filter.id}>{filter.name}</option>\r\n              ))}\r\n            </select>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"main--logModal\">\r\n          <div>\r\n            <div className=\"main--logModal--title\">\r\n              <b>{currentFilter.title}</b>\r\n            </div>\r\n            <ReactTable style={{ fontSize: 14 }} data={filteredEntries} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  const loggerState = state.internal.logger;\r\n\r\n  return {\r\n    uniqueLogEnabled,\r\n    activityCounter,\r\n    loggerState\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LogModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            reader: \"Reader\",\r\n            test: \"Test\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].numeric\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandEnabled: {\r\n          name: \"AutoCommand\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        autoCommandMin: {\r\n          name: \"Min Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandMax: {\r\n          name: \"Max Value\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandTime: {\r\n          name: \"Time (sec)\",\r\n          type: \"number\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        },\r\n        autoCommandText: {\r\n          name: \"Command\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\" && config.serial.coms[index].autoCommandEnabled\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) => (i === index ? !element : element))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.comIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n          >\r\n            <div\r\n              className=\"comElement--title\"\r\n              onClick={() => {\r\n                if (!this.props.configLocked) {\r\n                  this.openConfigModal(com.index);\r\n                  return;\r\n                }\r\n\r\n                if (!com.average && com.entries > 0) {\r\n                  this.toggleShowHistory(com.index);\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history.slice(0, this.props.config.serial.coms[com.index].entries).map(element => (\r\n                    <>\r\n                      <div>{element.timeString}</div>\r\n                      <div>{element.entry}</div>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeConfig }\r\n)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceOutput } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        hardwareOutput: {\r\n          name: \"Hardware output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"HW Output 1\",\r\n            \"1\": \"HW Output 2\",\r\n            \"2\": \"HW Output 3\",\r\n            \"3\": \"HW Output 4\",\r\n            \"4\": \"HW Output 5\",\r\n            \"5\": \"HW Output 6\",\r\n            \"6\": \"HW Output 7\",\r\n            \"7\": \"HW Output 8\",\r\n            \"8\": \"HW Output 9\",\r\n            \"9\": \"HW Output 10\"\r\n          }\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        seconds: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.output.ports[index].execute\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(port => port.visible);\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forceOutput, changeConfig }\r\n)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { forceInput } from \"../actions/internalActions\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        hardwareInput: {\r\n          name: \"Hardware input\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"HW Input 1\",\r\n            \"1\": \"HW Input 2\",\r\n            \"2\": \"HW Input 3\",\r\n            \"3\": \"HW Input 4\",\r\n            \"4\": \"HW Input 5\"\r\n          }\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            reset: \"Reset Table\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\",\r\n            command: \"COM command\"\r\n          }\r\n        },\r\n        commandCom: {\r\n          name: \"COM to send command\",\r\n          type: \"select\",\r\n          options: {\r\n            com0: \"COM 0\",\r\n            com1: \"COM 1\"\r\n          },\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\"\r\n        },\r\n        commandValue: {\r\n          name: \"Value to send on COM\",\r\n          type: \"text\",\r\n          condition: (config, index) => config.input.ports[index].formula === \"command\"\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualConfirmation: {\r\n          name: \"Manual requires confirmation\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configPortIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => this.props.portsEnabled[index] || !this.props.configLocked)\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(port => port.visible);\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forceInput, changeConfig }\r\n)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { daysToDate } from \"../helpers\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={event => {\r\n            const value = event.target.value;\r\n            const message = props.cell.numeric ? Number(value) : value;\r\n            props.manualFunction(index, message);\r\n          }}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = cell.menuOptions || [];\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.key}>{option.value}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex = menuOptions.findIndex(option => option.key === Number(cell.value)) + 1;\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length) newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].key);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"date\": {\r\n      if (!cell.value || cell.value === \"0\") {\r\n        content = \"\";\r\n        break;\r\n      }\r\n      const date = daysToDate(cell.value);\r\n\r\n      content = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      if (typeof content == \"number\") content = content.toFixed(cell.digits);\r\n\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\" style={{ backgroundColor: !props.notFound && cell.color }}>\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\nimport { tableManual } from \"../actions/internalActions\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        visible: {\r\n          name: \"Visible\",\r\n          type: \"checkbox\"\r\n        },\r\n        showInLog: {\r\n          name: \"Show in log\",\r\n          type: \"checkbox\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\",\r\n            reader: \"Reader\"\r\n          }\r\n        },\r\n        readerPort: {\r\n          name: \"Reader port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => config.table.cells[index].type === \"reader\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) => config.table.cells[index].type !== \"date\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            [\"normal\", \"date\"].includes(config.table.cells[index].type) && !config.table.cells[index].readerPort\r\n        },\r\n        menuOptions: {\r\n          name: \"Options and values for menu\",\r\n          type: \"keyValue\",\r\n          condition: (config, index) => config.table.cells[index].type === \"menu\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) => [\"normal\", \"reader\"].includes(config.table.cells[index].type)\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        colorConditions: {\r\n          name: \"Conditions for cell colors\",\r\n          type: \"keyValue\",\r\n          options: {\r\n            \"#3fd35d\": \"Green\",\r\n            yellow: \"Yellow\",\r\n            \"#ffc000\": \"Orange\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.visible);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>\r\n                Configuration for cell {String.fromCharCode(65 + Math.floor(this.state.configCellIndex / 5))}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig, this.state.configCellIndex)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.tableManual}\r\n              openModal={this.props.configLocked ? this.props.openLog : () => this.openConfigModal(cell.index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { tableManual, changeConfig }\r\n)(Table);\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport \"../../styles/reactTable.scss\";\r\n\r\nlet id = 0;\r\n\r\nexport default function ReactTableWrapper(props) {\r\n  const columns = props.columns.map(column => {\r\n    id++;\r\n    return {\r\n      ...column,\r\n      id,\r\n      style: { ...column.style, ...props.style },\r\n      Header: (\r\n        <div className=\"reactTable--header\">\r\n          {column.Headers.map(element => (\r\n            <div className=\"reactTable--header--child\">{element || \" \"}</div>\r\n          ))}\r\n        </div>\r\n      )\r\n    };\r\n  });\r\n\r\n  return <ReactTable ref={props.forwardRef} data={props.data} columns={columns} />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"../util/ReactTableWrapper\";\r\nimport Toggle from \"react-toggle\";\r\nimport dateFormat from \"dateformat\";\r\nimport XLSX from \"xlsx\";\r\n\r\nimport { daysToDate } from \"../../helpers\";\r\nimport { deleteGeneralSL, deleteIndividualSL, resetIndividualSL } from \"../../actions/selfLearningActions\";\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nfunction sum(list) {\r\n  return list.filter(entry => entry).reduce((acc, cur) => acc + cur, 0);\r\n}\r\n\r\nclass SelfLearningModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.UNTable = React.createRef();\r\n    this.SLTable = React.createRef();\r\n\r\n    this.state = {\r\n      showIndividualTable: true\r\n    };\r\n  }\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({\r\n      showIndividualTable: !this.state.showIndividualTable\r\n    });\r\n  };\r\n\r\n  getSLModalContent() {\r\n    const comConfigs = this.props.config.serial.coms;\r\n    const comIndex = this.props.comIndex;\r\n    const extraColumnConfigs = this.props.config.selfLearning.extraColumns;\r\n\r\n    const keyName = comConfigs[1 - comIndex].name;\r\n    const valueName = comConfigs[comIndex].name;\r\n    const valueRounding = comConfigs[comIndex].digits;\r\n\r\n    const firstTopDigits = this.props.config.selfLearning.firstTopDigits;\r\n    const secondTopDigits = this.props.config.selfLearning.secondTopDigits;\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n    const individualColumnHeaders = this.props.individualColumnHeaders;\r\n    const headerRoundings = [firstTopDigits, secondTopDigits, ...extraColumnConfigs.map(column => column.digits)];\r\n    const formattedHeaders = individualColumnHeaders.map((header, index) =>\r\n      header ? Number(header).toFixed(headerRoundings[index]) : \"\"\r\n    );\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({\r\n        key,\r\n        ...this.props.generalEntries[key]\r\n      });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({\r\n        key,\r\n        ...this.props.individualEntries[key]\r\n      });\r\n    }\r\n\r\n    const extraColumns = this.props.config.selfLearning.extraColumns.map((column, index) => {\r\n      return {\r\n        Headers: [formattedHeaders[index + 2], column.title],\r\n        accessor: row => row.extra[index],\r\n        Cell: props => {\r\n          switch (column.type) {\r\n            case \"text\":\r\n              return props.value ? String(props.value).slice(-column.digits) : \"\";\r\n            case \"number\":\r\n              return Number(props.value).toFixed(column.digits);\r\n            case \"date\":\r\n              return Number(props.value) > 0\r\n                ? dateFormat(daysToDate(Number(props.value)), \"dd-mm-yyyy\")\r\n                : \"Invalid date\";\r\n            default:\r\n              return props.value;\r\n          }\r\n        },\r\n        width: Math.max(80, 11 * column.title.length),\r\n        generalVisible: column.generalVisible\r\n      };\r\n    });\r\n\r\n    const generalTableColumns = [\r\n      {\r\n        Headers: [\"\", valueName],\r\n        accessor: row => row.entries[0],\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-1\"],\r\n        accessor: row => row.entries[1] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-2\"],\r\n        accessor: row => row.entries[2] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-3\"],\r\n        accessor: row => row.entries[3] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", \"-4\"],\r\n        accessor: row => row.entries[4] || \"\",\r\n        Cell: props => (props.value ? props.value.toFixed(valueRounding) : \"\"),\r\n        width: 70\r\n      },\r\n      {\r\n        Headers: [\"\", keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns.filter(column => column.generalVisible),\r\n      {\r\n        Headers: [\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete all general entries?`)) {\r\n                this.props.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            <b> Delete </b>\r\n          </button>,\r\n          \"\"\r\n        ],\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to delete general entries for ${props.original.key}?`)) {\r\n                  this.props.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    if (this.props.activityCounter) {\r\n      generalTableColumns.push(\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(generalEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Headers: [formattedHeaders[0], valueName],\r\n        accessor: \"calibration\",\r\n        width: 70,\r\n        Cell: props => props.value.toFixed(valueRounding)\r\n      },\r\n      {\r\n        Headers: [formattedHeaders[1], keyName],\r\n        accessor: \"key\",\r\n        width: 200\r\n      },\r\n      ...extraColumns\r\n    ];\r\n\r\n    if (this.props.showTolerance) {\r\n      individualTableColumns.push({\r\n        Headers: [\"\", \"Tol\"],\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          const incrementIndex = Math.floor(Math.min(4, props.original.increments));\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[incrementIndex],\r\n                color: textColors[incrementIndex]\r\n              }}\r\n            >\r\n              {props.value.toFixed(1)}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        width: 50\r\n      });\r\n    }\r\n\r\n    individualTableColumns.push(\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdates)), \"Num\"],\r\n        accessor: \"numUpdates\",\r\n        width: 50\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[0])), \"-1\"],\r\n        accessor: row => row.numUpdatesHistory[0] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[1])), \"-2\"],\r\n        accessor: row => row.numUpdatesHistory[1] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      },\r\n      {\r\n        Headers: [sum(individualEntries.map(entry => entry.numUpdatesHistory[2])), \"-3\"],\r\n        accessor: row => row.numUpdatesHistory[2] || \"\",\r\n        width: 50,\r\n        style: {\r\n          backgroundColor: \"#ddd\"\r\n        }\r\n      }\r\n    );\r\n\r\n    if (this.props.activityCounter) {\r\n      individualTableColumns.push(\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activity)), \"TA\"],\r\n          accessor: \"activity\",\r\n          width: 50\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[0])), \"-1\"],\r\n          accessor: row => row.activityHistory[0] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[1])), \"-2\"],\r\n          accessor: row => row.activityHistory[1] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        },\r\n        {\r\n          Headers: [sum(individualEntries.map(entry => entry.activityHistory[2])), \"-3\"],\r\n          accessor: row => row.activityHistory[2] || \"\",\r\n          width: 50,\r\n          style: {\r\n            backgroundColor: \"#ddd\"\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const exitOptions = this.props.config.selfLearning.exitOptions;\r\n\r\n    individualTableColumns.push({\r\n      Headers: [\r\n        <button\r\n          onClick={() => {\r\n            if (window.confirm(`Are you sure you want to delete all individual entries?`)) {\r\n              this.props.deleteIndividualSL();\r\n            }\r\n          }}\r\n        >\r\n          <b> Delete </b>{\" \"}\r\n        </button>,\r\n        \"\"\r\n      ],\r\n      Cell: props =>\r\n        exitOptions.length ? (\r\n          <select\r\n            value=\"\"\r\n            onChange={event => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key, event.target.value);\r\n              }\r\n            }}\r\n          >\r\n            <option value=\"\">Delete</option>\r\n            {exitOptions.map(({ key, value }) => (\r\n              <option value={key}>{value}</option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Are you sure you want to delete the entry for ${props.original.key}?`)) {\r\n                this.props.deleteIndividualSL(props.original.key);\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n      width: 70\r\n    });\r\n\r\n    const tableStyle = { textAlign: \"center\" };\r\n\r\n    const downloadTable = () => {\r\n      const table = [];\r\n      let cols, tableRef, sheetName;\r\n\r\n      if (this.state.showIndividualTable) {\r\n        cols = individualTableColumns.slice(0, -1);\r\n        tableRef = this.UNTable;\r\n        sheetName = \"UN List\";\r\n      } else {\r\n        cols = generalTableColumns;\r\n        cols.splice(8, 1);\r\n        tableRef = this.SLTable;\r\n        sheetName = \"SL List\";\r\n      }\r\n\r\n      table[0] = cols.map(col => col.Headers[0]);\r\n      table[1] = cols.map(col => col.Headers[1]);\r\n\r\n      for (let row of tableRef.current.getResolvedState().sortedData) {\r\n        row = Object.values(row);\r\n        const newRow = [];\r\n        for (let i = 0; i < cols.length; i++) newRow.push(row[i]);\r\n        table.push(newRow);\r\n      }\r\n\r\n      const ws = XLSX.utils.aoa_to_sheet(table);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n      const date = dateFormat(new Date(), \"yyyy-mm-dd_HH-MM-ss\");\r\n\r\n      XLSX.writeFile(wb, `${this.props.name}_${this.props.config.logger.logID}_${date}.xlsx`);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <span>\r\n          <Toggle checked={this.state.showIndividualTable} onChange={this.toggleIndividualTable} />\r\n          {this.state.showIndividualTable ? \" Show SL-list\" : \" Show UN-list\"}\r\n        </span>\r\n        <span className=\"selfLearning--modal--buttons\">\r\n          <button style={{ marginRight: \"20px\" }} onClick={downloadTable}>\r\n            <b> Download </b>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reset the data of the individual selfLearning?\"))\r\n                this.props.resetIndividualSL();\r\n            }}\r\n          >\r\n            <b> Reset </b>\r\n          </button>\r\n        </span>\r\n        {this.state.showIndividualTable ? (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> UN - list </div>\r\n            <ReactTable\r\n              forwardRef={this.UNTable}\r\n              data={individualEntries}\r\n              columns={individualTableColumns}\r\n              style={tableStyle}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"selfLearning--modal--title\"> SL - list </div>\r\n            <ReactTable\r\n              forwardRef={this.SLTable}\r\n              style={tableStyle}\r\n              data={generalEntries}\r\n              columns={generalTableColumns}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        onRequestClose={this.props.onClose}\r\n        overlayClassName=\"modalOverlay\"\r\n        className=\"modalContent\"\r\n        contentLabel=\"SelfLearning Modal\"\r\n      >\r\n        {this.props.isOpen && this.getSLModalContent()}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const showTolerance = state.static.showTolerance;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    showTolerance,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter,\r\n    name\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteGeneralSL, deleteIndividualSL, resetIndividualSL })(SelfLearningModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SelfLearningModal from \"./modals/SelfLearningModal\";\r\nimport { resetSLData } from \"../actions/selfLearningActions\";\r\nimport { downloadExcel, uploadExcelTemplate } from \"../actions/excelActions\";\r\nimport { changeConfig } from \"../actions/configActions\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\nimport { isUndefined } from \"util\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let rounding = 0;\r\n    if (!isUndefined(this.props.comIndex)) rounding = this.props.config.serial.coms[this.props.comIndex].digits;\r\n\r\n    const configurationValues = {\r\n      selfLearning: {\r\n        enabled: {\r\n          name: \"Enabled type\",\r\n          type: \"select\",\r\n          options: {\r\n            off: \"Off\",\r\n            com0: \"Com 0\",\r\n            com1: \"Com 1\",\r\n            com0ind: \"Com 0 Individual\",\r\n            com1ind: \"Com 1 Individual\"\r\n          }\r\n        },\r\n        normal: {\r\n          type: \"conditional\",\r\n          condition: config => !config.selfLearning.enabled.endsWith(\"ind\") && config.selfLearning.enabled !== \"off\",\r\n          contents: {\r\n            LogID: {\r\n              name: \"LogID\",\r\n              type: \"external\",\r\n              location: \"logger.logID\",\r\n              configuration: {\r\n                name: \"LogID\",\r\n                type: \"text\"\r\n              }\r\n            },\r\n            startCalibration: {\r\n              name: \"Calibration\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              rounding\r\n            },\r\n            totalNumber: {\r\n              name: \"Total number\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            startTolerance: {\r\n              name: \"Extra tolerance during learning %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            }\r\n          }\r\n        },\r\n        individual: {\r\n          type: \"conditional\",\r\n          condition: config => config.selfLearning.enabled.endsWith(\"ind\"),\r\n          contents: {\r\n            important: {\r\n              type: \"emphasis\",\r\n              contents: {\r\n                downloadExcel: {\r\n                  name: \"Download Excel file\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.downloadExcel();\r\n                  }\r\n                },\r\n                resetSL: {\r\n                  name: \"Reset Self Learning Data\",\r\n                  type: \"button\",\r\n                  onClick: () => {\r\n                    this.props.resetSLData();\r\n                  }\r\n                },\r\n                logID: {\r\n                  type: \"external\",\r\n                  location: \"logger.logID\",\r\n                  configuration: {\r\n                    name: \"LogID\",\r\n                    type: \"text\"\r\n                  }\r\n                },\r\n                startCalibration: {\r\n                  name: \"Calibration\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1,\r\n                  rounding\r\n                },\r\n                totalNumber: {\r\n                  name: \"Total number\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                }\r\n              }\r\n            },\r\n            numberPercentage: {\r\n              name: \"SL number %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            tolerance: {\r\n              name: \"SL Tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            individualToleranceAbs: {\r\n              name: \"Individual tolerance\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualTolerance: {\r\n              name: \"Individual tolerance %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualToleranceShift: {\r\n              name: \"Individual tolerance shift %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionIncrement: {\r\n              name: \"Correction %\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualCorrectionLimit: {\r\n              name: \"Correction limit (1-9)\",\r\n              type: \"number\",\r\n              min: 1,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            individualAverageNumber: {\r\n              name: \"Average calibration number (1-9)\",\r\n              type: \"number\",\r\n              min: 1,\r\n              max: 9,\r\n              step: 1,\r\n              condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n            },\r\n            excelIndividualColumn: {\r\n              type: \"external\",\r\n              location: \"table.individualColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Com Ind\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelDateColumn: {\r\n              type: \"external\",\r\n              location: \"table.dateColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Date\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            excelExitColumn: {\r\n              type: \"external\",\r\n              location: \"table.exitColumn\",\r\n              configuration: {\r\n                name: \"Excel column - Exit\",\r\n                type: \"select\",\r\n                numeric: true,\r\n                options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n              }\r\n            },\r\n            exitOptions: {\r\n              name: \"Exit options\",\r\n              type: \"keyValue\"\r\n            },\r\n            activityCounter: {\r\n              type: \"checkbox\",\r\n              name: \"Activity counter\"\r\n            },\r\n            uploadExcelTemplate: {\r\n              name: \"Import Excel Template\",\r\n              type: \"button\",\r\n              onClick: uploadExcelTemplate\r\n            },\r\n            title: {\r\n              name: \"List column configuration\",\r\n              type: \"title\"\r\n            },\r\n            firstTopFormula: {\r\n              name: \"#1 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            firstTopDigits: {\r\n              name: \"#1 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            secondTopFormula: {\r\n              name: \"#2 Top Formula\",\r\n              type: \"text\"\r\n            },\r\n            secondTopDigits: {\r\n              name: \"#2 Top Digits\",\r\n              type: \"number\",\r\n              min: 0,\r\n              step: 1\r\n            },\r\n            extraColumns: {\r\n              name: \"Additional columns\",\r\n              type: \"structArray\",\r\n              structure: {\r\n                title: {\r\n                  name: \"Title\",\r\n                  type: \"text\"\r\n                },\r\n                topFormula: {\r\n                  name: \"Top formula\",\r\n                  type: \"text\"\r\n                },\r\n                formula: {\r\n                  name: \"Formula\",\r\n                  type: \"text\"\r\n                },\r\n                type: {\r\n                  name: \"Type of content\",\r\n                  type: \"select\",\r\n                  options: {\r\n                    text: \"Non-num\",\r\n                    number: \"Numeric\",\r\n                    date: \"Date\"\r\n                  }\r\n                },\r\n                digits: {\r\n                  name: \"Digits\",\r\n                  type: \"number\",\r\n                  min: 0,\r\n                  step: 1\r\n                },\r\n                generalVisible: {\r\n                  name: \"Show in SL list\",\r\n                  type: \"checkbox\"\r\n                }\r\n              },\r\n              defaults: {\r\n                title: \"\",\r\n                topFormula: \"\",\r\n                formula: \"\",\r\n                type: \"text\",\r\n                digits: 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const indicators = [\"selfLearning--inProgress\", \"selfLearning--success\", \"selfLearning--warning\"];\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(this.props.config.serial.coms[this.props.comIndex || 0].digits) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(Math.round((this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000) / 10 + \"%\");\r\n    }\r\n\r\n    if (this.props.individual && this.props.activityCounter) {\r\n      const activity =\r\n        Object.values(this.props.individualEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0) +\r\n        Object.values(this.props.generalEntries)\r\n          .map(entry => entry.activity)\r\n          .reduce((acc, cur) => acc + cur, 0);\r\n\r\n      cells.push(activity);\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <SelfLearningModal isOpen={this.state.SLModalIsOpen} onClose={this.closeSLModal} />\r\n\r\n        <div\r\n          className={classNames(\"selfLearning\", indicators[this.props.success || 0])}\r\n          onClick={this.props.configLocked ? (this.props.individual ? this.openSLModal : null) : this.openConfigModal}\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n  const tableExtraColumnTitle = state.config.selfLearning.tableExtraColumnTitle;\r\n  const activityCounter = state.config.selfLearning.activityCounter;\r\n\r\n  return {\r\n    ...state.internal.selfLearning,\r\n    configLocked,\r\n    config,\r\n    individual,\r\n    tableExtraColumnTitle,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { resetSLData, downloadExcel, changeConfig })(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig\r\n} from \"../actions/configActions\";\r\nimport { setDateTime } from \"../actions/internalActions\";\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      listModalIsOpen: false,\r\n      newDate: moment(this.props.time).format(\"YYYY-MM-DDTHH:mm\")\r\n    };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    let configurationValues = {\r\n      serial: {\r\n        title: {\r\n          name: \"Serial\",\r\n          type: \"title\"\r\n        },\r\n        resetTrigger: {\r\n          name: \"Reset on zero\",\r\n          type: \"select\",\r\n          options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        table: {\r\n          title: {\r\n            name: \"Table\",\r\n            type: \"title\"\r\n          },\r\n          trigger: {\r\n            name: \"Trigger\",\r\n            type: \"select\",\r\n            options: [\"Com 0\", \"Com 1\"]\r\n          },\r\n          useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n          waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n          searchColumn: {\r\n            name: \"Column to search in\",\r\n            type: \"select\",\r\n            numeric: true,\r\n            options: [...Array(26).keys()].map(i => String.fromCharCode(\"A\".charCodeAt(0) + i))\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        logger: {\r\n          title: {\r\n            name: \"Logger\",\r\n            type: \"title\"\r\n          },\r\n          writeToFile: {\r\n            name: \"Write log to file\",\r\n            type: \"checkbox\"\r\n          },\r\n          csvSeparator: {\r\n            name: \"CSV separator\",\r\n            type: \"select\",\r\n            options: { \",\": \",\", \";\": \";\" }\r\n          },\r\n          logID: {\r\n            name: \"LogID\",\r\n            type: \"text\"\r\n          },\r\n          unique: {\r\n            name: \"Unique log type\",\r\n            type: \"select\",\r\n            options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n          },\r\n          resetMode: {\r\n            name: \"Reset mode\",\r\n            type: \"select\",\r\n            options: {\r\n              off: \"Off\",\r\n              time: \"Time of day\",\r\n              interval: \"Time interval\"\r\n            }\r\n          },\r\n          resetTime: {\r\n            name: \"Reset time\",\r\n            type: \"time\",\r\n            condition: config => config.logger.resetMode === \"time\"\r\n          },\r\n          resetInterval: {\r\n            name: \"Interval (min)\",\r\n            type: \"number\",\r\n            min: 0,\r\n            step: 1,\r\n            condition: config => config.logger.resetMode === \"interval\"\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.props.exposeUpload) {\r\n      configurationValues = {\r\n        ...configurationValues,\r\n        FTP: {\r\n          title: {\r\n            name: \"FTP\",\r\n            type: \"title\"\r\n          },\r\n          automatic: {\r\n            name: \"Automatically upload log on FTP\",\r\n            type: \"checkbox\"\r\n          },\r\n          uploadExcel: {\r\n            name: \"Include Excel with upload\",\r\n            type: \"checkbox\"\r\n          },\r\n          targets: [1, 2].map(index => ({\r\n            title: {\r\n              name: \"Target \" + index,\r\n              type: \"subtitle\"\r\n            },\r\n            address: {\r\n              name: \"Address\",\r\n              type: \"text\"\r\n            },\r\n            folder: {\r\n              name: \"Folder\",\r\n              type: \"text\"\r\n            },\r\n            username: {\r\n              name: \"Username\",\r\n              type: \"text\"\r\n            },\r\n            password: {\r\n              name: \"Password\",\r\n              type: \"text\"\r\n            }\r\n          }))\r\n        }\r\n      };\r\n    }\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input type=\"button\" value=\"Delete\" onClick={() => this.props.deleteConfig(config)} />\r\n                  <input type=\"button\" value=\"Load\" onClick={() => this.props.loadConfig(config)} />\r\n                  <input type=\"button\" value=\"Download\" onClick={() => this.props.downloadConfig(config)} />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input type=\"button\" value=\"Upload\" onClick={() => this.props.uploadConfig(this.props.config.version)} />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\"Please enter the name for the new config file:\", \"config\");\r\n                    if (name) this.props.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              <h3>Date and Time</h3>\r\n              <br />\r\n              <form\r\n                onSubmit={event => {\r\n                  event.preventDefault();\r\n                  this.props.setDateTime(this.state.newDate);\r\n                }}\r\n              >\r\n                Change internal time:\r\n                <input type=\"submit\" value=\"Save\" />\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"newDate\"\r\n                  value={this.state.newDate}\r\n                  onChange={event => this.setState({ newDate: event.target.value })}\r\n                />\r\n              </form>\r\n\r\n              {makeForm(configurationValues, this.props.config, this.props.changeConfig)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div className=\"infobar\" onClick={this.props.configLocked ? null : this.openConfigModal}>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={1}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"HH:mm:ss\")}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText compressor={0.8}>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{moment(this.props.time).format(\"DD-MM-YYYY\")}</div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const exposeUpload = state.static.exposeUpload;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList,\r\n    exposeUpload\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeConfig,\r\n  deleteConfig,\r\n  loadConfig,\r\n  downloadConfig,\r\n  configExists,\r\n  saveConfig,\r\n  getConfigList,\r\n  uploadConfig,\r\n  setDateTime\r\n})(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { loadConfig, loadStatic } from \"../actions/configActions\";\r\nimport { getLog } from \"../actions/logActions\";\r\nimport { openMenu, getLogo } from \"../actions/menuActions\";\r\n\r\nimport LogModal from \"./modals/LogModal\";\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.loadConfig();\r\n    this.props.loadStatic();\r\n\r\n    getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalFilterType: \"none\",\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.props.getLog, 1000)\r\n    });\r\n    this.props.getLog();\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <LogModal isOpen={this.state.logModalIsOpen} onClose={this.closeLogModal} />\r\n          <div className=\"info\">\r\n            <Infobar />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo image={this.state.logo} alt=\"LOGO\" onClick={this.props.openMenu} />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && <SelfLearning />}\r\n            <ComList />\r\n          </div>\r\n\r\n          {this.props.showOutputs && <div className=\"outputs\">{this.props.showOutputs && <OutputList />} </div>}\r\n          {this.props.showInputs && <div className=\"inputs\">{this.props.showInputs && <InputList />}</div>}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable = state.static.exposeUpload && (!configLocked || state.config.table.cells.some(cell => cell.visible));\r\n\r\n  const showInputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.input.ports.some(port => port.visible));\r\n\r\n  const showOutputs =\r\n    state.static.exposeUpload && (!configLocked || state.config.output.ports.some(port => port.visible));\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning && (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  const { activityCounter } = state.config.selfLearning;\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled,\r\n    activityCounter\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadConfig, loadStatic, openMenu, getLog }\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, hasChanged: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false, hasChanged: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SELFLEARNING_STATE,\r\n  LOGGER_STATE,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false,\r\n    formula: \"\",\r\n    formulaResults: []\r\n  },\r\n  logger: {\r\n    entries: [],\r\n    legend: [],\r\n    accessors: [],\r\n    digits: [],\r\n    visible: []\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case SERIAL_CLEAR: {\r\n      const newComs = fullState.coms.map(com => ({\r\n        entry: \"\",\r\n        entryTime: new Date(),\r\n        history: com.history\r\n      }));\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case TABLE_CELL_COLOR: {\r\n      const { index, color } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { ...newCells[index], color };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    case LOGGER_STATE: {\r\n      return {\r\n        ...fullState,\r\n        logger: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  OPEN_MENU,\r\n  CLOSE_MENU,\r\n  RECEIVE_CONFIG_LIST,\r\n  RECEIVE_LOG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: [],\r\n  logList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case OPEN_MENU: {\r\n      return { ...state, isMenuOpen: true };\r\n    }\r\n    case CLOSE_MENU: {\r\n      return { ...state, isMenuOpen: false };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_LOG_LIST: {\r\n      return {\r\n        ...state,\r\n        logList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  TABLE_CELL_STATE,\r\n  TABLE_CELL_COLOR,\r\n  SERIAL_COM_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TABLE_FOUND_STATE,\r\n  SERIAL_CLEAR\r\n} from \"./types\";\r\n\r\nexport default {\r\n  input: INPUT_PORT_STATE,\r\n  output: OUTPUT_PORT_STATE,\r\n  table: TABLE_CELL_STATE,\r\n  tableColor: TABLE_CELL_COLOR,\r\n  entry: SERIAL_COM_STATE,\r\n  selfLearning: SELFLEARNING_STATE,\r\n  ip: RECEIVE_IP,\r\n  time: RECEIVE_TIME,\r\n  notfound: TABLE_FOUND_STATE,\r\n  clearSerial: SERIAL_CLEAR\r\n};\r\n","import io from \"socket.io-client\";\r\nimport messageTypes from \"./messageTypes.js\";\r\n\r\nconst socket = io();\r\n\r\nexport const init = store => {\r\n  for (const type in messageTypes) {\r\n    socket.on(type, payload => store.dispatch({ type: messageTypes[type], payload }));\r\n  }\r\n  socket.on(\"error\", payload => window.alert(payload));\r\n};\r\n\r\nexport const emit = (type, payload, callback) => socket.emit(type, payload, callback);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport { init, emit } from \"./actions/socketApi\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst middleware = [thunk.withExtraArgument({ emit })];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\ninit(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"OPEN_MENU\",\r\n  \"CLOSE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"TABLE_CELL_COLOR\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"LOGGER_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\",\r\n  \"RECEIVE_LOG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";","import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) return object[Number(index)];\r\n\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n\r\n    if (!newAddress) {\r\n      object[Number(index)] = newValue;\r\n    } else {\r\n      set(object[Number(index)], newAddress, newValue);\r\n    }\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, changeConfig, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(value[0][key], config, changeConfig, index, name + \"[\" + index + \"].\" + key)\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      } else {\r\n        return value.map((element, index) => {\r\n          return makeForm(element, config, changeConfig, index, name + \"[\" + index + \"]\");\r\n        });\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key => makeForm(value[key], config, changeConfig, index, name + (name ? \".\" : \"\") + key))}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"subtitle\": {\r\n        return (\r\n          <>\r\n            <b key={value.name}>{value.name}</b>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"emphasis\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return (\r\n          <div className=\"configuration--emphasis\">\r\n            {makeForm(value.contents, config, changeConfig, index, oldName)}\r\n          </div>\r\n        );\r\n      }\r\n      case \"conditional\": {\r\n        const oldName = name.replace(/\\.\\w+$/, \"\");\r\n        return makeForm(value.contents, config, changeConfig, index, oldName);\r\n      }\r\n      case \"external\": {\r\n        return makeForm(value.configuration, config, changeConfig, index, value.location);\r\n      }\r\n      case \"structArray\": {\r\n        const contents = get(config, name) || [];\r\n        const structure = value.structure;\r\n        const defaultStruct = value.defaults;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {contents.map((element, index) => (\r\n              <div className=\"configuration--struct\">\r\n                #{index + 3}\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    contents.splice(index, 1);\r\n                    changeConfig(name, contents);\r\n                  }}\r\n                />\r\n                {makeForm(structure, config, changeConfig, index, name + \"[\" + index + \"]\")}\r\n              </div>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, contents.concat(defaultStruct));\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      case \"keyValue\": {\r\n        const options = get(config, name) || [];\r\n\r\n        const keyOptions = value.options;\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <br />\r\n            {options.map((option, index) => (\r\n              <>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"x\"\r\n                  onClick={() => {\r\n                    options.splice(index, 1);\r\n                    changeConfig(name, options);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => {\r\n                    changeConfig(`${name}[${index}].value`, e.target.value);\r\n                  }}\r\n                  value={option.value}\r\n                />\r\n                {keyOptions ? (\r\n                  <select\r\n                    value={option.key}\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value);\r\n                    }}\r\n                  >\r\n                    {Object.entries(keyOptions)\r\n                      .concat([[\"\", \"\"]])\r\n                      .map(entry => (\r\n                        <option value={entry[0]}>{entry[1]}</option>\r\n                      ))}\r\n                  </select>\r\n                ) : (\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      changeConfig(`${name}[${index}].key`, e.target.value, {\r\n                        numeric: true\r\n                      });\r\n                    }}\r\n                    value={option.key}\r\n                  />\r\n                )}\r\n\r\n                <br />\r\n              </>\r\n            ))}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              onClick={() => {\r\n                changeConfig(name, options.concat({ key: \"\", value: \"\" }));\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"button\": {\r\n        return (\r\n          <>\r\n            <input type=\"button\" value={value.name} className=\"configuration--button\" onClick={value.onClick} />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              value={get(config, name)}\r\n              onChange={event => {\r\n                changeConfig(name, event.target.value, {\r\n                  numeric: value.numeric\r\n                });\r\n              }}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={value.rounding != undefined ? round(get(config, name), value.rounding) : get(config, name)}\r\n              onChange={event => {\r\n                if (event.target.type === \"checkbox\") {\r\n                  changeConfig(name, event.target.checked);\r\n                } else {\r\n                  changeConfig(name, event.target.value, {\r\n                    numeric: value.type === \"number\"\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction round(num, digits) {\r\n  const factor = Math.pow(10, digits);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(...rows.map(row => (`${get(row, accessor)}` || \"\").length));\r\n\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nconst daysToDate = days => {\r\n  return new Date((days - (25567 + 2)) * 86400 * 1000);\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth, daysToDate };\r\n"],"sourceRoot":""}