{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","Object","keys","filter","conditions","map","condition","Fragment","className","numeric","entries","options","entry","min","max","step","checked","getColumnWidth","rows","accessor","cellLength","Math","apply","C_Users_Jan_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","concat","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","console","log","configLocked","api","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","toggleMenu","closeUploadModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","contentLabel","id","action","method","enctype","onclick","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","isMenuOpen","onStateChange","newState","width","component_default","onClick","event","target","readOnly","writeLogs","openLogModal","exposeUpload","window","confirm","reboot","exposeShutdown","shutdown","QS","href","Component","connect","loaded","static","locked","misc","logger","writeToFile","configurationValues","serial","coms","mode","test","reader","testMessage","readerPort","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","element","i","com","objectSpread","onChange","changeConfig","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","timeString","internal","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","e","manualFunction","menuOptions","str","valueString","descriptionString","description","option","newMenuIndex","findIndex","tableCell--notFound","notFound","openModal","table","cells","normal","date","manual","menu","resetOnExe","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","endsWith","individualTolerance","individualToleranceIncrement","individualToleranceLimit","individualColors","textColors","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","generalTableColumns","Header","style","textAlign","deleteGeneralSL","Cell","original","individualTableColumns","backgroundColor","increments","color","deleteIndividualSL","individualEntries","generalEntries","push","calibration","toFixed","round","individual","success","matchedTolerance","react_table_es","data","columns","Logo","src","image","alt","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetValue","FTP","automatic","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","configList","deleteConfig","loadConfig","downloadConfig","click","versionName","files","version","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","logModalIsOpen","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","showPorts","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","RECEIVE_CONFIG_LIST","Date","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","toConsumableArray","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","getState","forEach","document","newConfig","stringify","_ref","location","reload","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f2a9297a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (value.condition && !value.condition(config, index)) return;\r\n\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select\r\n              className={value.numeric && \"numeric\"}\r\n              name={name}\r\n              value={get(config, name)}\r\n            >\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              name={name}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    console.log(\"click\");\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.toggleMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"button\" value=\"Import .xls\" onclick={() => {}} />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.toggleMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            Unlock settings\r\n            <Toggle\r\n              onClick={event => {\r\n                console.log(event.target);\r\n                this.toggleConfigLock();\r\n              }}\r\n              readOnly\r\n              checked={!this.props.configLocked}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={this.openLogModal}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={this.openUploadModal}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n                this.props.api.toggleMenu();\r\n              }\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        mode: {\r\n          name: \"Mode\",\r\n          type: \"select\",\r\n          options: {\r\n            serial: \"Serial\",\r\n            test: \"Test\",\r\n            reader: \"Reader\"\r\n          }\r\n        },\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"test\"\r\n        },\r\n        readerPort: {\r\n          name: \"Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"reader\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1,\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          },\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        },\r\n        postfix: {\r\n          name: \"Suffix\",\r\n          type: \"text\",\r\n          condition: (config, index) =>\r\n            config.serial.coms[index].mode === \"serial\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: props.coms.map(element => false),\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = index => {\r\n    this.setState({\r\n      showHistory: this.state.showHistory.map((element, i) =>\r\n        i === index ? !element : element\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n            onClick={\r\n              this.props.configLocked\r\n                ? () => !com.average && this.toggleShowHistory(com.index)\r\n                : () => this.openConfigModal(com.index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": com.mode === \"test\"\r\n              })}\r\n            >\r\n              {this.state.showHistory[com.index] && com.history ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.config.serial.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.internal.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          numeric: true,\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout (ms)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout (s)\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type={props.cell.numeric ? \"number\" : \"text\"}\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = (cell.formula.match(/{[0-9.]*:[\\w ]*}/g) || []).map(\r\n        str => {\r\n          const parts = str.split(\":\");\r\n          const valueString = parts[0].slice(1);\r\n          const descriptionString = parts[1].slice(0, -1);\r\n\r\n          return {\r\n            value: valueString ? Number(parts[0].slice(1)) : \"\",\r\n            description: descriptionString\r\n          };\r\n        }\r\n      );\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) + 1;\r\n\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled !== \"off\"\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config =>\r\n        config.selfLearning.enabled !== \"off\" &&\r\n        !config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1,\r\n      condition: config => config.selfLearning.enabled.endsWith(\"ind\")\r\n    }\r\n  }\r\n};\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  render() {\r\n    const generalTableColumns = [\r\n      {\r\n        Header: \"Com0\",\r\n        accessor: row => {\r\n          console.log(row);\r\n          return row.entries[0];\r\n        },\r\n        id: 10,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-1\",\r\n        accessor: row => row.entries[1],\r\n        id: 2,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-2\",\r\n        accessor: row => row.entries[2],\r\n        id: 3,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-3\",\r\n        accessor: row => row.entries[3],\r\n        id: 4,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"-4\",\r\n        accessor: row => row.entries[4],\r\n        id: 5,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Com1\",\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all general entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteGeneralSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete general entries for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteGeneralSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const individualTableColumns = [\r\n      {\r\n        Header: \"Com0\",\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Com1\",\r\n        accessor: \"key\",\r\n        style: { textAlign: \"center\" },\r\n        width: 200\r\n      },\r\n      {\r\n        Header: () => <input type=\"text\" />,\r\n        accessor: \"calibration\",\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      },\r\n      {\r\n        Header: \"Tol\",\r\n        accessor: \"tolerance\",\r\n        Cell: props => {\r\n          return (\r\n            <div\r\n              style={{\r\n                backgroundColor: individualColors[props.original.increments],\r\n                color: textColors[props.original.increments]\r\n              }}\r\n            >\r\n              {props.value}\r\n            </div>\r\n          );\r\n        },\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Num\",\r\n        accessor: \"numUpdates\",\r\n        style: { textAlign: \"center\" },\r\n        width: 50\r\n      },\r\n      {\r\n        Header: (\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                window.confirm(\r\n                  `Are you sure you want to delete all individual entries?`\r\n                )\r\n              ) {\r\n                this.props.api.deleteIndividualSL();\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        ),\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete the entry for ${\r\n                      props.original.key\r\n                    }?`\r\n                  )\r\n                ) {\r\n                  this.props.api.deleteIndividualSL(props.original.key);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        id: 1,\r\n        style: { textAlign: \"center\" },\r\n        width: 70\r\n      }\r\n    ];\r\n\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <span>\r\n            <Toggle\r\n              checked={this.state.showIndividualTable}\r\n              onChange={this.toggleIndividualTable}\r\n            />\r\n            Show individual entries\r\n          </span>\r\n          {this.state.showIndividualTable ? (\r\n            <>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </>\r\n          )}\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked\r\n              ? this.props.individual\r\n                ? this.openSLModal\r\n                : null\r\n              : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n  const individual = state.internal.selfLearning.individual;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config, individual };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: config => config.logger.resetMode === \"time\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9\\.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.uploadRef.parentElement.submit();\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    !configLocked ||\r\n    state.config.input.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showOutputs =\r\n    !configLocked ||\r\n    state.config.output.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showPorts =\r\n    state.static.exposeUpload && (!configLocked || showInputs || showOutputs);\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showPorts,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  RECEIVE_CONFIG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        console.log(config);\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      socket.emit(\"configExists\", name, ({ result, name }) => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(event) {\r\n    const address = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (\r\n      event.target.type === \"number\" ||\r\n      event.target.className === \"numeric\"\r\n    ) {\r\n      console.log(\"number\");\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  function deleteGeneralSL(key) {\r\n    socket.emit(\"deleteGeneralSL\", key);\r\n  }\r\n\r\n  function deleteIndividualSL(key) {\r\n    socket.emit(\"deleteIndividualSL\", key);\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig,\r\n    deleteGeneralSL,\r\n    deleteIndividualSL\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}