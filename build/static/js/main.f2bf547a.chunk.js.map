{"version":3,"sources":["helpers.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["get","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","set","newValue","makeForm","value","config","name","arguments","undefined","type","Array","isArray","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","Object","keys","filter","conditions","map","Fragment","entries","options","entry","min","max","step","checked","getColumnWidth","rows","accessor","cellLength","Math","apply","C_Users_1_projects_serialserverclient2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","row","concat","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","console","log","configLocked","api","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","toggleMenu","closeUploadModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","onclick","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","isMenuOpen","onStateChange","newState","width","component_default","onClick","event","target","readOnly","writeLogs","openLogModal","exposeUpload","window","confirm","reboot","exposeShutdown","shutdown","QS","href","Component","connect","loaded","static","locked","misc","logger","writeToFile","configurationValues","serial","coms","testMessage","condition","testMode","reader","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","numeric","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","comIndex","closeConfigModal","toggleShowHistory","showHistory","com","objectSpread","onChange","changeConfig","classNames","comElement--wide","ReactFitText_default","compressor","comElement--content--testMode","history","element","timeString","internal","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","1","2","3","4","5","6","7","8","9","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","classnames","tableCell--content--input--text","tableCell--content--input--numeric","e","manualFunction","menuOptions","str","description","option","newMenuIndex","findIndex","tableCell--notFound","notFound","openModal","table","cells","normal","date","manual","menu","resetOnExe","Table","configCellIndex","cellConfig","String","fromCharCode","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","individualTolerance","individualToleranceIncrement","individualToleranceLimit","generalTableColumns","Header","style","textAlign","Cell","individualColors","textColors","individualTableColumns","backgroundColor","original","increments","color","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","toggleIndividualTable","showIndividualTable","individualEntries","generalEntries","push","calibration","toFixed","round","individual","success","matchedTolerance","react_table_es","data","columns","Logo","src","image","alt","title","resetTrigger","on","trigger","useFile","waitForOther","searchColumn","logID","unique","resetMode","time","interval","resetValue","FTP","automatic","Infobar","openListModal","listModalIsOpen","closeListModal","uploadRef","React","createRef","configList","deleteConfig","loadConfig","downloadConfig","click","versionName","files","version","parentElement","submit","alert","display","ref","prompt","getConfigList","ip","moment","format","Main","logModalIsOpen","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","clearInterval","getLogo","logo","MBDC","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","showPorts","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","dateformat","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","RECEIVE_CONFIG_LIST","Date","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","newHistory","_action$payload3","entryTime","newComs","toConsumableArray","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","emit","JSON","parse","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","list","getState","forEach","document","newConfig","stringify","_ref","location","reload","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","elem","stringMapFromArray","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f2bf547a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select name={name} value={get(config, name)}>\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              name={name}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nexport { get, set, makeForm, getColumnWidth };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    console.log(\"click\");\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.toggleMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"button\" value=\"Import .xls\" onclick={() => {}} />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.toggleMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span className=\"menu-item menu-item--clickable\">\r\n            Unlock settings\r\n            <Toggle\r\n              onClick={event => {\r\n                console.log(event.target);\r\n                this.toggleConfigLock();\r\n              }}\r\n              readOnly\r\n              checked={!this.props.configLocked}\r\n            />\r\n          </span>\r\n          {this.props.writeLogs && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={this.openLogModal}\r\n            >\r\n              Log files\r\n            </span>\r\n          )}\r\n          {this.props.exposeUpload && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={this.openUploadModal}\r\n            >\r\n              Import Excel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n                this.props.api.toggleMenu();\r\n              }\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          {this.props.exposeShutdown && (\r\n            <span\r\n              className=\"menu-item menu-item--clickable\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                  this.props.api.shutdown();\r\n              }}\r\n            >\r\n              Shutdown unit\r\n            </span>\r\n          )}\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return {\r\n      configLocked: false,\r\n      isMenuOpen: false,\r\n      QS: \"null\",\r\n      writeLogs: false,\r\n      exposeUpload: false,\r\n      exposeShutdown: false\r\n    };\r\n  }\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS,\r\n    writeLogs: state.config.logger.writeToFile,\r\n    exposeUpload: state.static.exposeUpload,\r\n    exposeShutdown: state.static.exposeShutdown\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\",\r\n          condition: config => config.serial.testMode\r\n        },\r\n        reader: {\r\n          name: \"MBDC Reader\",\r\n          type: \"checkbox\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate/Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          }\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\"\r\n        },\r\n        postfix: { name: \"Suffix\", type: \"text\" }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configModalIsOpen: false,\r\n      showHistory: false,\r\n      comIndex: -1\r\n    };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, comIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleShowHistory = () => {\r\n    this.setState({ showHistory: !this.state.showHistory });\r\n  };\r\n\r\n  render() {\r\n    const coms = this.props.coms\r\n      .map((com, index) => ({ index, ...com }))\r\n      .filter(com => com.name || !this.props.configLocked);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Serial Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for com{this.state.comIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.comIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {coms.map(com => (\r\n          <div\r\n            key={com.index}\r\n            className={classNames(\"comElement\", {\r\n              \"comElement--wide\": coms.length === 1\r\n            })}\r\n            onClick={\r\n              this.props.configLocked\r\n                ? () => this.toggleShowHistory()\r\n                : () => this.openConfigModal(com.index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": this.props.testMode\r\n              })}\r\n            >\r\n              {this.state.showHistory ? (\r\n                <div className=\"comElement--content--history\">\r\n                  {com.history\r\n                    .slice(0, this.props.config.serial.coms[com.index].entries)\r\n                    .map(element => (\r\n                      <>\r\n                        <div>{element.timeString}</div>\r\n                        <div>{element.entry}</div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"center\">\r\n                  <FitText compressor={0.9}>\r\n                    <div>{com.entry}</div>\r\n                  </FitText>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    testMode: state.config.serial.testMode\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow ouput 1\",\r\n            \"1\": \"Follow ouput 2\",\r\n            \"2\": \"Follow ouput 3\",\r\n            \"3\": \"Follow ouput 4\",\r\n            \"4\": \"Follow ouput 5\",\r\n            \"5\": \"Follow ouput 6\",\r\n            \"6\": \"Follow ouput 7\",\r\n            \"7\": \"Follow ouput 8\",\r\n            \"8\": \"Follow ouput 9\",\r\n            \"9\": \"Follow ouput 10\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout in milliseconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type=\"text\"\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      const menuOptions = (cell.formula.match(/{[0-9.]+:\\w+}/g) || []).map(\r\n        str => {\r\n          const parts = str.split(\":\");\r\n          return {\r\n            value: Number(parts[0].slice(1)),\r\n            description: parts[1].slice(0, -1)\r\n          };\r\n        }\r\n      );\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) + 1;\r\n\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells\r\n      .map((cell, index) => ({\r\n        index,\r\n        ...cell,\r\n        ...this.props.cellConfig[index]\r\n      }))\r\n      .filter(cell => !this.props.configLocked || cell.formula || cell.name);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map(cell => (\r\n            <TableCell\r\n              key={cell.index}\r\n              cell={cell}\r\n              index={cell.index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(cell.index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  }\r\n};\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SLModalIsOpen: false,\r\n      configModalIsOpen: false,\r\n      showIndividualTable: false\r\n    };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  toggleIndividualTable = () => {\r\n    this.setState({ showIndividualTable: !this.state.showIndividualTable });\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    const cells = [\r\n      \"Self Learning\",\r\n      (this.props.calibration || 0).toFixed(\r\n        this.props.config.serial.coms[this.props.comIndex || 0].digits\r\n      ) || 0,\r\n      Math.round((this.props.tolerance || 0) * 1000) / 10 + \"%\"\r\n    ];\r\n\r\n    if (!this.props.individual && this.props.success) {\r\n      cells.push(\r\n        Math.round(\r\n          (this.props.tolerance || 0 - this.props.matchedTolerance || 0) * 1000\r\n        ) /\r\n          10 +\r\n          \"%\"\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <span>\r\n            <Toggle\r\n              checked={this.state.showIndividualTable}\r\n              onChange={this.toggleIndividualTable}\r\n            />\r\n            Show individual entries\r\n          </span>\r\n          {this.state.showIndividualTable ? (\r\n            <>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </>\r\n          )}\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked ? this.openSLModal : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../helpers\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    testMode: { name: \"Enable test mode\", type: \"checkbox\" },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode:\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: \"logger.resetMode==='time'\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uploadRef = React.createRef();\r\n    this.state = { configModalIsOpen: false, listModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  openListModal = () => {\r\n    this.setState({ listModalIsOpen: true });\r\n  };\r\n\r\n  closeListModal = () => {\r\n    this.setState({ listModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.listModalIsOpen}\r\n          onRequestClose={this.closeListModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"List of loadable configurations\"\r\n        >\r\n          <h2>List of saved configurations</h2>\r\n          <form>\r\n            {this.props.configList.map(config => {\r\n              return (\r\n                <>\r\n                  {config}\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Delete\"\r\n                    onClick={() => this.props.api.deleteConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Load\"\r\n                    onClick={() => this.props.api.loadConfig(config)}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Download\"\r\n                    onClick={() => this.props.api.downloadConfig(config)}\r\n                  />\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Upload\"\r\n              onClick={() => this.uploadRef.click()}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Load default\"\r\n              onClick={() => {\r\n                this.props.api.loadConfig(\"template.json\");\r\n              }}\r\n            />\r\n          </form>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"uploadConfig\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n            onChange={event => {\r\n              const file = event.target.files[0];\r\n\r\n              const versionName = file.name.match(/V[0-9\\.]+\\.json$/);\r\n              if (!versionName) {\r\n                alert(\"Config does not have a valid name\");\r\n                return;\r\n              }\r\n              const mayorVersion = versionName[0].slice(1, -3).split(\".\")[0];\r\n\r\n              const currentMayorVersion = this.props.config.version.split(\r\n                \".\"\r\n              )[0];\r\n\r\n              if (mayorVersion !== currentMayorVersion) {\r\n                alert(\"Version of new config does not match the current one\");\r\n                return;\r\n              }\r\n\r\n              this.uploadRef.parentElement.submit();\r\n            }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"importConfig\"\r\n              accept=\".json\"\r\n              ref={input => {\r\n                this.uploadRef = input;\r\n              }}\r\n            />\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>General configuration</h2>\r\n              <div className=\"infobar--modalButtons\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Save config\"\r\n                  onClick={() => {\r\n                    const name = prompt(\r\n                      \"Please enter the name for the new config file:\",\r\n                      \"config\"\r\n                    );\r\n                    if (name) this.props.api.saveConfig(name);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Load config\"\r\n                  onClick={() => {\r\n                    this.props.api.getConfigList();\r\n                    this.openListModal();\r\n                    this.closeConfigModal();\r\n                  }}\r\n                />\r\n              </div>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const configList = state.misc.configList;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config,\r\n    configList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\nimport { getColumnWidth } from \"../helpers\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    state.static.exposeUpload &&\r\n    (!configLocked ||\r\n      state.config.table.cells.reduce((acc, cur) => {\r\n        return acc || cur.name;\r\n      }, false));\r\n\r\n  const showInputs =\r\n    !configLocked ||\r\n    state.config.input.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showOutputs =\r\n    !configLocked ||\r\n    state.config.output.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showPorts =\r\n    state.static.exposeUpload && (!configLocked || showInputs || showOutputs);\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showPorts,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../helpers\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const dateformat = require(\"dateformat\");\r\n\r\nconst {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      let newHistory;\r\n      if (!fullState.coms[index]) fullState.coms[index] = { history: [] };\r\n\r\n      if (!entry) {\r\n        newHistory = fullState.coms[index].history;\r\n      } else {\r\n        newHistory = [\r\n          {\r\n            entry,\r\n            entryTime,\r\n            timeString: dateformat(new Date(entryTime), \"HH:MM:ss\")\r\n          },\r\n          ...fullState.coms[index].history\r\n        ];\r\n      }\r\n\r\n      newComs[index] = {\r\n        entry,\r\n        entryTime,\r\n        history: newHistory\r\n      };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const {\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  RECEIVE_CONFIG_LIST\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false,\r\n  configList: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    case RECEIVE_CONFIG_LIST: {\r\n      return {\r\n        ...state,\r\n        configList: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE,\r\n  RECEIVE_CONFIG_LIST\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  socket.on(\"clearserial\", () => {\r\n    store.getState().internal.coms.forEach((com, index) =>\r\n      store.dispatch({\r\n        type: SERIAL_COM_STATE,\r\n        payload: { entry: \"\", entryTime: new Date().getTime(), index }\r\n      })\r\n    );\r\n  });\r\n\r\n  function loadConfig(name) {\r\n    if (name) {\r\n      socket.emit(\"loadConfig\", name, config => {\r\n        console.log(config);\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: JSON.parse(config) });\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/config\")\r\n        .then(result => {\r\n          console.log(\"Got config\");\r\n          store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n        })\r\n        .catch(err => console.log(\"/config\", err));\r\n    }\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig(name) {\r\n    const newConfig = JSON.parse(JSON.stringify(store.getState().config));\r\n    delete newConfig.loaded;\r\n    delete newConfig.locked;\r\n    delete newConfig.hasChanged;\r\n\r\n    if (name) {\r\n      socket.emit(\"configExists\", name, ({ result, name }) => {\r\n        if (\r\n          !result ||\r\n          window.confirm(\"File already exists, do you want to overwrite?\")\r\n        ) {\r\n          socket.emit(\"saveConfig\", { name: name, config: newConfig });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(event) {\r\n    const address = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (event.target.type === \"number\") {\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    console.log({ address, value });\r\n\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  function getConfigList() {\r\n    socket.emit(\"getConfigList\", null, list => {\r\n      store.dispatch({ type: RECEIVE_CONFIG_LIST, payload: list });\r\n    });\r\n  }\r\n\r\n  function deleteConfig(name) {\r\n    if (window.confirm(\"Do you really want to delete \" + name + \"?\")) {\r\n      socket.emit(\"deleteConfig\", name);\r\n      getConfigList();\r\n    }\r\n  }\r\n\r\n  function downloadConfig(name) {\r\n    window.location.href = \"/downloadConfig?file=\" + name;\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig,\r\n    loadConfig,\r\n    getConfigList,\r\n    deleteConfig,\r\n    downloadConfig\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\",\r\n  \"SERIAL_CLEAR\",\r\n  \"RECEIVE_CONFIG_LIST\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}