{"version":3,"sources":["configHelper.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["__webpack_require__","r","__webpack_exports__","d","get","set","makeForm","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","newValue","value","config","name","arguments","undefined","type","Array","isArray","a","createElement","Object","keys","map","key","Fragment","entries","options","entry","min","max","step","checked","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","e","target","api","unlockConfig","saveConfig","state","_this2","react_default","BurgerMenu","customBurgerIcon","pageWrapId","outerContainerId","isOpen","isMenuOpen","className","component_default","onChange","href","onClick","window","confirm","reboot","shutdown","QS","Component","connect","misc","static","configurationValues","serial","coms","testMessage","reader","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","numeric","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","setState","configModalIsOpen","configComIndex","closeConfigModal","lib_default","onRequestClose","overlayClassName","contentLabel","changeConfig","com","configLocked","ReactFitText_default","compressor","concat","internal","objectSpread","locked","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","filter","portsEnabled","indicator","isForced","result","forceOutput","input","exe","exebl","teach","restart","invert","follow","-1","0","manualTimeout","InputList","inputs","forceInput","TableCell","content","manualFunction","menuOptions","option","description","newMenuIndex","findIndex","openModal","table","cells","resetOnExe","Table","configCellIndex","filteredCells","cell","String","fromCharCode","Math","floor","components_TableCell","manual","tableManual","openLog","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","individualTolerance","individualToleranceIncrement","individualToleranceLimit","generalTableColumns","Header","accessor","row","id","style","textAlign","width","Cell","individualColors","textColors","individualTableColumns","console","log","backgroundColor","original","increments","color","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","individualEntries","generalEntries","push","react_table_es","data","columns","success","individual","calibration","toFixed","matchedTolerance","Logo","src","image","alt","title","trigger","1","useFile","waitForOther","searchColumn","logger","writeToFile","logID","unique","resetMode","time","interval","resetValue","condition","FTP","automatic","Infobar","ip","moment","format","getColumnWidth","rows","cellLength","apply","toConsumableArray","Main","openLogModal","logModalIsOpen","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","getLogo","logo","MBDC","loaded","classNames","main--noports","showPorts","main--notable","showTable","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","toggleMenu","selfLearningEnabled","components_SelfLearning","components_ComList","showOutputs","components_OutputList","showInputs","components_InputList","components_Table","reduce","acc","cur","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","Date","getTime","combineReducers","action","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","_action$payload3","entryTime","newComs","_action$payload4","newCells","APIendPoint","location","hostname","store","socket","socketIOClient","messageTypes","_loop","message","on","dispatch","loadConfig","axios","catch","err","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","emit","getState","newConfig","setTimeout","event","isNaN","Boolean","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","p"],"mappings":"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","file":"static/js/main.f462df93.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div name={name}>\r\n          {Object.keys(value).map(key =>\r\n            makeForm(value[key], config, index, name + (name ? \".\" : \"\") + key)\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3>{value.name}</h3>;\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select name={name} value={get(config, name)}>\r\n              {Object.entries(value.options).map(entry => (\r\n                <option value={entry[0]}>{entry[1]}</option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              name={name}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { get, set, makeForm };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  toggleConfigLock = e => {\r\n    if (e.target.checked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        customBurgerIcon={false}\r\n        pageWrapId=\"page-wrap\"\r\n        outerContainerId=\"outer-container\"\r\n        isOpen={this.props.isMenuOpen}\r\n      >\r\n        <span className=\"menu-item\">\r\n          Unlock settings <Toggle onChange={this.toggleConfigLock} />\r\n        </span>\r\n        <a\r\n          className=\"menu-item\"\r\n          href=\"/\"\r\n          onClick={() => {\r\n            if (window.confirm(\"Are you sure you want to reboot?\"))\r\n              this.props.api.reboot();\r\n          }}\r\n        >\r\n          Reboot unit\r\n        </a>\r\n        <span className=\"menu-item\">Upload data</span>\r\n        <a\r\n          className=\"menu-item\"\r\n          href=\"/\"\r\n          onClick={() => {\r\n            if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n              this.props.api.shutdown();\r\n          }}\r\n        >\r\n          Shutdown unit\r\n        </a>\r\n        <span className=\"menu-item\" />\r\n        <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\"\r\n        },\r\n        reader: {\r\n          name: \"MBDC Reader\",\r\n          type: \"checkbox\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate/Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          }\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\"\r\n        },\r\n        postfix: { name: \"Suffix\", type: \"text\" }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configComIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configComIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for com{this.state.configComIndex}</h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configComIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        {this.props.coms.map((com, index) => (\r\n          <div\r\n            className=\"comElement\"\r\n            onClick={\r\n              this.props.configLocked ? null : () => this.openConfigModal(index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div className=\"comElement--content\">\r\n              <FitText>\r\n                <div className=\"center\">{com.entry}</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configPortIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">Outputs</div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className=\"center-vertical\"> {port.name}</div>\r\n                  <div className={\"buttonList--list--indicator \" + indicator} />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow 0\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout in milliseconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configPortIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">Inputs</div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className=\"center-vertical\"> {port.name}</div>\r\n                  <div className={\"buttonList--list--indicator \" + indicator} />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index } = props;\r\n\r\n  let content;\r\n  switch (props.type) {\r\n    case \"manualText\": {\r\n      content = (\r\n        <input\r\n          type=\"text\"\r\n          className=\"tableCell--content--input tableCell--content--input--text\"\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    }\r\n    case \"manualNumeric\": {\r\n      const decrement = () => {\r\n        props.manualFunction(index, Number(props.value) - 1);\r\n      };\r\n      const increment = () => {\r\n        props.manualFunction(index, Number(props.value) + 1);\r\n      };\r\n\r\n      content = (\r\n        <>\r\n          <button onClick={decrement}>-</button>\r\n          <input\r\n            type=\"number\"\r\n            className=\"tableCell--content--input tableCell--content--input--numeric\"\r\n            onChange={e => props.manualFunction(index, e.target.value)}\r\n            value={props.value}\r\n          />\r\n          <button onClick={increment}>+</button>\r\n        </>\r\n      );\r\n      break;\r\n    }\r\n    case \"menuText\": {\r\n      content = (\r\n        <select\r\n          className=\"tableCell--content--input tableCell--content--input--text\"\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={props.value}\r\n        >\r\n          {props.menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    }\r\n    case \"menuNumeric\": {\r\n      const decrement = () => {\r\n        let newMenuIndex =\r\n          props.menuOptions.findIndex(option => option.value === props.value) -\r\n          1;\r\n\r\n        if (newMenuIndex < 0) newMenuIndex = 0;\r\n\r\n        props.manualFunction(index, props.menuOptions[newMenuIndex].value);\r\n      };\r\n      const increment = () => {\r\n        let newMenuIndex =\r\n          props.menuOptions.findIndex(option => option.value === props.value) +\r\n          1;\r\n\r\n        if (newMenuIndex === 0 || newMenuIndex === props.menuOptions.length)\r\n          newMenuIndex = props.menuOptions.length - 1;\r\n\r\n        props.manualFunction(index, props.menuOptions[newMenuIndex].value);\r\n      };\r\n\r\n      content = (\r\n        <>\r\n          <button onClick={decrement}>-</button>\r\n          <select\r\n            className=\"tableCell--content--input tableCell--content--input--numeric\"\r\n            onChange={e => props.manualFunction(index, e.target.value)}\r\n            value={props.value}\r\n          >\r\n            {props.menuOptions.map(option => (\r\n              <option value={option.value}>{option.description}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={increment}>+</button>\r\n        </>\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      content = props.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableCell\">\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{props.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.4}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\"\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const filteredCells = this.props.cells.filter((cell, index) => {\r\n      return index < 10;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>\r\n              Configuration for cell{\" \"}\r\n              {String.fromCharCode(\r\n                65 + Math.floor(this.state.configCellIndex / 5)\r\n              )}\r\n              {(this.state.configCellIndex % 5) + 1}\r\n            </h2>\r\n            {makeForm(\r\n              configurationValues,\r\n              this.props.config,\r\n              this.state.configCellIndex\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${filteredCells.length}`}>\r\n          {filteredCells.map((cell, index) => (\r\n            <TableCell\r\n              key={index}\r\n              name={cell.name}\r\n              value={cell.value}\r\n              index={index}\r\n              type={cell.manual ? \"menuNumeric\" : \"text\"}\r\n              menuOptions={[\r\n                { value: 1, description: \"smeeeeeeeeeeeall\" },\r\n                { value: 3, description: \"big\" }\r\n              ]}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  }\r\n};\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      console.log(props);\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { SLModalIsOpen: false, configModalIsOpen: false };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--title--inProgress\",\r\n      \"selfLearning--title--success\",\r\n      \"selfLearning--title--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      console.log(this.props.individualEntries[key]);\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            <h2>Configuration for SelfLearning</h2>\r\n            {makeForm(configurationValues, this.props.config)}\r\n          </form>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <div>SL: Ind COM0</div>\r\n          <div className=\"selfLearning--modal\">\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <div\r\n          className=\"selfLearning\"\r\n          onClick={\r\n            this.props.configLocked ? this.openSLModal : this.openConfigModal\r\n          }\r\n        >\r\n          <div\r\n            className={\"selfLearning--title \" + indicators[this.props.success]}\r\n          >\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Self Learning</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          <div className=\"selfLearning--content\">\r\n            {this.props.individual ? (\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>\r\n                    {this.props.calibration}{\" \"}\r\n                    {(this.props.tolerance * 100).toFixed(1)} %\r\n                  </div>\r\n                </FitText>\r\n              </div>\r\n            ) : (\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>\r\n                    {this.props.calibration}{\" \"}\r\n                    {(this.props.matchedTolerance * 100).toFixed(1)} %\r\n                  </div>\r\n                </FitText>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  title: {\r\n    name: \"General Configuration\",\r\n    type: \"title\"\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode:\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: \"logger.resetMode==='time'\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          <form onChange={this.props.api.changeConfig}>\r\n            {makeForm(configurationValues, this.props.config)}\r\n          </form>\r\n        </Modal>\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({ logModalIsOpen: true });\r\n    this.reloadLogEntries({ target: { checked: this.state.logModalUnique } });\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e.target.checked;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend.map((name, index) => ({\r\n          Header: () => <b>{name}</b>,\r\n          accessor: index + \"\",\r\n          width: getColumnWidth(result.data.entries, index + \"\"),\r\n          style: { textAlign: \"center\" }\r\n        })),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        .\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noports\": !this.props.showPorts },\r\n            { \"main--notable\": !this.props.showTable }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <Infobar api={this.props.api} />\r\n          <div className=\"logos\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n            {this.props.selfLearningEnabled && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n          </div>\r\n          <div className=\"coms\">\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n          {this.props.showPorts && (\r\n            <div className=\"ports\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable = state.config.table.cells.reduce((acc, cur) => {\r\n    return acc || cur.name;\r\n  }, false);\r\n\r\n  const showInputs = state.config.input.ports.reduce((acc, cur) => {\r\n    return acc || cur.name;\r\n  }, false);\r\n\r\n  const showOutputs = state.config.output.ports.reduce((acc, cur) => {\r\n    return acc || cur.name;\r\n  }, false);\r\n\r\n  const showPorts = showInputs || showOutputs;\r\n\r\n  const selfLearningEnabled = state.internal.selfLearning.enabled;\r\n\r\n  const configLocked = state.config.locked;\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showPorts,\r\n    selfLearningEnabled,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../configHelper\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  }\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      newComs[index] = { entry, entryTime };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      console.log(action.payload);\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME, TOGGLE_MENU } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC\r\n} from \"./actions/types\";\r\n\r\nconst APIendPoint = \"http://\" + window.location.hostname + \":80\";\r\n//const APIendPoint = \"http://192.168.1.67:80\";\r\nconsole.log(APIendPoint);\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient(APIendPoint);\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  function loadConfig() {\r\n    axios\r\n      .get(APIendPoint + \"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(APIendPoint + \"/config\", err));\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(APIendPoint + \"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(APIendPoint + \"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(APIendPoint + \"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(APIendPoint + \"/restart\");\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(APIendPoint + \"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(APIendPoint + \"/logo\");\r\n      logo = APIendPoint + \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig() {\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        const newConfig = store.getState().config;\r\n        delete newConfig.loaded;\r\n        delete newConfig.locked;\r\n        delete newConfig.hasChanged;\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        setTimeout(() => {\r\n          loadConfig();\r\n        }, 5000);\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(event) {\r\n    const address = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (!isNaN(Number(event.target.value))) {\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    console.log({ address, value });\r\n\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}