{"version":3,"sources":["configHelper.js","components/Sidebar.js","components/ComList.js","components/OutputList.js","components/InputList.js","components/TableCell.js","components/Table.js","components/SelfLearning.js","components/Logo.js","components/Infobar.js","components/Main.js","App.js","reducers/configReducer.js","reducers/staticReducer.js","reducers/internalReducer.js","reducers/miscReducer.js","reducers/rootReducer.js","api.js","serviceWorker.js","index.js","actions/types.js","assets/Logo-MBDC.jpg"],"names":["__webpack_require__","r","__webpack_exports__","d","get","set","makeForm","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","object","address","parts","replace","split","length","index","match","slice","newAddress","Number","newValue","value","config","name","arguments","undefined","type","Array","isArray","a","createElement","key","Object","keys","filter","conditions","map","Fragment","entries","options","entry","min","max","step","checked","Sidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleConfigLock","configLocked","api","unlockConfig","saveConfig","openUploadModal","setState","uploadModalIsOpen","toggleMenu","closeUploadModal","state","_this2","react_default","lib_default","isOpen","onRequestClose","overlayClassName","className","contentLabel","id","action","method","enctype","onclick","accept","BurgerMenu","right","customBurgerIcon","pageWrapId","outerContainerId","isMenuOpen","onStateChange","newState","width","onClick","component_default","window","confirm","reboot","openLogModal","shutdown","QS","href","Component","connect","locked","misc","static","configurationValues","serial","coms","testMessage","reader","baudRate","stopBits","bits","parity","none","even","odd","mark","space","RTSCTS","XONXOFF","numeric","average","factor","digits","alwaysPositive","timeoutReset","timeout","prefix","postfix","ComList","openConfigModal","configModalIsOpen","configComIndex","closeConfigModal","onChange","changeConfig","com","ReactFitText_default","compressor","concat","classNames","comElement--content--testMode","testMode","internal","objectSpread","Modal","setAppElement","output","ports","formula","execute","OutputList","configPortIndex","outputs","port","portsEnabled","indicator","isForced","result","forceOutput","input","","exe","exebl","teach","restart","invert","follow","-1","0","manualTimeout","InputList","inputs","forceInput","TableCell","content","cell","console","log","classnames","tableCell--content--input--text","tableCell--content--input--numeric","e","manualFunction","target","menuOptions","str","description","option","newMenuIndex","findIndex","tableCell--notFound","notFound","openModal","table","cells","normal","date","manual","menu","resetOnExe","Table","configCellIndex","cellConfig","String","fromCharCode","Math","floor","components_TableCell","tableManual","openLog","tableNotFound","selfLearning","enabled","off","com0","com1","com0ind","com1ind","number","startCalibration","tolerance","startTolerance","individualTolerance","individualToleranceIncrement","individualToleranceLimit","generalTableColumns","Header","accessor","row","style","textAlign","Cell","individualColors","textColors","individualTableColumns","backgroundColor","original","increments","color","SelfLearning","openSLModal","SLModalIsOpen","closeSLModal","individualEntries","generalEntries","push","calibration","toConsumableArray","individual","matchedTolerance","react_table_es","data","columns","success","Logo","src","image","alt","title","resetTrigger","on","trigger","1","useFile","waitForOther","searchColumn","logger","writeToFile","logID","unique","resetMode","time","interval","resetValue","condition","FTP","automatic","Infobar","ip","moment","format","getColumnWidth","rows","cellLength","apply","Main","logModalIsOpen","reloadInterval","setInterval","reloadLogEntries","logModalUnique","getUniqueLog","getLog","then","logTableColumns","legend","logEntries","closeLogModal","clearInterval","getLogo","logo","MBDC","loaded","main--noinputs","showInputs","main--notable","showTable","main--nooutputs","showOutputs","uniqueLogEnabled","fontSize","components_Infobar","components_Logo","coms--noselfLearning","showSelfLearning","components_SelfLearning","components_ComList","components_OutputList","components_InputList","components_Table","reduce","acc","cur","showPorts","enabledModules","App","components_Sidebar","components_Main","require","RECEIVE_CONFIG","CONFIG_UNLOCK","CONFIG_LOCK","CONFIG_CHANGE","initialState","hasChanged","RECEIVE_STATIC","INPUT_PORT_STATE","OUTPUT_PORT_STATE","SERIAL_COM_STATE","TABLE_CELL_STATE","SELFLEARNING_STATE","TABLE_FOUND_STATE","RECEIVE_IP","RECEIVE_TIME","TOGGLE_MENU","Date","getTime","combineReducers","payload","_action$payload","fullState","newInputs","from","_action$payload2","newOutputs","_action$payload3","entryTime","newComs","_action$payload4","newCells","store","socket","socketIOClient","messageTypes","notfound","_loop","message","dispatch","loadConfig","axios","catch","err","setTimeout","_getLogo","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","abrupt","stop","document","emit","getState","newConfig","location","reload","event","Boolean","hostname","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","array","forEach","elem","stringMapFromArray","p"],"mappings":"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","file":"static/js/main.f74c8be9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction get(object, address) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    return object[parts[0]];\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    return get(object[Number(index)], newAddress);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    return get(object[parts[0]], newAddress);\r\n  }\r\n}\r\n\r\nfunction set(object, address, newValue) {\r\n  address = address.replace(/^\\.+/, \"\");\r\n  const parts = address.split(/[.[]/);\r\n\r\n  if (parts.length === 1) {\r\n    object[parts[0]] = newValue;\r\n  } else if (address[0] === \"[\") {\r\n    const index = address.match(/\\[[0-9]+\\]/)[0].slice(1, -1);\r\n    const newAddress = address.slice(index.length + 2);\r\n    set(object[Number(index)], newAddress, newValue);\r\n  } else {\r\n    const newAddress = address.slice(parts[0].length);\r\n    set(object[parts[0]], newAddress, newValue);\r\n  }\r\n}\r\n\r\nfunction makeForm(value, config, index, name = \"\") {\r\n  if (typeof value.type === \"undefined\" || typeof value.type === \"object\") {\r\n    if (Array.isArray(value)) {\r\n      if (value.length === 1) {\r\n        return (\r\n          index >= 0 && (\r\n            <div name={name}>\r\n              {Object.keys(value[0]).map(key =>\r\n                makeForm(\r\n                  value[0][key],\r\n                  config,\r\n                  index,\r\n                  name + \"[\" + index + \"].\" + key\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div key={name} name={name}>\r\n          {Object.keys(value)\r\n            .filter(key => {\r\n              const { conditions } = value[key];\r\n              if (!conditions) return true;\r\n\r\n              return true;\r\n            })\r\n            .map(key =>\r\n              makeForm(\r\n                value[key],\r\n                config,\r\n                index,\r\n                name + (name ? \".\" : \"\") + key\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    switch (value.type) {\r\n      case \"title\": {\r\n        return <h3 key={value.name}>{value.name}</h3>;\r\n      }\r\n      case \"select\": {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <select name={name} value={get(config, name)}>\r\n              {Object.entries(value.options).map((entry, index) => (\r\n                <option key={index} value={entry[0]}>\r\n                  {entry[1]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <>\r\n            {value.name}:\r\n            <input\r\n              type={value.type}\r\n              name={name}\r\n              min={value.min}\r\n              max={value.max}\r\n              step={value.step}\r\n              checked={get(config, name)}\r\n              value={get(config, name)}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { get, set, makeForm };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Toggle from \"react-toggle\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"../styles/sidebar.scss\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploadModalIsOpen: false };\r\n  }\r\n\r\n  toggleConfigLock = () => {\r\n    if (this.props.configLocked) {\r\n      this.props.api.unlockConfig();\r\n    } else {\r\n      this.props.api.saveConfig();\r\n    }\r\n  };\r\n\r\n  openUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: true });\r\n    this.props.api.toggleMenu();\r\n  };\r\n\r\n  closeUploadModal = () => {\r\n    this.setState({ uploadModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.uploadModalIsOpen}\r\n          onRequestClose={this.closeUploadModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"File Upload Modal\"\r\n        >\r\n          <h2>Upload an excel file</h2>\r\n          <form\r\n            id=\"uploadForm\"\r\n            action=\"importFile\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input type=\"button\" value=\"Import .xls\" onclick={() => {}} />\r\n            <input type=\"file\" name=\"importFile\" accept=\".xls\" />\r\n          </form>\r\n        </Modal>\r\n        <Menu\r\n          right\r\n          customBurgerIcon={false}\r\n          pageWrapId=\"page-wrap\"\r\n          outerContainerId=\"outer-container\"\r\n          isOpen={this.props.isMenuOpen}\r\n          onStateChange={newState =>\r\n            !newState.isOpen && this.props.api.toggleMenu()\r\n          }\r\n          width={400}\r\n        >\r\n          <span\r\n            onClick={this.toggleConfigLock}\r\n            className=\"menu-item menu-item--clickable\"\r\n          >\r\n            Unlock settings <Toggle checked={!this.props.configLocked} />\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to reboot?\")) {\r\n                this.props.api.reboot();\r\n                this.props.api.toggleMenu();\r\n              }\r\n            }}\r\n          >\r\n            Reboot unit\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={this.openUploadModal}\r\n          >\r\n            Upload data\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={this.openLogModal}\r\n          >\r\n            Download log files\r\n          </span>\r\n          <span\r\n            className=\"menu-item menu-item--clickable\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to shutdown?\"))\r\n                this.props.api.shutdown();\r\n            }}\r\n          >\r\n            Shutdown unit\r\n          </span>\r\n          <span className=\"menu-item\" />\r\n          <span className=\"menu-item\">QS code: {this.props.QS}</span>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            (OLD) serial settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/filesettings\">\r\n            (OLD) other settings\r\n          </a>\r\n          <a className=\"menu-item\" href=\"/fileupload\">\r\n            (OLD) upload file\r\n          </a>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    configLocked: state.config.locked,\r\n    isMenuOpen: state.misc.isMenuOpen,\r\n    QS: state.static.QS\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FitText from \"react-fittext\";\r\nimport Modal from \"react-modal\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/comElement.scss\";\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    coms: [\r\n      {\r\n        testMessage: {\r\n          name: \"Test value\",\r\n          type: \"text\"\r\n        },\r\n        reader: {\r\n          name: \"MBDC Reader\",\r\n          type: \"checkbox\"\r\n        },\r\n        baudRate: {\r\n          name: \"Baudrate/Port\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        stopBits: {\r\n          name: \"Number of stop bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        bits: {\r\n          name: \"Number of data bits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        parity: {\r\n          name: \"Parity of data\",\r\n          type: \"select\",\r\n          options: {\r\n            none: \"None\",\r\n            even: \"Even\",\r\n            odd: \"Odd\",\r\n            mark: \"Mark\",\r\n            space: \"Space\"\r\n          }\r\n        },\r\n        RTSCTS: {\r\n          name: \"RTS/CTS\",\r\n          type: \"checkbox\"\r\n        },\r\n        XONXOFF: {\r\n          name: \"XON/XOFF\",\r\n          type: \"checkbox\"\r\n        },\r\n        name: {\r\n          name: \"Name of port\",\r\n          type: \"text\"\r\n        },\r\n        entries: {\r\n          name: \"Number of entries\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as number\",\r\n          type: \"checkbox\"\r\n        },\r\n        average: {\r\n          name: \"Take average\",\r\n          type: \"checkbox\"\r\n        },\r\n        factor: {\r\n          name: \"Factor\",\r\n          type: \"number\"\r\n        },\r\n        digits: {\r\n          name: \"Digits/rounding\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        alwaysPositive: {\r\n          name: \"Always positive\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeoutReset: {\r\n          name: \"Reset after timeout\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        prefix: {\r\n          name: \"Prefix\",\r\n          type: \"text\"\r\n        },\r\n        postfix: { name: \"Suffix\", type: \"text\" }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass ComList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configComIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configComIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for com{this.state.configComIndex}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configComIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        {this.props.coms.map((com, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"comElement\"\r\n            onClick={\r\n              this.props.configLocked ? null : () => this.openConfigModal(index)\r\n            }\r\n          >\r\n            <div className=\"comElement--title\">\r\n              <div className=\"center\">\r\n                <FitText>\r\n                  <div>{com.name}</div>\r\n                </FitText>\r\n                <FitText compressor={2}>\r\n                  <div>{com.average && `Average ${com.entries}`}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classNames(\"comElement--content\", {\r\n                \"comElement--content--testMode\": this.props.testMode\r\n              })}\r\n            >\r\n              <div className=\"center\">\r\n                <FitText compressor={0.9}>\r\n                  <div>{com.entry}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const coms = state.internal.coms.map((com, index) => ({\r\n    ...com,\r\n    ...state.config.serial.coms[index]\r\n  }));\r\n\r\n  return {\r\n    coms,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    testMode: state.config.serial.testMode\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/outputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  output: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of output\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for output\",\r\n          type: \"text\"\r\n        },\r\n        execute: {\r\n          name: \"Only on execute\",\r\n          type: \"checkbox\"\r\n        },\r\n        timeout: {\r\n          name: \"Timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass OutputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Output Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for output {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Outputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.outputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--output\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              if (port.state) {\r\n                indicator += \"On\";\r\n              } else if (port.result && !port.isForced) {\r\n                indicator += \"Execute\";\r\n              } else {\r\n                indicator += \"Off\";\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceOutput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const outputs = state.internal.outputs.map((output, index) => ({\r\n    ...output,\r\n    name: state.config.output.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.output.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    outputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OutputList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport FitText from \"react-fittext\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/inputList.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  input: {\r\n    ports: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        formula: {\r\n          name: \"Command for input\",\r\n          type: \"select\",\r\n          options: {\r\n            \"\": \"\",\r\n            exe: \"Execute\",\r\n            exebl: \"Execute Block\",\r\n            teach: \"SL Teach\",\r\n            restart: \"Restart\",\r\n            shutdown: \"Shutdown\"\r\n          }\r\n        },\r\n        invert: {\r\n          name: \"Invert follow\",\r\n          type: \"checkbox\"\r\n        },\r\n        follow: {\r\n          name: \"Follow output\",\r\n          type: \"select\",\r\n          options: {\r\n            \"-1\": \"None\",\r\n            \"0\": \"Follow 0\"\r\n          }\r\n        },\r\n        timeout: {\r\n          name: \"Debounce timeout in milliseconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        manualTimeout: {\r\n          name: \"Manual timeout in seconds\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass InputList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configPortIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configPortIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Input Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for input {this.state.configPortIndex + 1}</h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configPortIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className=\"buttonList inputList\">\r\n          <div className=\"buttonList--title\">\r\n            <div className=\"center\">\r\n              <FitText>\r\n                <div>Inputs</div>\r\n              </FitText>\r\n            </div>\r\n          </div>\r\n          {this.props.inputs\r\n            .map((port, index) => ({ ...port, index }))\r\n            .filter((port, index) => {\r\n              return (\r\n                this.props.portsEnabled[index] ||\r\n                port.name !== \"\" ||\r\n                !this.props.configLocked\r\n              );\r\n            })\r\n            .map(port => {\r\n              let indicator = \"buttonList--list--indicator--input\";\r\n              if (port.isForced) indicator += \"Forced\";\r\n\r\n              indicator += port.state ? \"On\" : \"Off\";\r\n\r\n              return (\r\n                <div\r\n                  key={port.index}\r\n                  className=\"buttonList--list--item\"\r\n                  onClick={\r\n                    this.props.configLocked\r\n                      ? () => this.props.api.forceInput(port.index)\r\n                      : () => this.openConfigModal(port.index)\r\n                  }\r\n                >\r\n                  <div className={\"buttonList--list--indicator \" + indicator}>\r\n                    <div className=\"center\">\r\n                      <FitText compressor={1.05}>\r\n                        <div>{port.name}</div>\r\n                      </FitText>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const inputs = state.internal.inputs.map((input, index) => ({\r\n    ...input,\r\n    name: state.config.input.ports[index].name\r\n  }));\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  const portsEnabled = state.config.input.ports.map(\r\n    port => port.formula !== \"\"\r\n  );\r\n\r\n  return {\r\n    inputs,\r\n    configLocked,\r\n    config,\r\n    portsEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputList);\r\n","import React from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"../styles/tableCell.scss\";\r\n\r\nconst TableCell = props => {\r\n  const { index, cell } = props;\r\n  console.log(cell.type);\r\n  let content;\r\n  switch (cell.type) {\r\n    case \"manual\": {\r\n      content = (\r\n        <input\r\n          type=\"text\"\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        />\r\n      );\r\n      if (props.cell.numeric) {\r\n        const decrement = () => {\r\n          props.manualFunction(index, Number(cell.value) - 1);\r\n        };\r\n        const increment = () => {\r\n          props.manualFunction(index, Number(cell.value) + 1);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"menu\": {\r\n      console.log(cell.formula);\r\n      const menuOptions = (cell.formula.match(/{[0-9\\.]+:\\w+}/g) || []).map(\r\n        str => {\r\n          const parts = str.split(\":\");\r\n          return {\r\n            value: Number(parts[0].slice(1)),\r\n            description: parts[1].slice(0, -1)\r\n          };\r\n        }\r\n      );\r\n\r\n      content = (\r\n        <select\r\n          className={classnames(\r\n            \"tableCell--content--input\",\r\n            { \"tableCell--content--input--text\": !cell.numeric },\r\n            { \"tableCell--content--input--numeric\": cell.numeric }\r\n          )}\r\n          onChange={e => props.manualFunction(index, e.target.value)}\r\n          value={cell.value}\r\n        >\r\n          {menuOptions.map(option => (\r\n            <option value={option.value}>{option.description}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n\r\n      if (cell.numeric) {\r\n        const decrement = () => {\r\n          let newMenuIndex =\r\n            props.menuOptions.findIndex(\r\n              option => option.value === props.value\r\n            ) - 1;\r\n\r\n          if (newMenuIndex < 0) newMenuIndex = 0;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n        const increment = () => {\r\n          let newMenuIndex =\r\n            menuOptions.findIndex(option => option.value === cell.value) + 1;\r\n\r\n          if (newMenuIndex === 0 || newMenuIndex === menuOptions.length)\r\n            newMenuIndex = menuOptions.length - 1;\r\n\r\n          props.manualFunction(index, menuOptions[newMenuIndex].value);\r\n        };\r\n\r\n        content = (\r\n          <>\r\n            <button onClick={decrement}>-</button>\r\n            {content}\r\n            <button onClick={increment}>+</button>\r\n          </>\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      content = cell.value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"tableCell\", {\r\n        \"tableCell--notFound\": props.notFound\r\n      })}\r\n    >\r\n      <div className=\"tableCell--title\" onClick={props.openModal}>\r\n        <FitText>\r\n          <div className=\"center\">{cell.name}</div>\r\n        </FitText>\r\n      </div>\r\n      <div className=\"tableCell--content\">\r\n        <FitText compressor={0.6}>\r\n          <div className=\"center\">{content}</div>\r\n        </FitText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport TableCell from \"./TableCell\";\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/table.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  table: {\r\n    cells: [\r\n      {\r\n        name: {\r\n          name: \"Name of cell\",\r\n          type: \"text\"\r\n        },\r\n        type: {\r\n          name: \"Type of content\",\r\n          type: \"select\",\r\n          options: {\r\n            normal: \"Normal\",\r\n            date: \"Date\",\r\n            manual: \"Input\",\r\n            menu: \"Menu\"\r\n          }\r\n        },\r\n        numeric: {\r\n          name: \"Treat value as a number\",\r\n          type: \"checkbox\"\r\n        },\r\n        formula: {\r\n          name: \"Formula for cell value\",\r\n          type: \"text\"\r\n        },\r\n        digits: {\r\n          name: \"Number of digits\",\r\n          type: \"number\",\r\n          min: 0,\r\n          step: 1\r\n        },\r\n        resetOnExe: {\r\n          name: \"Reset value after execute\",\r\n          type: \"checkbox\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false, configCellIndex: -1 };\r\n  }\r\n\r\n  openConfigModal = index => {\r\n    this.setState({ configModalIsOpen: true, configCellIndex: index });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const cells = this.props.cells.map((cell, index) => ({\r\n      ...cell,\r\n      ...this.props.cellConfig[index]\r\n    }));\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"Table Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>\r\n                Configuration for cell{\" \"}\r\n                {String.fromCharCode(\r\n                  65 + Math.floor(this.state.configCellIndex / 5)\r\n                )}\r\n                {(this.state.configCellIndex % 5) + 1}\r\n              </h2>\r\n              {makeForm(\r\n                configurationValues,\r\n                this.props.config,\r\n                this.state.configCellIndex\r\n              )}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div className={`table--grid table--grid--${cells.length}`}>\r\n          {cells.map((cell, index) => (\r\n            <TableCell\r\n              key={index}\r\n              cell={cell}\r\n              index={index}\r\n              notFound={this.props.notFound}\r\n              manualFunction={this.props.api.tableManual}\r\n              openModal={\r\n                this.props.configLocked\r\n                  ? this.props.openLog\r\n                  : () => this.openConfigModal(index)\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const cells = state.internal.cells.map((cell, index) => ({\r\n    ...cell,\r\n    name: state.config.table.cells[index].name\r\n  }));\r\n\r\n  return {\r\n    cells,\r\n    configLocked: state.config.locked,\r\n    config: state.config,\r\n    cellConfig: state.config.table.cells,\r\n    notFound: state.internal.tableNotFound\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport FitText from \"react-fittext\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\nimport \"../styles/selfLearning.scss\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst configurationValues = {\r\n  selfLearning: {\r\n    enabled: {\r\n      name: \"Enabled type\",\r\n      type: \"select\",\r\n      options: {\r\n        off: \"Off\",\r\n        com0: \"Com 0\",\r\n        com1: \"Com 1\",\r\n        com0ind: \"Com 0 Individual\",\r\n        com1ind: \"Com 1 Individual\"\r\n      }\r\n    },\r\n    number: {\r\n      name: \"Number\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startCalibration: {\r\n      name: \"Calibration\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    tolerance: {\r\n      name: \"Tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    startTolerance: {\r\n      name: \"Additional tolerance during learning\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualTolerance: {\r\n      name: \"Individual tolerance\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceIncrement: {\r\n      name: \"Individual tolerance increment\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    },\r\n    individualToleranceLimit: {\r\n      name: \"Individual tolerance limit\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  }\r\n};\r\n\r\nconst generalTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: row => row.entries[0],\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-1\",\r\n    accessor: row => row.entries[1],\r\n    id: 2,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-2\",\r\n    accessor: row => row.entries[2],\r\n    id: 3,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-3\",\r\n    accessor: row => row.entries[3],\r\n    id: 4,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"-4\",\r\n    accessor: row => row.entries[4],\r\n    id: 5,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nconst individualColors = [\"\", \"green\", \"yellow\", \"orange\", \"red\"];\r\nconst textColors = [\"black\", \"white\", \"black\", \"black\", \"white\"];\r\n\r\nconst individualTableColumns = [\r\n  {\r\n    Header: \"Com0\",\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Com1\",\r\n    accessor: \"key\",\r\n    style: { textAlign: \"center\" },\r\n    width: 200\r\n  },\r\n  {\r\n    Header: () => <input type=\"text\" />,\r\n    accessor: \"calibration\",\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  },\r\n  {\r\n    Header: \"Tol\",\r\n    accessor: \"tolerance\",\r\n    Cell: props => {\r\n      console.log(props);\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: individualColors[props.original.increments],\r\n            color: textColors[props.original.increments]\r\n          }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n      );\r\n    },\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: \"Num\",\r\n    accessor: \"numUpdates\",\r\n    style: { textAlign: \"center\" },\r\n    width: 50\r\n  },\r\n  {\r\n    Header: props => <button>Delete</button>,\r\n    Cell: props => <button>Delete</button>,\r\n    id: 1,\r\n    style: { textAlign: \"center\" },\r\n    width: 70\r\n  }\r\n];\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass SelfLearning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { SLModalIsOpen: false, configModalIsOpen: false };\r\n  }\r\n\r\n  openSLModal = () => {\r\n    this.setState({ SLModalIsOpen: true });\r\n  };\r\n\r\n  closeSLModal = () => {\r\n    this.setState({ SLModalIsOpen: false });\r\n  };\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const indicators = [\r\n      \"selfLearning--inProgress\",\r\n      \"selfLearning--success\",\r\n      \"selfLearning--warning\"\r\n    ];\r\n\r\n    const individualEntries = [];\r\n    const generalEntries = [];\r\n\r\n    for (let key in this.props.generalEntries) {\r\n      generalEntries.push({ key, entries: this.props.generalEntries[key] });\r\n    }\r\n    for (let key in this.props.individualEntries) {\r\n      console.log(this.props.individualEntries[key]);\r\n      individualEntries.push({ key, ...this.props.individualEntries[key] });\r\n    }\r\n\r\n    const cells = [\r\n      \"Self Learning:\",\r\n      this.props.calibration || 0,\r\n      ...(this.props.individual\r\n        ? [this.props.tolerance * 100 + \"%\"]\r\n        : [\r\n            (this.props.tolerance || 0) * 100 + \"%\",\r\n            (this.props.tolerance || 0 - this.props.matchedTolerance || 0) *\r\n              100 +\r\n              \"%\"\r\n          ])\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>Configuration for SelfLearning</h2>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.SLModalIsOpen}\r\n          onRequestClose={this.closeSLModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"SelfLearning Modal\"\r\n        >\r\n          <div className=\"selfLearning--modal\">\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> SL-list </div>\r\n              <ReactTable\r\n                style={{ textAlign: \"center\" }}\r\n                data={generalEntries}\r\n                columns={generalTableColumns}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"selfLearning--modal--title\"> UN-list </div>\r\n              <ReactTable\r\n                data={individualEntries}\r\n                columns={individualTableColumns}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <div\r\n          className={classNames(\r\n            \"selfLearning\",\r\n            indicators[this.props.success || 0]\r\n          )}\r\n          onClick={\r\n            this.props.configLocked ? this.openSLModal : this.openConfigModal\r\n          }\r\n        >\r\n          {cells.map((cell, index) => (\r\n            <div key={index} className={\"selfLearning--cell\"}>\r\n              <div className=\"center\">\r\n                <FitText compressor={0.65}>\r\n                  <div>{cell}</div>\r\n                </FitText>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return { ...state.internal.selfLearning, configLocked, config };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfLearning);\r\n","import React from \"react\";\r\nimport \"../styles/logo.scss\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"logo\" onClick={props.onClick}>\r\n      <img className=\"center\" src={props.image} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport FitText from \"react-fittext\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { makeForm } from \"../configHelper\";\r\n\r\nimport \"../styles/infobar.scss\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst configurationValues = {\r\n  serial: {\r\n    title: {\r\n      name: \"Serial\",\r\n      type: \"title\"\r\n    },\r\n    testMode: { name: \"Enable test mode\", type: \"checkbox\" },\r\n    resetTrigger: {\r\n      name: \"Reset on zero\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", on: \"On\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    }\r\n  },\r\n  table: {\r\n    title: {\r\n      name: \"Table\",\r\n      type: \"title\"\r\n    },\r\n    trigger: {\r\n      name: \"Trigger\",\r\n      type: \"select\",\r\n      options: { \"0\": \"Com 0\", \"1\": \"Com 1\" }\r\n    },\r\n    useFile: { name: \"Use imported file\", type: \"checkbox\" },\r\n    waitForOther: { name: \"Wait for other com\", type: \"checkbox\" },\r\n    searchColumn: {\r\n      name: \"Column to search in\",\r\n      type: \"number\",\r\n      min: 0,\r\n      step: 1\r\n    }\r\n  },\r\n  logger: {\r\n    title: {\r\n      name: \"Logger\",\r\n      type: \"title\"\r\n    },\r\n    writeToFile: {\r\n      name: \"Write log to file\",\r\n      type: \"checkbox\"\r\n    },\r\n    logID: {\r\n      name: \"ID of log\",\r\n      type: \"text\"\r\n    },\r\n    unique: {\r\n      name: \"Unique log type\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", com0: \"Com 0\", com1: \"Com 1\" }\r\n    },\r\n    resetMode: {\r\n      name: \"Reset mode:\",\r\n      type: \"select\",\r\n      options: { off: \"Off\", time: \"Time of day\", interval: \"Time interval\" }\r\n    },\r\n    resetValue: {\r\n      name: \"Reset time\",\r\n      type: \"time\",\r\n      condition: \"logger.resetMode==='time'\"\r\n    }\r\n  },\r\n  FTP: {\r\n    title: {\r\n      name: \"FTP\",\r\n      type: \"title\"\r\n    },\r\n    automatic: {\r\n      name: \"Automatically upload logs on FTP\",\r\n      type: \"checkbox\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Infobar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { configModalIsOpen: false };\r\n  }\r\n\r\n  openConfigModal = () => {\r\n    this.setState({ configModalIsOpen: true });\r\n  };\r\n\r\n  closeConfigModal = () => {\r\n    this.setState({ configModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.state.configModalIsOpen}\r\n          onRequestClose={this.closeConfigModal}\r\n          overlayClassName=\"modalOverlay\"\r\n          className=\"modalContent\"\r\n          contentLabel=\"General Configuration Modal\"\r\n        >\r\n          {this.state.configModalIsOpen && (\r\n            <form onChange={this.props.api.changeConfig}>\r\n              <h2>General configuration</h2>\r\n              {makeForm(configurationValues, this.props.config)}\r\n            </form>\r\n          )}\r\n        </Modal>\r\n        <div\r\n          className=\"infobar\"\r\n          onClick={this.props.configLocked ? null : this.openConfigModal}\r\n        >\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.name}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">{this.props.ip}</div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"HH:mm:ss\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n          <FitText>\r\n            <div className=\"infobar--item\">\r\n              <div className=\"center\">\r\n                {moment(this.props.time).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            </div>\r\n          </FitText>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const name = state.static.name;\r\n  const ip = state.misc.ip;\r\n  const time = state.misc.time;\r\n\r\n  const configLocked = state.config.locked;\r\n  const config = state.config;\r\n\r\n  return {\r\n    name,\r\n    ip,\r\n    time,\r\n    configLocked,\r\n    config\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Infobar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport ReactTable from \"react-table\";\r\nimport Toggle from \"react-toggle\";\r\nimport classNames from \"classnames\";\r\n\r\nimport ComList from \"./ComList\";\r\nimport OutputList from \"./OutputList\";\r\nimport InputList from \"./InputList\";\r\nimport Table from \"./Table\";\r\nimport SelfLearning from \"./SelfLearning\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport MBDC from \"../assets/Logo-MBDC.jpg\";\r\nimport Infobar from \"./Infobar\";\r\n\r\nimport \"../styles/main.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst getColumnWidth = (rows, accessor) => {\r\n  const maxWidth = 400;\r\n  const minWidth = 50;\r\n  const magicSpacing = 11;\r\n  const cellLength = Math.max(\r\n    ...rows.map(row => (`${row[accessor]}` || \"\").length)\r\n  );\r\n  return Math.max(minWidth, Math.min(maxWidth, cellLength * magicSpacing));\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.api.getLogo().then(result => {\r\n      if (result) {\r\n        this.setState({ logo: result });\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      logModalIsOpen: false,\r\n      logModalUnique: false,\r\n      logEntries: [],\r\n      logTableColumns: [],\r\n      logo: MBDC,\r\n      reloadInterval: null\r\n    };\r\n  }\r\n\r\n  openLogModal = () => {\r\n    this.setState({\r\n      logModalIsOpen: true,\r\n      reloadInterval: setInterval(this.reloadLogEntries, 1000)\r\n    });\r\n    this.reloadLogEntries();\r\n  };\r\n\r\n  reloadLogEntries = e => {\r\n    const unique = e ? e.target.checked : this.state.logModalUnique;\r\n    const getFunction = unique\r\n      ? this.props.api.getUniqueLog\r\n      : this.props.api.getLog;\r\n\r\n    getFunction().then(result => {\r\n      this.setState({\r\n        logTableColumns: result.data.legend\r\n          .map((name, index) => ({\r\n            Header: () => <b>{name}</b>,\r\n            accessor: index + \"\",\r\n            width: getColumnWidth(result.data.entries, index + \"\"),\r\n            style: { textAlign: \"center\" }\r\n          }))\r\n          .filter((name, index) => index >= 2),\r\n        logEntries: result.data.entries,\r\n        logModalUnique: unique\r\n      });\r\n    });\r\n  };\r\n\r\n  closeLogModal = () => {\r\n    clearInterval(this.state.reloadInterval);\r\n    this.setState({ logModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.loaded) {\r\n      return <div className=\"loadingScreen\">Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"page-wrap\">\r\n        .\r\n        <div\r\n          className={classNames(\r\n            \"main\",\r\n            { \"main--noinputs\": !this.props.showInputs },\r\n            { \"main--notable\": !this.props.showTable },\r\n            { \"main--nooutputs\": !this.props.showOutputs }\r\n          )}\r\n        >\r\n          <Modal\r\n            isOpen={this.state.logModalIsOpen}\r\n            onRequestClose={this.closeLogModal}\r\n            overlayClassName=\"modalOverlay\"\r\n            className=\"modalContent\"\r\n            contentLabel=\"Log Modal\"\r\n          >\r\n            {this.props.uniqueLogEnabled && (\r\n              <span>\r\n                <Toggle\r\n                  checked={this.state.logModalUnique}\r\n                  onChange={this.reloadLogEntries}\r\n                />\r\n                Only show unique entries\r\n              </span>\r\n            )}\r\n            <div className=\"main--logModal\">\r\n              <div>\r\n                <div className=\"main--logModal--title\">\r\n                  {this.state.logModalUnique ? \"Unique Log\" : \"Normal Log\"}\r\n                </div>\r\n                <ReactTable\r\n                  style={{ fontSize: 13 }}\r\n                  data={this.state.logEntries}\r\n                  columns={this.state.logTableColumns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <div className=\"info\">\r\n            <Infobar api={this.props.api} />\r\n          </div>\r\n\r\n          <div className=\"logo\">\r\n            <Logo\r\n              image={this.state.logo}\r\n              alt=\"LOGO\"\r\n              onClick={this.props.api.toggleMenu}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classNames(\"coms\", {\r\n              \"coms--noselfLearning\": !this.props.showSelfLearning\r\n            })}\r\n          >\r\n            {this.props.showSelfLearning && (\r\n              <SelfLearning api={this.props.api} />\r\n            )}\r\n            <ComList api={this.props.api} />\r\n          </div>\r\n\r\n          {this.props.showOutputs && (\r\n            <div className=\"outputs\">\r\n              {this.props.showOutputs && <OutputList api={this.props.api} />}{\" \"}\r\n            </div>\r\n          )}\r\n          {this.props.showInputs && (\r\n            <div className=\"inputs\">\r\n              {this.props.showInputs && <InputList api={this.props.api} />}\r\n            </div>\r\n          )}\r\n          {this.props.showTable && (\r\n            <div className=\"table\">\r\n              <Table api={this.props.api} openLog={this.openLogModal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const configLocked = state.config.locked;\r\n\r\n  if (!state.config.loaded || !state.static.loaded) {\r\n    return { loaded: false };\r\n  }\r\n\r\n  const showTable =\r\n    !configLocked ||\r\n    state.config.table.cells.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showInputs =\r\n    !configLocked ||\r\n    state.config.input.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showOutputs =\r\n    !configLocked ||\r\n    state.config.output.ports.reduce((acc, cur) => {\r\n      return acc || cur.name;\r\n    }, false);\r\n\r\n  const showPorts = !configLocked || showInputs || showOutputs;\r\n\r\n  const showSelfLearning =\r\n    state.static.enabledModules.selfLearning &&\r\n    (!configLocked || state.internal.selfLearning.enabled);\r\n\r\n  const uniqueLogEnabled = state.config.logger.unique !== \"off\";\r\n\r\n  return {\r\n    loaded: true,\r\n    showTable,\r\n    showInputs,\r\n    showOutputs,\r\n    showPorts,\r\n    showSelfLearning,\r\n    configLocked,\r\n    uniqueLogEnabled\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"outer-container\">\r\n        <Sidebar api={this.props.api} />\r\n        <Main api={this.props.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const {\r\n  RECEIVE_CONFIG,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE\r\n} = require(\"../actions/types\");\r\n\r\nconst { set } = require(\"../configHelper\");\r\n\r\nconst initialState = { loaded: false, locked: true, hasChanged: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CONFIG: {\r\n      return { ...state, loaded: true, ...action.payload };\r\n    }\r\n    case CONFIG_UNLOCK: {\r\n      return { ...state, locked: false };\r\n    }\r\n    case CONFIG_LOCK: {\r\n      return { ...state, locked: true };\r\n    }\r\n    case CONFIG_CHANGE: {\r\n      if (state.locked) return state;\r\n\r\n      const { address, value } = action.payload;\r\n\r\n      set(state, address, value);\r\n\r\n      return { ...state, hasChanged: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const { RECEIVE_STATIC } = require(\"../actions/types\");\r\n\r\nconst initialState = { loaded: false };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_STATIC: {\r\n      return { loaded: true, ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  TABLE_FOUND_STATE\r\n} = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  coms: [],\r\n  outputs: [],\r\n  inputs: [],\r\n  cells: [],\r\n  selfLearning: {\r\n    enabled: false\r\n  },\r\n  tableNotFound: false\r\n};\r\n\r\nexport default function(fullState = initialState, action) {\r\n  switch (action.type) {\r\n    case INPUT_PORT_STATE: {\r\n      const { index, state, isForced } = action.payload;\r\n\r\n      const newInputs = Array.from(fullState.inputs);\r\n      newInputs[index] = { state, isForced };\r\n\r\n      return { ...fullState, inputs: newInputs };\r\n    }\r\n    case OUTPUT_PORT_STATE: {\r\n      const { index, state, result, isForced } = action.payload;\r\n\r\n      const newOutputs = Array.from(fullState.outputs);\r\n      newOutputs[index] = { state, result, isForced };\r\n\r\n      return { ...fullState, outputs: newOutputs };\r\n    }\r\n    case SERIAL_COM_STATE: {\r\n      const { index, entry, entryTime } = action.payload;\r\n\r\n      const newComs = Array.from(fullState.coms);\r\n      newComs[index] = { entry, entryTime };\r\n\r\n      return { ...fullState, coms: newComs };\r\n    }\r\n    case TABLE_CELL_STATE: {\r\n      const { index, value, manual } = action.payload;\r\n\r\n      const newCells = Array.from(fullState.cells);\r\n      newCells[index] = { value, manual };\r\n\r\n      return { ...fullState, cells: newCells };\r\n    }\r\n    case SELFLEARNING_STATE: {\r\n      return {\r\n        ...fullState,\r\n        selfLearning: { enabled: true, ...action.payload }\r\n      };\r\n    }\r\n    case TABLE_FOUND_STATE: {\r\n      return {\r\n        ...fullState,\r\n        tableNotFound: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return fullState;\r\n  }\r\n}\r\n","const { RECEIVE_IP, RECEIVE_TIME, TOGGLE_MENU } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  ip: \"\",\r\n  time: new Date().getTime(),\r\n  isMenuOpen: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_IP: {\r\n      return {\r\n        ...state,\r\n        ip: action.payload\r\n      };\r\n    }\r\n    case RECEIVE_TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    }\r\n    case TOGGLE_MENU: {\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport configReducer from \"./configReducer\";\r\nimport staticReducer from \"./staticReducer\";\r\nimport internalReducer from \"./internalReducer\";\r\nimport miscReducer from \"./miscReducer\";\r\n\r\nexport default combineReducers({\r\n  config: configReducer,\r\n  static: staticReducer,\r\n  internal: internalReducer,\r\n  misc: miscReducer\r\n});\r\n","import socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  INPUT_PORT_STATE,\r\n  OUTPUT_PORT_STATE,\r\n  SERIAL_COM_STATE,\r\n  TABLE_CELL_STATE,\r\n  SELFLEARNING_STATE,\r\n  RECEIVE_IP,\r\n  RECEIVE_TIME,\r\n  TOGGLE_MENU,\r\n  CONFIG_UNLOCK,\r\n  CONFIG_LOCK,\r\n  CONFIG_CHANGE,\r\n  RECEIVE_CONFIG,\r\n  RECEIVE_STATIC,\r\n  TABLE_FOUND_STATE\r\n} from \"./actions/types\";\r\n\r\nfunction api(store) {\r\n  const socket = socketIOClient();\r\n\r\n  const messageTypes = {\r\n    input: INPUT_PORT_STATE,\r\n    output: OUTPUT_PORT_STATE,\r\n    table: TABLE_CELL_STATE,\r\n    entry: SERIAL_COM_STATE,\r\n    selfLearning: SELFLEARNING_STATE,\r\n    ip: RECEIVE_IP,\r\n    time: RECEIVE_TIME,\r\n    notfound: TABLE_FOUND_STATE\r\n  };\r\n\r\n  for (let message in messageTypes) {\r\n    socket.on(message, payload => {\r\n      store.dispatch({ type: messageTypes[message], payload });\r\n    });\r\n  }\r\n\r\n  function loadConfig() {\r\n    axios\r\n      .get(\"/config\")\r\n      .then(result => {\r\n        console.log(\"Got config\");\r\n        store.dispatch({ type: RECEIVE_CONFIG, payload: result.data });\r\n      })\r\n      .catch(err => console.log(\"/config\", err));\r\n  }\r\n\r\n  function loadStatic() {\r\n    axios.get(\"/static\").then(result => {\r\n      console.log(\"Got static\");\r\n      store.dispatch({ type: RECEIVE_STATIC, payload: result.data });\r\n      document.title = result.data.name;\r\n    });\r\n  }\r\n\r\n  function forceInput(index) {\r\n    console.log(\"forceinput\", index);\r\n    socket.emit(\"forceInput\", index);\r\n  }\r\n\r\n  function forceOutput(index) {\r\n    console.log(\"forceoutput\", index);\r\n    socket.emit(\"forceOutput\", index);\r\n  }\r\n\r\n  function tableManual(index, value) {\r\n    socket.emit(\"manual\", { index, value });\r\n  }\r\n\r\n  function getLog() {\r\n    return axios.get(\"/comlog\");\r\n  }\r\n\r\n  function getUniqueLog() {\r\n    return axios.get(\"/comlogu\");\r\n  }\r\n\r\n  function reboot() {\r\n    axios.get(\"/restart\");\r\n    setTimeout(() => {\r\n      loadConfig();\r\n      console.log(\"test\");\r\n    }, 5000);\r\n  }\r\n\r\n  function shutdown() {\r\n    axios.get(\"/shutdown\");\r\n  }\r\n\r\n  async function getLogo() {\r\n    let logo = false;\r\n    try {\r\n      await axios.get(\"/logo\");\r\n      logo = \"/logo\";\r\n    } finally {\r\n      return logo;\r\n    }\r\n  }\r\n\r\n  function toggleMenu() {\r\n    store.dispatch({ type: TOGGLE_MENU });\r\n  }\r\n\r\n  function unlockConfig() {\r\n    store.dispatch({ type: CONFIG_UNLOCK });\r\n  }\r\n\r\n  function saveConfig() {\r\n    if (store.getState().config.hasChanged) {\r\n      if (window.confirm(\"Are you sure you want to save these changes?\")) {\r\n        const newConfig = store.getState().config;\r\n        delete newConfig.loaded;\r\n        delete newConfig.locked;\r\n        delete newConfig.hasChanged;\r\n        console.log(newConfig);\r\n        socket.emit(\"settings\", newConfig);\r\n        store.dispatch({ type: CONFIG_LOCK });\r\n        reboot();\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      store.dispatch({ type: CONFIG_LOCK });\r\n    }\r\n  }\r\n\r\n  function changeConfig(event) {\r\n    const address = event.target.name;\r\n    let value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    } else if (event.target.type === \"number\") {\r\n      value = Number(event.target.value);\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    console.log({ address, value });\r\n\r\n    store.dispatch({ type: CONFIG_CHANGE, payload: { address, value } });\r\n  }\r\n\r\n  loadConfig();\r\n  loadStatic();\r\n\r\n  return {\r\n    forceInput,\r\n    forceOutput,\r\n    tableManual,\r\n    getLog,\r\n    getUniqueLog,\r\n    reboot,\r\n    shutdown,\r\n    getLogo,\r\n    toggleMenu,\r\n    unlockConfig,\r\n    saveConfig,\r\n    changeConfig\r\n  };\r\n}\r\n\r\nexport default api;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport api from \"./api\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/global.scss\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App api={api(store)} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function stringMapFromArray(array) {\r\n  const result = {};\r\n  array.forEach(elem => {\r\n    result[elem] = elem;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst actionTypes = [\r\n  \"RECEIVE_TIME\",\r\n  \"RECEIVE_IP\",\r\n  \"TOGGLE_MENU\",\r\n  \"RECEIVE_CONFIG\",\r\n  \"RECEIVE_STATIC\",\r\n  \"INPUT_PORT_STATE\",\r\n  \"OUTPUT_PORT_STATE\",\r\n  \"SERIAL_COM_STATE\",\r\n  \"TABLE_CELL_STATE\",\r\n  \"SELFLEARNING_STATE\",\r\n  \"CONFIG_UNLOCK\",\r\n  \"CONFIG_LOCK\",\r\n  \"CONFIG_CHANGE\",\r\n  \"TABLE_FOUND_STATE\"\r\n];\r\n\r\nmodule.exports = stringMapFromArray(actionTypes);\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo-MBDC.645b4549.jpg\";"],"sourceRoot":""}